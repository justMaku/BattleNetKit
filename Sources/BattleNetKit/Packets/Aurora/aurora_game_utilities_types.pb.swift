// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/game_utilities_types.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_GameUtilities_V1_PlayerVariables {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var identity: Bgs_Protocol_Identity {
    get {return _storage._identity ?? Bgs_Protocol_Identity()}
    set {_uniqueStorage()._identity = newValue}
  }
  /// Returns true if `identity` has been explicitly set.
  public var hasIdentity: Bool {return _storage._identity != nil}
  /// Clears the value of `identity`. Subsequent reads from it will return its default value.
  public mutating func clearIdentity() {_uniqueStorage()._identity = nil}

  public var rating: Double {
    get {return _storage._rating ?? 0}
    set {_uniqueStorage()._rating = newValue}
  }
  /// Returns true if `rating` has been explicitly set.
  public var hasRating: Bool {return _storage._rating != nil}
  /// Clears the value of `rating`. Subsequent reads from it will return its default value.
  public mutating func clearRating() {_uniqueStorage()._rating = nil}

  public var attribute: [Bgs_Protocol_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_ClientInfo {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var clientAddress: String {
    get {return _clientAddress ?? String()}
    set {_clientAddress = newValue}
  }
  /// Returns true if `clientAddress` has been explicitly set.
  public var hasClientAddress: Bool {return self._clientAddress != nil}
  /// Clears the value of `clientAddress`. Subsequent reads from it will return its default value.
  public mutating func clearClientAddress() {self._clientAddress = nil}

  public var privilegedNetwork: Bool {
    get {return _privilegedNetwork ?? false}
    set {_privilegedNetwork = newValue}
  }
  /// Returns true if `privilegedNetwork` has been explicitly set.
  public var hasPrivilegedNetwork: Bool {return self._privilegedNetwork != nil}
  /// Clears the value of `privilegedNetwork`. Subsequent reads from it will return its default value.
  public mutating func clearPrivilegedNetwork() {self._privilegedNetwork = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _clientAddress: String? = nil
  fileprivate var _privilegedNetwork: Bool? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.game_utilities.v1"

extension Bgs_Protocol_GameUtilities_V1_PlayerVariables: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PlayerVariables"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "identity"),
    2: .same(proto: "rating"),
    3: .same(proto: "attribute"),
  ]

  fileprivate class _StorageClass {
    var _identity: Bgs_Protocol_Identity? = nil
    var _rating: Double? = nil
    var _attribute: [Bgs_Protocol_Attribute] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _identity = source._identity
      _rating = source._rating
      _attribute = source._attribute
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._identity == nil {return false}
      if let v = _storage._identity, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._attribute) {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._identity)
        case 2: try decoder.decodeSingularDoubleField(value: &_storage._rating)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._identity {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._rating {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 2)
      }
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_PlayerVariables, rhs: Bgs_Protocol_GameUtilities_V1_PlayerVariables) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._identity != rhs_storage._identity {return false}
        if _storage._rating != rhs_storage._rating {return false}
        if _storage._attribute != rhs_storage._attribute {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_ClientInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ClientInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "client_address"),
    2: .standard(proto: "privileged_network"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._clientAddress)
      case 2: try decoder.decodeSingularBoolField(value: &self._privilegedNetwork)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._clientAddress {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._privilegedNetwork {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_ClientInfo, rhs: Bgs_Protocol_GameUtilities_V1_ClientInfo) -> Bool {
    if lhs._clientAddress != rhs._clientAddress {return false}
    if lhs._privilegedNetwork != rhs._privilegedNetwork {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
