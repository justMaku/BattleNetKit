// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/invitation_types.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Bgs_Protocol_InvitationRemovedReason: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case accepted // = 0
  case declined // = 1
  case revoked // = 2
  case ignored // = 3
  case expired // = 4
  case canceled // = 5

  public init() {
    self = .accepted
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .accepted
    case 1: self = .declined
    case 2: self = .revoked
    case 3: self = .ignored
    case 4: self = .expired
    case 5: self = .canceled
    default: return nil
    }
  }

  public var rawValue: Int {
    switch self {
    case .accepted: return 0
    case .declined: return 1
    case .revoked: return 2
    case .ignored: return 3
    case .expired: return 4
    case .canceled: return 5
    }
  }

}

public enum Bgs_Protocol_SuggestionRemovedReason: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case approved // = 0
  case declined // = 1
  case expired // = 2
  case canceled // = 3

  public init() {
    self = .approved
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .approved
    case 1: self = .declined
    case 2: self = .expired
    case 3: self = .canceled
    default: return nil
    }
  }

  public var rawValue: Int {
    switch self {
    case .approved: return 0
    case .declined: return 1
    case .expired: return 2
    case .canceled: return 3
    }
  }

}

public struct Bgs_Protocol_Invitation: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".Invitation"

  public var id: UInt64 {
    get {return _storage._id ?? 0}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  public var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  public mutating func clearID() {_storage._id = nil}

  public var inviterIdentity: Bgs_Protocol_Identity {
    get {return _storage._inviterIdentity ?? Bgs_Protocol_Identity()}
    set {_uniqueStorage()._inviterIdentity = newValue}
  }
  /// Returns true if `inviterIdentity` has been explicitly set.
  public var hasInviterIdentity: Bool {return _storage._inviterIdentity != nil}
  /// Clears the value of `inviterIdentity`. Subsequent reads from it will return its default value.
  public mutating func clearInviterIdentity() {_storage._inviterIdentity = nil}

  public var inviteeIdentity: Bgs_Protocol_Identity {
    get {return _storage._inviteeIdentity ?? Bgs_Protocol_Identity()}
    set {_uniqueStorage()._inviteeIdentity = newValue}
  }
  /// Returns true if `inviteeIdentity` has been explicitly set.
  public var hasInviteeIdentity: Bool {return _storage._inviteeIdentity != nil}
  /// Clears the value of `inviteeIdentity`. Subsequent reads from it will return its default value.
  public mutating func clearInviteeIdentity() {_storage._inviteeIdentity = nil}

  public var inviterName: String {
    get {return _storage._inviterName ?? String()}
    set {_uniqueStorage()._inviterName = newValue}
  }
  /// Returns true if `inviterName` has been explicitly set.
  public var hasInviterName: Bool {return _storage._inviterName != nil}
  /// Clears the value of `inviterName`. Subsequent reads from it will return its default value.
  public mutating func clearInviterName() {_storage._inviterName = nil}

  public var inviteeName: String {
    get {return _storage._inviteeName ?? String()}
    set {_uniqueStorage()._inviteeName = newValue}
  }
  /// Returns true if `inviteeName` has been explicitly set.
  public var hasInviteeName: Bool {return _storage._inviteeName != nil}
  /// Clears the value of `inviteeName`. Subsequent reads from it will return its default value.
  public mutating func clearInviteeName() {_storage._inviteeName = nil}

  public var invitationMessage: String {
    get {return _storage._invitationMessage ?? String()}
    set {_uniqueStorage()._invitationMessage = newValue}
  }
  /// Returns true if `invitationMessage` has been explicitly set.
  public var hasInvitationMessage: Bool {return _storage._invitationMessage != nil}
  /// Clears the value of `invitationMessage`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationMessage() {_storage._invitationMessage = nil}

  public var creationTime: UInt64 {
    get {return _storage._creationTime ?? 0}
    set {_uniqueStorage()._creationTime = newValue}
  }
  /// Returns true if `creationTime` has been explicitly set.
  public var hasCreationTime: Bool {return _storage._creationTime != nil}
  /// Clears the value of `creationTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreationTime() {_storage._creationTime = nil}

  public var expirationTime: UInt64 {
    get {return _storage._expirationTime ?? 0}
    set {_uniqueStorage()._expirationTime = newValue}
  }
  /// Returns true if `expirationTime` has been explicitly set.
  public var hasExpirationTime: Bool {return _storage._expirationTime != nil}
  /// Clears the value of `expirationTime`. Subsequent reads from it will return its default value.
  public mutating func clearExpirationTime() {_storage._expirationTime = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._id == nil {return false}
      if _storage._inviterIdentity == nil {return false}
      if _storage._inviteeIdentity == nil {return false}
      if let v = _storage._inviterIdentity, !v.isInitialized {return false}
      if let v = _storage._inviteeIdentity, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularFixed64Field(value: &_storage._id)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._inviterIdentity)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._inviteeIdentity)
        case 4: try decoder.decodeSingularStringField(value: &_storage._inviterName)
        case 5: try decoder.decodeSingularStringField(value: &_storage._inviteeName)
        case 6: try decoder.decodeSingularStringField(value: &_storage._invitationMessage)
        case 7: try decoder.decodeSingularUInt64Field(value: &_storage._creationTime)
        case 8: try decoder.decodeSingularUInt64Field(value: &_storage._expirationTime)
        case 100..<10001:
          try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Bgs_Protocol_Invitation.self, fieldNumber: fieldNumber)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._id {
        try visitor.visitSingularFixed64Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._inviterIdentity {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._inviteeIdentity {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._inviterName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._inviteeName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      }
      if let v = _storage._invitationMessage {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      }
      if let v = _storage._creationTime {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 7)
      }
      if let v = _storage._expirationTime {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 8)
      }
      try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 100, end: 10001)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_InvitationParams: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".InvitationParams"

  public var invitationMessage: String {
    get {return _invitationMessage ?? String()}
    set {_invitationMessage = newValue}
  }
  /// Returns true if `invitationMessage` has been explicitly set.
  public var hasInvitationMessage: Bool {return self._invitationMessage != nil}
  /// Clears the value of `invitationMessage`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationMessage() {self._invitationMessage = nil}

  public var expirationTime: UInt64 {
    get {return _expirationTime ?? 0}
    set {_expirationTime = newValue}
  }
  /// Returns true if `expirationTime` has been explicitly set.
  public var hasExpirationTime: Bool {return self._expirationTime != nil}
  /// Clears the value of `expirationTime`. Subsequent reads from it will return its default value.
  public mutating func clearExpirationTime() {self._expirationTime = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._invitationMessage)
      case 2: try decoder.decodeSingularUInt64Field(value: &self._expirationTime)
      case 100..<10001:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Bgs_Protocol_InvitationParams.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._invitationMessage {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._expirationTime {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 2)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 100, end: 10001)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _invitationMessage: String? = nil
  fileprivate var _expirationTime: UInt64? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol"

extension Bgs_Protocol_InvitationRemovedReason: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "INVITATION_REMOVED_REASON_ACCEPTED"),
    1: .same(proto: "INVITATION_REMOVED_REASON_DECLINED"),
    2: .same(proto: "INVITATION_REMOVED_REASON_REVOKED"),
    3: .same(proto: "INVITATION_REMOVED_REASON_IGNORED"),
    4: .same(proto: "INVITATION_REMOVED_REASON_EXPIRED"),
    5: .same(proto: "INVITATION_REMOVED_REASON_CANCELED"),
  ]
}

extension Bgs_Protocol_SuggestionRemovedReason: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SUGGESTION_REMOVED_REASON_APPROVED"),
    1: .same(proto: "SUGGESTION_REMOVED_REASON_DECLINED"),
    2: .same(proto: "SUGGESTION_REMOVED_REASON_EXPIRED"),
    3: .same(proto: "SUGGESTION_REMOVED_REASON_CANCELED"),
  ]
}

extension Bgs_Protocol_Invitation: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "inviter_identity"),
    3: .standard(proto: "invitee_identity"),
    4: .standard(proto: "inviter_name"),
    5: .standard(proto: "invitee_name"),
    6: .standard(proto: "invitation_message"),
    7: .standard(proto: "creation_time"),
    8: .standard(proto: "expiration_time"),
  ]

  fileprivate class _StorageClass {
    var _id: UInt64? = nil
    var _inviterIdentity: Bgs_Protocol_Identity? = nil
    var _inviteeIdentity: Bgs_Protocol_Identity? = nil
    var _inviterName: String? = nil
    var _inviteeName: String? = nil
    var _invitationMessage: String? = nil
    var _creationTime: UInt64? = nil
    var _expirationTime: UInt64? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _inviterIdentity = source._inviterIdentity
      _inviteeIdentity = source._inviteeIdentity
      _inviterName = source._inviterName
      _inviteeName = source._inviteeName
      _invitationMessage = source._invitationMessage
      _creationTime = source._creationTime
      _expirationTime = source._expirationTime
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Invitation) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._id != other_storage._id {return false}
        if _storage._inviterIdentity != other_storage._inviterIdentity {return false}
        if _storage._inviteeIdentity != other_storage._inviteeIdentity {return false}
        if _storage._inviterName != other_storage._inviterName {return false}
        if _storage._inviteeName != other_storage._inviteeName {return false}
        if _storage._invitationMessage != other_storage._invitationMessage {return false}
        if _storage._creationTime != other_storage._creationTime {return false}
        if _storage._expirationTime != other_storage._expirationTime {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Bgs_Protocol_InvitationParams: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "invitation_message"),
    2: .standard(proto: "expiration_time"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_InvitationParams) -> Bool {
    if self._invitationMessage != other._invitationMessage {return false}
    if self._expirationTime != other._expirationTime {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}
