// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/game_utilities_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_GameUtilities_V1_ClientRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attribute: [Bgs_Protocol_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var accountID: Bgs_Protocol_EntityId {
    get {return _storage._accountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._accountID = newValue}
  }
  /// Returns true if `accountID` has been explicitly set.
  public var hasAccountID: Bool {return _storage._accountID != nil}
  /// Clears the value of `accountID`. Subsequent reads from it will return its default value.
  public mutating func clearAccountID() {_uniqueStorage()._accountID = nil}

  public var gameAccountID: Bgs_Protocol_EntityId {
    get {return _storage._gameAccountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._gameAccountID = newValue}
  }
  /// Returns true if `gameAccountID` has been explicitly set.
  public var hasGameAccountID: Bool {return _storage._gameAccountID != nil}
  /// Clears the value of `gameAccountID`. Subsequent reads from it will return its default value.
  public mutating func clearGameAccountID() {_uniqueStorage()._gameAccountID = nil}

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_uniqueStorage()._program = nil}

  public var clientInfo: Bgs_Protocol_GameUtilities_V1_ClientInfo {
    get {return _storage._clientInfo ?? Bgs_Protocol_GameUtilities_V1_ClientInfo()}
    set {_uniqueStorage()._clientInfo = newValue}
  }
  /// Returns true if `clientInfo` has been explicitly set.
  public var hasClientInfo: Bool {return _storage._clientInfo != nil}
  /// Clears the value of `clientInfo`. Subsequent reads from it will return its default value.
  public mutating func clearClientInfo() {_uniqueStorage()._clientInfo = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_ClientResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attribute: [Bgs_Protocol_Attribute] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Bgs_Protocol_GameUtilities_V1_ServerRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attribute: [Bgs_Protocol_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_uniqueStorage()._program = nil}

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_ServerResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attribute: [Bgs_Protocol_Attribute] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Bgs_Protocol_GameUtilities_V1_PresenceChannelCreatedRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var id: Bgs_Protocol_EntityId {
    get {return _storage._id ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  public var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  public mutating func clearID() {_uniqueStorage()._id = nil}

  public var gameAccountID: Bgs_Protocol_EntityId {
    get {return _storage._gameAccountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._gameAccountID = newValue}
  }
  /// Returns true if `gameAccountID` has been explicitly set.
  public var hasGameAccountID: Bool {return _storage._gameAccountID != nil}
  /// Clears the value of `gameAccountID`. Subsequent reads from it will return its default value.
  public mutating func clearGameAccountID() {_uniqueStorage()._gameAccountID = nil}

  public var accountID: Bgs_Protocol_EntityId {
    get {return _storage._accountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._accountID = newValue}
  }
  /// Returns true if `accountID` has been explicitly set.
  public var hasAccountID: Bool {return _storage._accountID != nil}
  /// Clears the value of `accountID`. Subsequent reads from it will return its default value.
  public mutating func clearAccountID() {_uniqueStorage()._accountID = nil}

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var playerVariables: [Bgs_Protocol_GameUtilities_V1_PlayerVariables] {
    get {return _storage._playerVariables}
    set {_uniqueStorage()._playerVariables = newValue}
  }

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var playerVariables: [Bgs_Protocol_GameUtilities_V1_PlayerVariables] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Bgs_Protocol_GameUtilities_V1_GameAccountOnlineNotification {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var gameAccountID: Bgs_Protocol_EntityId {
    get {return _storage._gameAccountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._gameAccountID = newValue}
  }
  /// Returns true if `gameAccountID` has been explicitly set.
  public var hasGameAccountID: Bool {return _storage._gameAccountID != nil}
  /// Clears the value of `gameAccountID`. Subsequent reads from it will return its default value.
  public mutating func clearGameAccountID() {_uniqueStorage()._gameAccountID = nil}

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var sessionID: String {
    get {return _storage._sessionID ?? String()}
    set {_uniqueStorage()._sessionID = newValue}
  }
  /// Returns true if `sessionID` has been explicitly set.
  public var hasSessionID: Bool {return _storage._sessionID != nil}
  /// Clears the value of `sessionID`. Subsequent reads from it will return its default value.
  public mutating func clearSessionID() {_uniqueStorage()._sessionID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GameAccountOfflineNotification {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var gameAccountID: Bgs_Protocol_EntityId {
    get {return _storage._gameAccountID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._gameAccountID = newValue}
  }
  /// Returns true if `gameAccountID` has been explicitly set.
  public var hasGameAccountID: Bool {return _storage._gameAccountID != nil}
  /// Clears the value of `gameAccountID`. Subsequent reads from it will return its default value.
  public mutating func clearGameAccountID() {_uniqueStorage()._gameAccountID = nil}

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var sessionID: String {
    get {return _storage._sessionID ?? String()}
    set {_uniqueStorage()._sessionID = newValue}
  }
  /// Returns true if `sessionID` has been explicitly set.
  public var hasSessionID: Bool {return _storage._sessionID != nil}
  /// Clears the value of `sessionID`. Subsequent reads from it will return its default value.
  public mutating func clearSessionID() {_uniqueStorage()._sessionID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetAchievementsFileRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var host: Bgs_Protocol_ProcessId {
    get {return _storage._host ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._host = newValue}
  }
  /// Returns true if `host` has been explicitly set.
  public var hasHost: Bool {return _storage._host != nil}
  /// Clears the value of `host`. Subsequent reads from it will return its default value.
  public mutating func clearHost() {_uniqueStorage()._host = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetAchievementsFileResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var contentHandle: Bgs_Protocol_ContentHandle {
    get {return _storage._contentHandle ?? Bgs_Protocol_ContentHandle()}
    set {_uniqueStorage()._contentHandle = newValue}
  }
  /// Returns true if `contentHandle` has been explicitly set.
  public var hasContentHandle: Bool {return _storage._contentHandle != nil}
  /// Clears the value of `contentHandle`. Subsequent reads from it will return its default value.
  public mutating func clearContentHandle() {_uniqueStorage()._contentHandle = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attributeKey: String {
    get {return _storage._attributeKey ?? String()}
    set {_uniqueStorage()._attributeKey = newValue}
  }
  /// Returns true if `attributeKey` has been explicitly set.
  public var hasAttributeKey: Bool {return _storage._attributeKey != nil}
  /// Clears the value of `attributeKey`. Subsequent reads from it will return its default value.
  public mutating func clearAttributeKey() {_uniqueStorage()._attributeKey = nil}

  public var agentID: Bgs_Protocol_EntityId {
    get {return _storage._agentID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_uniqueStorage()._agentID = nil}

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_uniqueStorage()._program = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attributeValue: [Bgs_Protocol_Variant] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var attribute: [Bgs_Protocol_Attribute] = []

  public var program: UInt32 {
    get {return _program ?? 0}
    set {_program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return self._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {self._program = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _program: UInt32? = nil
}

public struct Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var clientID: String {
    get {return _clientID ?? String()}
    set {_clientID = newValue}
  }
  /// Returns true if `clientID` has been explicitly set.
  public var hasClientID: Bool {return self._clientID != nil}
  /// Clears the value of `clientID`. Subsequent reads from it will return its default value.
  public mutating func clearClientID() {self._clientID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _clientID: String? = nil
}

public struct Bgs_Protocol_GameUtilities_V1_UnregisterUtilitiesRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.game_utilities.v1"

extension Bgs_Protocol_GameUtilities_V1_ClientRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ClientRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
    2: .same(proto: "host"),
    3: .standard(proto: "account_id"),
    4: .standard(proto: "game_account_id"),
    5: .same(proto: "program"),
    6: .standard(proto: "client_info"),
  ]

  fileprivate class _StorageClass {
    var _attribute: [Bgs_Protocol_Attribute] = []
    var _host: Bgs_Protocol_ProcessId? = nil
    var _accountID: Bgs_Protocol_EntityId? = nil
    var _gameAccountID: Bgs_Protocol_EntityId? = nil
    var _program: UInt32? = nil
    var _clientInfo: Bgs_Protocol_GameUtilities_V1_ClientInfo? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _attribute = source._attribute
      _host = source._host
      _accountID = source._accountID
      _gameAccountID = source._gameAccountID
      _program = source._program
      _clientInfo = source._clientInfo
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._attribute) {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      if let v = _storage._accountID, !v.isInitialized {return false}
      if let v = _storage._gameAccountID, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._host)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._accountID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._gameAccountID)
        case 5: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._clientInfo)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 1)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._accountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._gameAccountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._clientInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_ClientRequest, rhs: Bgs_Protocol_GameUtilities_V1_ClientRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._attribute != rhs_storage._attribute {return false}
        if _storage._host != rhs_storage._host {return false}
        if _storage._accountID != rhs_storage._accountID {return false}
        if _storage._gameAccountID != rhs_storage._gameAccountID {return false}
        if _storage._program != rhs_storage._program {return false}
        if _storage._clientInfo != rhs_storage._clientInfo {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_ClientResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ClientResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
  ]

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.attribute) {return false}
    return true
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.attribute)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.attribute.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attribute, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_ClientResponse, rhs: Bgs_Protocol_GameUtilities_V1_ClientResponse) -> Bool {
    if lhs.attribute != rhs.attribute {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_ServerRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ServerRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
    2: .same(proto: "program"),
    3: .same(proto: "host"),
  ]

  fileprivate class _StorageClass {
    var _attribute: [Bgs_Protocol_Attribute] = []
    var _program: UInt32? = nil
    var _host: Bgs_Protocol_ProcessId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _attribute = source._attribute
      _program = source._program
      _host = source._host
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._program == nil {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._attribute) {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        case 2: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._host)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 1)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_ServerRequest, rhs: Bgs_Protocol_GameUtilities_V1_ServerRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._attribute != rhs_storage._attribute {return false}
        if _storage._program != rhs_storage._program {return false}
        if _storage._host != rhs_storage._host {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_ServerResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ServerResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
  ]

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.attribute) {return false}
    return true
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.attribute)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.attribute.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attribute, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_ServerResponse, rhs: Bgs_Protocol_GameUtilities_V1_ServerResponse) -> Bool {
    if lhs.attribute != rhs.attribute {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_PresenceChannelCreatedRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PresenceChannelCreatedRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    3: .standard(proto: "game_account_id"),
    4: .standard(proto: "account_id"),
    5: .same(proto: "host"),
  ]

  fileprivate class _StorageClass {
    var _id: Bgs_Protocol_EntityId? = nil
    var _gameAccountID: Bgs_Protocol_EntityId? = nil
    var _accountID: Bgs_Protocol_EntityId? = nil
    var _host: Bgs_Protocol_ProcessId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _gameAccountID = source._gameAccountID
      _accountID = source._accountID
      _host = source._host
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._id == nil {return false}
      if let v = _storage._id, !v.isInitialized {return false}
      if let v = _storage._gameAccountID, !v.isInitialized {return false}
      if let v = _storage._accountID, !v.isInitialized {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._id)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._gameAccountID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._accountID)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._host)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._id {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._gameAccountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._accountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_PresenceChannelCreatedRequest, rhs: Bgs_Protocol_GameUtilities_V1_PresenceChannelCreatedRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._gameAccountID != rhs_storage._gameAccountID {return false}
        if _storage._accountID != rhs_storage._accountID {return false}
        if _storage._host != rhs_storage._host {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetPlayerVariablesRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "player_variables"),
    2: .same(proto: "host"),
  ]

  fileprivate class _StorageClass {
    var _playerVariables: [Bgs_Protocol_GameUtilities_V1_PlayerVariables] = []
    var _host: Bgs_Protocol_ProcessId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _playerVariables = source._playerVariables
      _host = source._host
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._playerVariables) {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._playerVariables)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._host)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._playerVariables.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._playerVariables, fieldNumber: 1)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesRequest, rhs: Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._playerVariables != rhs_storage._playerVariables {return false}
        if _storage._host != rhs_storage._host {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetPlayerVariablesResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "player_variables"),
  ]

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.playerVariables) {return false}
    return true
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.playerVariables)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.playerVariables.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.playerVariables, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesResponse, rhs: Bgs_Protocol_GameUtilities_V1_GetPlayerVariablesResponse) -> Bool {
    if lhs.playerVariables != rhs.playerVariables {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GameAccountOnlineNotification: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GameAccountOnlineNotification"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "game_account_id"),
    2: .same(proto: "host"),
    3: .standard(proto: "session_id"),
  ]

  fileprivate class _StorageClass {
    var _gameAccountID: Bgs_Protocol_EntityId? = nil
    var _host: Bgs_Protocol_ProcessId? = nil
    var _sessionID: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _gameAccountID = source._gameAccountID
      _host = source._host
      _sessionID = source._sessionID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._gameAccountID == nil {return false}
      if let v = _storage._gameAccountID, !v.isInitialized {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._gameAccountID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._host)
        case 3: try decoder.decodeSingularStringField(value: &_storage._sessionID)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._gameAccountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._sessionID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GameAccountOnlineNotification, rhs: Bgs_Protocol_GameUtilities_V1_GameAccountOnlineNotification) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._gameAccountID != rhs_storage._gameAccountID {return false}
        if _storage._host != rhs_storage._host {return false}
        if _storage._sessionID != rhs_storage._sessionID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GameAccountOfflineNotification: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GameAccountOfflineNotification"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "game_account_id"),
    2: .same(proto: "host"),
    3: .standard(proto: "session_id"),
  ]

  fileprivate class _StorageClass {
    var _gameAccountID: Bgs_Protocol_EntityId? = nil
    var _host: Bgs_Protocol_ProcessId? = nil
    var _sessionID: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _gameAccountID = source._gameAccountID
      _host = source._host
      _sessionID = source._sessionID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._gameAccountID == nil {return false}
      if let v = _storage._gameAccountID, !v.isInitialized {return false}
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._gameAccountID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._host)
        case 3: try decoder.decodeSingularStringField(value: &_storage._sessionID)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._gameAccountID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._sessionID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GameAccountOfflineNotification, rhs: Bgs_Protocol_GameUtilities_V1_GameAccountOfflineNotification) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._gameAccountID != rhs_storage._gameAccountID {return false}
        if _storage._host != rhs_storage._host {return false}
        if _storage._sessionID != rhs_storage._sessionID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetAchievementsFileRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetAchievementsFileRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "host"),
  ]

  fileprivate class _StorageClass {
    var _host: Bgs_Protocol_ProcessId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _host = source._host
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._host, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._host)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._host {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetAchievementsFileRequest, rhs: Bgs_Protocol_GameUtilities_V1_GetAchievementsFileRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._host != rhs_storage._host {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetAchievementsFileResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetAchievementsFileResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "content_handle"),
  ]

  fileprivate class _StorageClass {
    var _contentHandle: Bgs_Protocol_ContentHandle? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _contentHandle = source._contentHandle
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._contentHandle, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._contentHandle)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._contentHandle {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetAchievementsFileResponse, rhs: Bgs_Protocol_GameUtilities_V1_GetAchievementsFileResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._contentHandle != rhs_storage._contentHandle {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetAllValuesForAttributeRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "attribute_key"),
    2: .standard(proto: "agent_id"),
    5: .same(proto: "program"),
  ]

  fileprivate class _StorageClass {
    var _attributeKey: String? = nil
    var _agentID: Bgs_Protocol_EntityId? = nil
    var _program: UInt32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _attributeKey = source._attributeKey
      _agentID = source._agentID
      _program = source._program
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      return true
    }
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._attributeKey)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 5: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._attributeKey {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeRequest, rhs: Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._attributeKey != rhs_storage._attributeKey {return false}
        if _storage._agentID != rhs_storage._agentID {return false}
        if _storage._program != rhs_storage._program {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetAllValuesForAttributeResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "attribute_value"),
  ]

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.attributeValue) {return false}
    return true
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.attributeValue)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.attributeValue.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attributeValue, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeResponse, rhs: Bgs_Protocol_GameUtilities_V1_GetAllValuesForAttributeResponse) -> Bool {
    if lhs.attributeValue != rhs.attributeValue {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RegisterUtilitiesRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
    2: .same(proto: "program"),
  ]

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.attribute) {return false}
    return true
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.attribute)
      case 2: try decoder.decodeSingularFixed32Field(value: &self._program)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.attribute.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attribute, fieldNumber: 1)
    }
    if let v = self._program {
      try visitor.visitSingularFixed32Field(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesRequest, rhs: Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesRequest) -> Bool {
    if lhs.attribute != rhs.attribute {return false}
    if lhs._program != rhs._program {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RegisterUtilitiesResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "client_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._clientID)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._clientID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesResponse, rhs: Bgs_Protocol_GameUtilities_V1_RegisterUtilitiesResponse) -> Bool {
    if lhs._clientID != rhs._clientID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_GameUtilities_V1_UnregisterUtilitiesRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".UnregisterUtilitiesRequest"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Bgs_Protocol_GameUtilities_V1_UnregisterUtilitiesRequest, rhs: Bgs_Protocol_GameUtilities_V1_UnregisterUtilitiesRequest) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
