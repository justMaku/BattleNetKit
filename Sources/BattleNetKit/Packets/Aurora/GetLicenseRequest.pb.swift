// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: GetLicenseRequest.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct GetLicensesRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = "GetLicensesRequest"

  public var targetID: EntityId {
    get {return _storage._targetID ?? EntityId()}
    set {_uniqueStorage()._targetID = newValue}
  }
  /// Returns true if `targetID` has been explicitly set.
  public var hasTargetID: Bool {return _storage._targetID != nil}
  /// Clears the value of `targetID`. Subsequent reads from it will return its default value.
  public mutating func clearTargetID() {_storage._targetID = nil}

  public var fetchAccountLicenses: Bool {
    get {return _storage._fetchAccountLicenses ?? false}
    set {_uniqueStorage()._fetchAccountLicenses = newValue}
  }
  /// Returns true if `fetchAccountLicenses` has been explicitly set.
  public var hasFetchAccountLicenses: Bool {return _storage._fetchAccountLicenses != nil}
  /// Clears the value of `fetchAccountLicenses`. Subsequent reads from it will return its default value.
  public mutating func clearFetchAccountLicenses() {_storage._fetchAccountLicenses = nil}

  public var fetchGameAccountLicenses: Bool {
    get {return _storage._fetchGameAccountLicenses ?? false}
    set {_uniqueStorage()._fetchGameAccountLicenses = newValue}
  }
  /// Returns true if `fetchGameAccountLicenses` has been explicitly set.
  public var hasFetchGameAccountLicenses: Bool {return _storage._fetchGameAccountLicenses != nil}
  /// Clears the value of `fetchGameAccountLicenses`. Subsequent reads from it will return its default value.
  public mutating func clearFetchGameAccountLicenses() {_storage._fetchGameAccountLicenses = nil}

  public var fetchDynamicAccountLicenses: Bool {
    get {return _storage._fetchDynamicAccountLicenses ?? false}
    set {_uniqueStorage()._fetchDynamicAccountLicenses = newValue}
  }
  /// Returns true if `fetchDynamicAccountLicenses` has been explicitly set.
  public var hasFetchDynamicAccountLicenses: Bool {return _storage._fetchDynamicAccountLicenses != nil}
  /// Clears the value of `fetchDynamicAccountLicenses`. Subsequent reads from it will return its default value.
  public mutating func clearFetchDynamicAccountLicenses() {_storage._fetchDynamicAccountLicenses = nil}

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_storage._program = nil}

  public var excludeUnknownProgram: Bool {
    get {return _storage._excludeUnknownProgram ?? false}
    set {_uniqueStorage()._excludeUnknownProgram = newValue}
  }
  /// Returns true if `excludeUnknownProgram` has been explicitly set.
  public var hasExcludeUnknownProgram: Bool {return _storage._excludeUnknownProgram != nil}
  /// Clears the value of `excludeUnknownProgram`. Subsequent reads from it will return its default value.
  public mutating func clearExcludeUnknownProgram() {_storage._excludeUnknownProgram = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._targetID)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._fetchAccountLicenses)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._fetchGameAccountLicenses)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._fetchDynamicAccountLicenses)
        case 5: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._excludeUnknownProgram)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._targetID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._fetchAccountLicenses {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._fetchGameAccountLicenses {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
      }
      if let v = _storage._fetchDynamicAccountLicenses {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._excludeUnknownProgram {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension GetLicensesRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "target_id"),
    2: .standard(proto: "fetch_account_licenses"),
    3: .standard(proto: "fetch_game_account_licenses"),
    4: .standard(proto: "fetch_dynamic_account_licenses"),
    5: .same(proto: "program"),
    6: .standard(proto: "exclude_unknown_program"),
  ]

  fileprivate class _StorageClass {
    var _targetID: EntityId? = nil
    var _fetchAccountLicenses: Bool? = nil
    var _fetchGameAccountLicenses: Bool? = nil
    var _fetchDynamicAccountLicenses: Bool? = nil
    var _program: UInt32? = nil
    var _excludeUnknownProgram: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _targetID = source._targetID
      _fetchAccountLicenses = source._fetchAccountLicenses
      _fetchGameAccountLicenses = source._fetchGameAccountLicenses
      _fetchDynamicAccountLicenses = source._fetchDynamicAccountLicenses
      _program = source._program
      _excludeUnknownProgram = source._excludeUnknownProgram
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: GetLicensesRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._targetID != other_storage._targetID {return false}
        if _storage._fetchAccountLicenses != other_storage._fetchAccountLicenses {return false}
        if _storage._fetchGameAccountLicenses != other_storage._fetchGameAccountLicenses {return false}
        if _storage._fetchDynamicAccountLicenses != other_storage._fetchDynamicAccountLicenses {return false}
        if _storage._program != other_storage._program {return false}
        if _storage._excludeUnknownProgram != other_storage._excludeUnknownProgram {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
