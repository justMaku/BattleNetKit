// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/club_role.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_Club_V1_ClubPrivilegeSet: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ClubPrivilegeSet"

  public var canDestroy: Bool {
    get {return _storage._canDestroy ?? false}
    set {_uniqueStorage()._canDestroy = newValue}
  }
  /// Returns true if `canDestroy` has been explicitly set.
  public var hasCanDestroy: Bool {return _storage._canDestroy != nil}
  /// Clears the value of `canDestroy`. Subsequent reads from it will return its default value.
  public mutating func clearCanDestroy() {_storage._canDestroy = nil}

  public var canSetAttribute: Bool {
    get {return _storage._canSetAttribute ?? false}
    set {_uniqueStorage()._canSetAttribute = newValue}
  }
  /// Returns true if `canSetAttribute` has been explicitly set.
  public var hasCanSetAttribute: Bool {return _storage._canSetAttribute != nil}
  /// Clears the value of `canSetAttribute`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetAttribute() {_storage._canSetAttribute = nil}

  public var canSetName: Bool {
    get {return _storage._canSetName ?? false}
    set {_uniqueStorage()._canSetName = newValue}
  }
  /// Returns true if `canSetName` has been explicitly set.
  public var hasCanSetName: Bool {return _storage._canSetName != nil}
  /// Clears the value of `canSetName`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetName() {_storage._canSetName = nil}

  public var canSetDescription: Bool {
    get {return _storage._canSetDescription ?? false}
    set {_uniqueStorage()._canSetDescription = newValue}
  }
  /// Returns true if `canSetDescription` has been explicitly set.
  public var hasCanSetDescription: Bool {return _storage._canSetDescription != nil}
  /// Clears the value of `canSetDescription`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetDescription() {_storage._canSetDescription = nil}

  public var canSetAvatar: Bool {
    get {return _storage._canSetAvatar ?? false}
    set {_uniqueStorage()._canSetAvatar = newValue}
  }
  /// Returns true if `canSetAvatar` has been explicitly set.
  public var hasCanSetAvatar: Bool {return _storage._canSetAvatar != nil}
  /// Clears the value of `canSetAvatar`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetAvatar() {_storage._canSetAvatar = nil}

  public var canSetBroadcast: Bool {
    get {return _storage._canSetBroadcast ?? false}
    set {_uniqueStorage()._canSetBroadcast = newValue}
  }
  /// Returns true if `canSetBroadcast` has been explicitly set.
  public var hasCanSetBroadcast: Bool {return _storage._canSetBroadcast != nil}
  /// Clears the value of `canSetBroadcast`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetBroadcast() {_storage._canSetBroadcast = nil}

  public var canSetPrivacyLevel: Bool {
    get {return _storage._canSetPrivacyLevel ?? false}
    set {_uniqueStorage()._canSetPrivacyLevel = newValue}
  }
  /// Returns true if `canSetPrivacyLevel` has been explicitly set.
  public var hasCanSetPrivacyLevel: Bool {return _storage._canSetPrivacyLevel != nil}
  /// Clears the value of `canSetPrivacyLevel`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetPrivacyLevel() {_storage._canSetPrivacyLevel = nil}

  public var canKickMember: Bool {
    get {return _storage._canKickMember ?? false}
    set {_uniqueStorage()._canKickMember = newValue}
  }
  /// Returns true if `canKickMember` has been explicitly set.
  public var hasCanKickMember: Bool {return _storage._canKickMember != nil}
  /// Clears the value of `canKickMember`. Subsequent reads from it will return its default value.
  public mutating func clearCanKickMember() {_storage._canKickMember = nil}

  public var canSetOwnMemberAttribute: Bool {
    get {return _storage._canSetOwnMemberAttribute ?? false}
    set {_uniqueStorage()._canSetOwnMemberAttribute = newValue}
  }
  /// Returns true if `canSetOwnMemberAttribute` has been explicitly set.
  public var hasCanSetOwnMemberAttribute: Bool {return _storage._canSetOwnMemberAttribute != nil}
  /// Clears the value of `canSetOwnMemberAttribute`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOwnMemberAttribute() {_storage._canSetOwnMemberAttribute = nil}

  public var canSetOtherMemberAttribute: Bool {
    get {return _storage._canSetOtherMemberAttribute ?? false}
    set {_uniqueStorage()._canSetOtherMemberAttribute = newValue}
  }
  /// Returns true if `canSetOtherMemberAttribute` has been explicitly set.
  public var hasCanSetOtherMemberAttribute: Bool {return _storage._canSetOtherMemberAttribute != nil}
  /// Clears the value of `canSetOtherMemberAttribute`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOtherMemberAttribute() {_storage._canSetOtherMemberAttribute = nil}

  public var canSetOwnVoiceState: Bool {
    get {return _storage._canSetOwnVoiceState ?? false}
    set {_uniqueStorage()._canSetOwnVoiceState = newValue}
  }
  /// Returns true if `canSetOwnVoiceState` has been explicitly set.
  public var hasCanSetOwnVoiceState: Bool {return _storage._canSetOwnVoiceState != nil}
  /// Clears the value of `canSetOwnVoiceState`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOwnVoiceState() {_storage._canSetOwnVoiceState = nil}

  public var canSetOwnPresenceLevel: Bool {
    get {return _storage._canSetOwnPresenceLevel ?? false}
    set {_uniqueStorage()._canSetOwnPresenceLevel = newValue}
  }
  /// Returns true if `canSetOwnPresenceLevel` has been explicitly set.
  public var hasCanSetOwnPresenceLevel: Bool {return _storage._canSetOwnPresenceLevel != nil}
  /// Clears the value of `canSetOwnPresenceLevel`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOwnPresenceLevel() {_storage._canSetOwnPresenceLevel = nil}

  public var canSetOwnWhisperLevel: Bool {
    get {return _storage._canSetOwnWhisperLevel ?? false}
    set {_uniqueStorage()._canSetOwnWhisperLevel = newValue}
  }
  /// Returns true if `canSetOwnWhisperLevel` has been explicitly set.
  public var hasCanSetOwnWhisperLevel: Bool {return _storage._canSetOwnWhisperLevel != nil}
  /// Clears the value of `canSetOwnWhisperLevel`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOwnWhisperLevel() {_storage._canSetOwnWhisperLevel = nil}

  public var canSetOwnMemberNote: Bool {
    get {return _storage._canSetOwnMemberNote ?? false}
    set {_uniqueStorage()._canSetOwnMemberNote = newValue}
  }
  /// Returns true if `canSetOwnMemberNote` has been explicitly set.
  public var hasCanSetOwnMemberNote: Bool {return _storage._canSetOwnMemberNote != nil}
  /// Clears the value of `canSetOwnMemberNote`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOwnMemberNote() {_storage._canSetOwnMemberNote = nil}

  public var canSetOtherMemberNote: Bool {
    get {return _storage._canSetOtherMemberNote ?? false}
    set {_uniqueStorage()._canSetOtherMemberNote = newValue}
  }
  /// Returns true if `canSetOtherMemberNote` has been explicitly set.
  public var hasCanSetOtherMemberNote: Bool {return _storage._canSetOtherMemberNote != nil}
  /// Clears the value of `canSetOtherMemberNote`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetOtherMemberNote() {_storage._canSetOtherMemberNote = nil}

  public var canUseVoice: Bool {
    get {return _storage._canUseVoice ?? false}
    set {_uniqueStorage()._canUseVoice = newValue}
  }
  /// Returns true if `canUseVoice` has been explicitly set.
  public var hasCanUseVoice: Bool {return _storage._canUseVoice != nil}
  /// Clears the value of `canUseVoice`. Subsequent reads from it will return its default value.
  public mutating func clearCanUseVoice() {_storage._canUseVoice = nil}

  public var canVoiceMuteMemberForAll: Bool {
    get {return _storage._canVoiceMuteMemberForAll ?? false}
    set {_uniqueStorage()._canVoiceMuteMemberForAll = newValue}
  }
  /// Returns true if `canVoiceMuteMemberForAll` has been explicitly set.
  public var hasCanVoiceMuteMemberForAll: Bool {return _storage._canVoiceMuteMemberForAll != nil}
  /// Clears the value of `canVoiceMuteMemberForAll`. Subsequent reads from it will return its default value.
  public mutating func clearCanVoiceMuteMemberForAll() {_storage._canVoiceMuteMemberForAll = nil}

  public var canGetInvitation: Bool {
    get {return _storage._canGetInvitation ?? false}
    set {_uniqueStorage()._canGetInvitation = newValue}
  }
  /// Returns true if `canGetInvitation` has been explicitly set.
  public var hasCanGetInvitation: Bool {return _storage._canGetInvitation != nil}
  /// Clears the value of `canGetInvitation`. Subsequent reads from it will return its default value.
  public mutating func clearCanGetInvitation() {_storage._canGetInvitation = nil}

  public var canSendInvitation: Bool {
    get {return _storage._canSendInvitation ?? false}
    set {_uniqueStorage()._canSendInvitation = newValue}
  }
  /// Returns true if `canSendInvitation` has been explicitly set.
  public var hasCanSendInvitation: Bool {return _storage._canSendInvitation != nil}
  /// Clears the value of `canSendInvitation`. Subsequent reads from it will return its default value.
  public mutating func clearCanSendInvitation() {_storage._canSendInvitation = nil}

  public var canSendGuestInvitation: Bool {
    get {return _storage._canSendGuestInvitation ?? false}
    set {_uniqueStorage()._canSendGuestInvitation = newValue}
  }
  /// Returns true if `canSendGuestInvitation` has been explicitly set.
  public var hasCanSendGuestInvitation: Bool {return _storage._canSendGuestInvitation != nil}
  /// Clears the value of `canSendGuestInvitation`. Subsequent reads from it will return its default value.
  public mutating func clearCanSendGuestInvitation() {_storage._canSendGuestInvitation = nil}

  public var canRevokeOwnInvitation: Bool {
    get {return _storage._canRevokeOwnInvitation ?? false}
    set {_uniqueStorage()._canRevokeOwnInvitation = newValue}
  }
  /// Returns true if `canRevokeOwnInvitation` has been explicitly set.
  public var hasCanRevokeOwnInvitation: Bool {return _storage._canRevokeOwnInvitation != nil}
  /// Clears the value of `canRevokeOwnInvitation`. Subsequent reads from it will return its default value.
  public mutating func clearCanRevokeOwnInvitation() {_storage._canRevokeOwnInvitation = nil}

  public var canRevokeOtherInvitation: Bool {
    get {return _storage._canRevokeOtherInvitation ?? false}
    set {_uniqueStorage()._canRevokeOtherInvitation = newValue}
  }
  /// Returns true if `canRevokeOtherInvitation` has been explicitly set.
  public var hasCanRevokeOtherInvitation: Bool {return _storage._canRevokeOtherInvitation != nil}
  /// Clears the value of `canRevokeOtherInvitation`. Subsequent reads from it will return its default value.
  public mutating func clearCanRevokeOtherInvitation() {_storage._canRevokeOtherInvitation = nil}

  public var canGetSuggestion: Bool {
    get {return _storage._canGetSuggestion ?? false}
    set {_uniqueStorage()._canGetSuggestion = newValue}
  }
  /// Returns true if `canGetSuggestion` has been explicitly set.
  public var hasCanGetSuggestion: Bool {return _storage._canGetSuggestion != nil}
  /// Clears the value of `canGetSuggestion`. Subsequent reads from it will return its default value.
  public mutating func clearCanGetSuggestion() {_storage._canGetSuggestion = nil}

  public var canSuggestMember: Bool {
    get {return _storage._canSuggestMember ?? false}
    set {_uniqueStorage()._canSuggestMember = newValue}
  }
  /// Returns true if `canSuggestMember` has been explicitly set.
  public var hasCanSuggestMember: Bool {return _storage._canSuggestMember != nil}
  /// Clears the value of `canSuggestMember`. Subsequent reads from it will return its default value.
  public mutating func clearCanSuggestMember() {_storage._canSuggestMember = nil}

  public var canApproveMember: Bool {
    get {return _storage._canApproveMember ?? false}
    set {_uniqueStorage()._canApproveMember = newValue}
  }
  /// Returns true if `canApproveMember` has been explicitly set.
  public var hasCanApproveMember: Bool {return _storage._canApproveMember != nil}
  /// Clears the value of `canApproveMember`. Subsequent reads from it will return its default value.
  public mutating func clearCanApproveMember() {_storage._canApproveMember = nil}

  public var canGetTicket: Bool {
    get {return _storage._canGetTicket ?? false}
    set {_uniqueStorage()._canGetTicket = newValue}
  }
  /// Returns true if `canGetTicket` has been explicitly set.
  public var hasCanGetTicket: Bool {return _storage._canGetTicket != nil}
  /// Clears the value of `canGetTicket`. Subsequent reads from it will return its default value.
  public mutating func clearCanGetTicket() {_storage._canGetTicket = nil}

  public var canCreateTicket: Bool {
    get {return _storage._canCreateTicket ?? false}
    set {_uniqueStorage()._canCreateTicket = newValue}
  }
  /// Returns true if `canCreateTicket` has been explicitly set.
  public var hasCanCreateTicket: Bool {return _storage._canCreateTicket != nil}
  /// Clears the value of `canCreateTicket`. Subsequent reads from it will return its default value.
  public mutating func clearCanCreateTicket() {_storage._canCreateTicket = nil}

  public var canDestroyTicket: Bool {
    get {return _storage._canDestroyTicket ?? false}
    set {_uniqueStorage()._canDestroyTicket = newValue}
  }
  /// Returns true if `canDestroyTicket` has been explicitly set.
  public var hasCanDestroyTicket: Bool {return _storage._canDestroyTicket != nil}
  /// Clears the value of `canDestroyTicket`. Subsequent reads from it will return its default value.
  public mutating func clearCanDestroyTicket() {_storage._canDestroyTicket = nil}

  public var canGetBan: Bool {
    get {return _storage._canGetBan ?? false}
    set {_uniqueStorage()._canGetBan = newValue}
  }
  /// Returns true if `canGetBan` has been explicitly set.
  public var hasCanGetBan: Bool {return _storage._canGetBan != nil}
  /// Clears the value of `canGetBan`. Subsequent reads from it will return its default value.
  public mutating func clearCanGetBan() {_storage._canGetBan = nil}

  public var canAddBan: Bool {
    get {return _storage._canAddBan ?? false}
    set {_uniqueStorage()._canAddBan = newValue}
  }
  /// Returns true if `canAddBan` has been explicitly set.
  public var hasCanAddBan: Bool {return _storage._canAddBan != nil}
  /// Clears the value of `canAddBan`. Subsequent reads from it will return its default value.
  public mutating func clearCanAddBan() {_storage._canAddBan = nil}

  public var canRemoveBan: Bool {
    get {return _storage._canRemoveBan ?? false}
    set {_uniqueStorage()._canRemoveBan = newValue}
  }
  /// Returns true if `canRemoveBan` has been explicitly set.
  public var hasCanRemoveBan: Bool {return _storage._canRemoveBan != nil}
  /// Clears the value of `canRemoveBan`. Subsequent reads from it will return its default value.
  public mutating func clearCanRemoveBan() {_storage._canRemoveBan = nil}

  public var canCreateStream: Bool {
    get {return _storage._canCreateStream ?? false}
    set {_uniqueStorage()._canCreateStream = newValue}
  }
  /// Returns true if `canCreateStream` has been explicitly set.
  public var hasCanCreateStream: Bool {return _storage._canCreateStream != nil}
  /// Clears the value of `canCreateStream`. Subsequent reads from it will return its default value.
  public mutating func clearCanCreateStream() {_storage._canCreateStream = nil}

  public var canDestroyStream: Bool {
    get {return _storage._canDestroyStream ?? false}
    set {_uniqueStorage()._canDestroyStream = newValue}
  }
  /// Returns true if `canDestroyStream` has been explicitly set.
  public var hasCanDestroyStream: Bool {return _storage._canDestroyStream != nil}
  /// Clears the value of `canDestroyStream`. Subsequent reads from it will return its default value.
  public mutating func clearCanDestroyStream() {_storage._canDestroyStream = nil}

  public var canSetStreamPosition: Bool {
    get {return _storage._canSetStreamPosition ?? false}
    set {_uniqueStorage()._canSetStreamPosition = newValue}
  }
  /// Returns true if `canSetStreamPosition` has been explicitly set.
  public var hasCanSetStreamPosition: Bool {return _storage._canSetStreamPosition != nil}
  /// Clears the value of `canSetStreamPosition`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamPosition() {_storage._canSetStreamPosition = nil}

  public var canSetStreamAttribute: Bool {
    get {return _storage._canSetStreamAttribute ?? false}
    set {_uniqueStorage()._canSetStreamAttribute = newValue}
  }
  /// Returns true if `canSetStreamAttribute` has been explicitly set.
  public var hasCanSetStreamAttribute: Bool {return _storage._canSetStreamAttribute != nil}
  /// Clears the value of `canSetStreamAttribute`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamAttribute() {_storage._canSetStreamAttribute = nil}

  public var canSetStreamName: Bool {
    get {return _storage._canSetStreamName ?? false}
    set {_uniqueStorage()._canSetStreamName = newValue}
  }
  /// Returns true if `canSetStreamName` has been explicitly set.
  public var hasCanSetStreamName: Bool {return _storage._canSetStreamName != nil}
  /// Clears the value of `canSetStreamName`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamName() {_storage._canSetStreamName = nil}

  public var canSetStreamSubject: Bool {
    get {return _storage._canSetStreamSubject ?? false}
    set {_uniqueStorage()._canSetStreamSubject = newValue}
  }
  /// Returns true if `canSetStreamSubject` has been explicitly set.
  public var hasCanSetStreamSubject: Bool {return _storage._canSetStreamSubject != nil}
  /// Clears the value of `canSetStreamSubject`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamSubject() {_storage._canSetStreamSubject = nil}

  public var canSetStreamAccess: Bool {
    get {return _storage._canSetStreamAccess ?? false}
    set {_uniqueStorage()._canSetStreamAccess = newValue}
  }
  /// Returns true if `canSetStreamAccess` has been explicitly set.
  public var hasCanSetStreamAccess: Bool {return _storage._canSetStreamAccess != nil}
  /// Clears the value of `canSetStreamAccess`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamAccess() {_storage._canSetStreamAccess = nil}

  public var canSetStreamVoiceLevel: Bool {
    get {return _storage._canSetStreamVoiceLevel ?? false}
    set {_uniqueStorage()._canSetStreamVoiceLevel = newValue}
  }
  /// Returns true if `canSetStreamVoiceLevel` has been explicitly set.
  public var hasCanSetStreamVoiceLevel: Bool {return _storage._canSetStreamVoiceLevel != nil}
  /// Clears the value of `canSetStreamVoiceLevel`. Subsequent reads from it will return its default value.
  public mutating func clearCanSetStreamVoiceLevel() {_storage._canSetStreamVoiceLevel = nil}

  public var canCreateMessage: Bool {
    get {return _storage._canCreateMessage ?? false}
    set {_uniqueStorage()._canCreateMessage = newValue}
  }
  /// Returns true if `canCreateMessage` has been explicitly set.
  public var hasCanCreateMessage: Bool {return _storage._canCreateMessage != nil}
  /// Clears the value of `canCreateMessage`. Subsequent reads from it will return its default value.
  public mutating func clearCanCreateMessage() {_storage._canCreateMessage = nil}

  public var canDestroyOwnMessage: Bool {
    get {return _storage._canDestroyOwnMessage ?? false}
    set {_uniqueStorage()._canDestroyOwnMessage = newValue}
  }
  /// Returns true if `canDestroyOwnMessage` has been explicitly set.
  public var hasCanDestroyOwnMessage: Bool {return _storage._canDestroyOwnMessage != nil}
  /// Clears the value of `canDestroyOwnMessage`. Subsequent reads from it will return its default value.
  public mutating func clearCanDestroyOwnMessage() {_storage._canDestroyOwnMessage = nil}

  public var canDestroyOtherMessage: Bool {
    get {return _storage._canDestroyOtherMessage ?? false}
    set {_uniqueStorage()._canDestroyOtherMessage = newValue}
  }
  /// Returns true if `canDestroyOtherMessage` has been explicitly set.
  public var hasCanDestroyOtherMessage: Bool {return _storage._canDestroyOtherMessage != nil}
  /// Clears the value of `canDestroyOtherMessage`. Subsequent reads from it will return its default value.
  public mutating func clearCanDestroyOtherMessage() {_storage._canDestroyOtherMessage = nil}

  public var canEditOwnMessage: Bool {
    get {return _storage._canEditOwnMessage ?? false}
    set {_uniqueStorage()._canEditOwnMessage = newValue}
  }
  /// Returns true if `canEditOwnMessage` has been explicitly set.
  public var hasCanEditOwnMessage: Bool {return _storage._canEditOwnMessage != nil}
  /// Clears the value of `canEditOwnMessage`. Subsequent reads from it will return its default value.
  public mutating func clearCanEditOwnMessage() {_storage._canEditOwnMessage = nil}

  public var canPinMessage: Bool {
    get {return _storage._canPinMessage ?? false}
    set {_uniqueStorage()._canPinMessage = newValue}
  }
  /// Returns true if `canPinMessage` has been explicitly set.
  public var hasCanPinMessage: Bool {return _storage._canPinMessage != nil}
  /// Clears the value of `canPinMessage`. Subsequent reads from it will return its default value.
  public mutating func clearCanPinMessage() {_storage._canPinMessage = nil}

  public var canMentionAll: Bool {
    get {return _storage._canMentionAll ?? false}
    set {_uniqueStorage()._canMentionAll = newValue}
  }
  /// Returns true if `canMentionAll` has been explicitly set.
  public var hasCanMentionAll: Bool {return _storage._canMentionAll != nil}
  /// Clears the value of `canMentionAll`. Subsequent reads from it will return its default value.
  public mutating func clearCanMentionAll() {_storage._canMentionAll = nil}

  public var canMentionHere: Bool {
    get {return _storage._canMentionHere ?? false}
    set {_uniqueStorage()._canMentionHere = newValue}
  }
  /// Returns true if `canMentionHere` has been explicitly set.
  public var hasCanMentionHere: Bool {return _storage._canMentionHere != nil}
  /// Clears the value of `canMentionHere`. Subsequent reads from it will return its default value.
  public mutating func clearCanMentionHere() {_storage._canMentionHere = nil}

  public var canMentionMember: Bool {
    get {return _storage._canMentionMember ?? false}
    set {_uniqueStorage()._canMentionMember = newValue}
  }
  /// Returns true if `canMentionMember` has been explicitly set.
  public var hasCanMentionMember: Bool {return _storage._canMentionMember != nil}
  /// Clears the value of `canMentionMember`. Subsequent reads from it will return its default value.
  public mutating func clearCanMentionMember() {_storage._canMentionMember = nil}

  public var canMentionRole: Bool {
    get {return _storage._canMentionRole ?? false}
    set {_uniqueStorage()._canMentionRole = newValue}
  }
  /// Returns true if `canMentionRole` has been explicitly set.
  public var hasCanMentionRole: Bool {return _storage._canMentionRole != nil}
  /// Clears the value of `canMentionRole`. Subsequent reads from it will return its default value.
  public mutating func clearCanMentionRole() {_storage._canMentionRole = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._canDestroy)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._canSetAttribute)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._canSetName)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._canSetDescription)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._canSetAvatar)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._canSetBroadcast)
        case 15: try decoder.decodeSingularBoolField(value: &_storage._canSetPrivacyLevel)
        case 30: try decoder.decodeSingularBoolField(value: &_storage._canKickMember)
        case 31: try decoder.decodeSingularBoolField(value: &_storage._canSetOwnMemberAttribute)
        case 32: try decoder.decodeSingularBoolField(value: &_storage._canSetOtherMemberAttribute)
        case 33: try decoder.decodeSingularBoolField(value: &_storage._canSetOwnVoiceState)
        case 34: try decoder.decodeSingularBoolField(value: &_storage._canSetOwnPresenceLevel)
        case 35: try decoder.decodeSingularBoolField(value: &_storage._canSetOwnWhisperLevel)
        case 36: try decoder.decodeSingularBoolField(value: &_storage._canSetOwnMemberNote)
        case 37: try decoder.decodeSingularBoolField(value: &_storage._canSetOtherMemberNote)
        case 50: try decoder.decodeSingularBoolField(value: &_storage._canUseVoice)
        case 51: try decoder.decodeSingularBoolField(value: &_storage._canVoiceMuteMemberForAll)
        case 70: try decoder.decodeSingularBoolField(value: &_storage._canGetInvitation)
        case 71: try decoder.decodeSingularBoolField(value: &_storage._canSendInvitation)
        case 72: try decoder.decodeSingularBoolField(value: &_storage._canSendGuestInvitation)
        case 73: try decoder.decodeSingularBoolField(value: &_storage._canRevokeOwnInvitation)
        case 74: try decoder.decodeSingularBoolField(value: &_storage._canRevokeOtherInvitation)
        case 90: try decoder.decodeSingularBoolField(value: &_storage._canGetSuggestion)
        case 91: try decoder.decodeSingularBoolField(value: &_storage._canSuggestMember)
        case 92: try decoder.decodeSingularBoolField(value: &_storage._canApproveMember)
        case 110: try decoder.decodeSingularBoolField(value: &_storage._canGetTicket)
        case 111: try decoder.decodeSingularBoolField(value: &_storage._canCreateTicket)
        case 112: try decoder.decodeSingularBoolField(value: &_storage._canDestroyTicket)
        case 130: try decoder.decodeSingularBoolField(value: &_storage._canGetBan)
        case 131: try decoder.decodeSingularBoolField(value: &_storage._canAddBan)
        case 132: try decoder.decodeSingularBoolField(value: &_storage._canRemoveBan)
        case 140: try decoder.decodeSingularBoolField(value: &_storage._canCreateStream)
        case 141: try decoder.decodeSingularBoolField(value: &_storage._canDestroyStream)
        case 142: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamPosition)
        case 143: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamAttribute)
        case 144: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamName)
        case 145: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamSubject)
        case 146: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamAccess)
        case 147: try decoder.decodeSingularBoolField(value: &_storage._canSetStreamVoiceLevel)
        case 180: try decoder.decodeSingularBoolField(value: &_storage._canCreateMessage)
        case 181: try decoder.decodeSingularBoolField(value: &_storage._canDestroyOwnMessage)
        case 182: try decoder.decodeSingularBoolField(value: &_storage._canDestroyOtherMessage)
        case 183: try decoder.decodeSingularBoolField(value: &_storage._canEditOwnMessage)
        case 184: try decoder.decodeSingularBoolField(value: &_storage._canPinMessage)
        case 185: try decoder.decodeSingularBoolField(value: &_storage._canMentionAll)
        case 186: try decoder.decodeSingularBoolField(value: &_storage._canMentionHere)
        case 187: try decoder.decodeSingularBoolField(value: &_storage._canMentionMember)
        case 188: try decoder.decodeSingularBoolField(value: &_storage._canMentionRole)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._canDestroy {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
      }
      if let v = _storage._canSetAttribute {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._canSetName {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 11)
      }
      if let v = _storage._canSetDescription {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._canSetAvatar {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
      }
      if let v = _storage._canSetBroadcast {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 14)
      }
      if let v = _storage._canSetPrivacyLevel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 15)
      }
      if let v = _storage._canKickMember {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 30)
      }
      if let v = _storage._canSetOwnMemberAttribute {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 31)
      }
      if let v = _storage._canSetOtherMemberAttribute {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 32)
      }
      if let v = _storage._canSetOwnVoiceState {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
      }
      if let v = _storage._canSetOwnPresenceLevel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 34)
      }
      if let v = _storage._canSetOwnWhisperLevel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 35)
      }
      if let v = _storage._canSetOwnMemberNote {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 36)
      }
      if let v = _storage._canSetOtherMemberNote {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 37)
      }
      if let v = _storage._canUseVoice {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 50)
      }
      if let v = _storage._canVoiceMuteMemberForAll {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 51)
      }
      if let v = _storage._canGetInvitation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 70)
      }
      if let v = _storage._canSendInvitation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 71)
      }
      if let v = _storage._canSendGuestInvitation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 72)
      }
      if let v = _storage._canRevokeOwnInvitation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 73)
      }
      if let v = _storage._canRevokeOtherInvitation {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 74)
      }
      if let v = _storage._canGetSuggestion {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 90)
      }
      if let v = _storage._canSuggestMember {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 91)
      }
      if let v = _storage._canApproveMember {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 92)
      }
      if let v = _storage._canGetTicket {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 110)
      }
      if let v = _storage._canCreateTicket {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 111)
      }
      if let v = _storage._canDestroyTicket {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 112)
      }
      if let v = _storage._canGetBan {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 130)
      }
      if let v = _storage._canAddBan {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 131)
      }
      if let v = _storage._canRemoveBan {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 132)
      }
      if let v = _storage._canCreateStream {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 140)
      }
      if let v = _storage._canDestroyStream {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 141)
      }
      if let v = _storage._canSetStreamPosition {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 142)
      }
      if let v = _storage._canSetStreamAttribute {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 143)
      }
      if let v = _storage._canSetStreamName {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 144)
      }
      if let v = _storage._canSetStreamSubject {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 145)
      }
      if let v = _storage._canSetStreamAccess {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 146)
      }
      if let v = _storage._canSetStreamVoiceLevel {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 147)
      }
      if let v = _storage._canCreateMessage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 180)
      }
      if let v = _storage._canDestroyOwnMessage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 181)
      }
      if let v = _storage._canDestroyOtherMessage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 182)
      }
      if let v = _storage._canEditOwnMessage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 183)
      }
      if let v = _storage._canPinMessage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 184)
      }
      if let v = _storage._canMentionAll {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 185)
      }
      if let v = _storage._canMentionHere {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 186)
      }
      if let v = _storage._canMentionMember {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 187)
      }
      if let v = _storage._canMentionRole {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 188)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Club_V1_ClubRole: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ClubRole"

  public var id: UInt32 {
    get {return _storage._id ?? 0}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  public var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  public mutating func clearID() {_storage._id = nil}

  public var state: Bgs_Protocol_RoleState {
    get {return _storage._state ?? Bgs_Protocol_RoleState()}
    set {_uniqueStorage()._state = newValue}
  }
  /// Returns true if `state` has been explicitly set.
  public var hasState: Bool {return _storage._state != nil}
  /// Clears the value of `state`. Subsequent reads from it will return its default value.
  public mutating func clearState() {_storage._state = nil}

  public var privilege: Bgs_Protocol_Club_V1_ClubPrivilegeSet {
    get {return _storage._privilege ?? Bgs_Protocol_Club_V1_ClubPrivilegeSet()}
    set {_uniqueStorage()._privilege = newValue}
  }
  /// Returns true if `privilege` has been explicitly set.
  public var hasPrivilege: Bool {return _storage._privilege != nil}
  /// Clears the value of `privilege`. Subsequent reads from it will return its default value.
  public mutating func clearPrivilege() {_storage._privilege = nil}

  public var alwaysGrantStreamAccess: Bool {
    get {return _storage._alwaysGrantStreamAccess ?? false}
    set {_uniqueStorage()._alwaysGrantStreamAccess = newValue}
  }
  /// Returns true if `alwaysGrantStreamAccess` has been explicitly set.
  public var hasAlwaysGrantStreamAccess: Bool {return _storage._alwaysGrantStreamAccess != nil}
  /// Clears the value of `alwaysGrantStreamAccess`. Subsequent reads from it will return its default value.
  public mutating func clearAlwaysGrantStreamAccess() {_storage._alwaysGrantStreamAccess = nil}

  public var allowInClubSlot: Bool {
    get {return _storage._allowInClubSlot ?? false}
    set {_uniqueStorage()._allowInClubSlot = newValue}
  }
  /// Returns true if `allowInClubSlot` has been explicitly set.
  public var hasAllowInClubSlot: Bool {return _storage._allowInClubSlot != nil}
  /// Clears the value of `allowInClubSlot`. Subsequent reads from it will return its default value.
  public mutating func clearAllowInClubSlot() {_storage._allowInClubSlot = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularUInt32Field(value: &_storage._id)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._state)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._privilege)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._alwaysGrantStreamAccess)
        case 5: try decoder.decodeSingularBoolField(value: &_storage._allowInClubSlot)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._id {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._state {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._privilege {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._alwaysGrantStreamAccess {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._allowInClubSlot {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Club_V1_ClubRoleSet: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ClubRoleSet"

  public var role: [Bgs_Protocol_Club_V1_ClubRole] = []

  public var defaultRole: [UInt32] = []

  public var assignmentRespectsRelegationChain: Bool {
    get {return _assignmentRespectsRelegationChain ?? false}
    set {_assignmentRespectsRelegationChain = newValue}
  }
  /// Returns true if `assignmentRespectsRelegationChain` has been explicitly set.
  public var hasAssignmentRespectsRelegationChain: Bool {return self._assignmentRespectsRelegationChain != nil}
  /// Clears the value of `assignmentRespectsRelegationChain`. Subsequent reads from it will return its default value.
  public mutating func clearAssignmentRespectsRelegationChain() {self._assignmentRespectsRelegationChain = nil}

  public var subtype: String {
    get {return _subtype ?? String()}
    set {_subtype = newValue}
  }
  /// Returns true if `subtype` has been explicitly set.
  public var hasSubtype: Bool {return self._subtype != nil}
  /// Clears the value of `subtype`. Subsequent reads from it will return its default value.
  public mutating func clearSubtype() {self._subtype = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.role)
      case 5: try decoder.decodeRepeatedUInt32Field(value: &self.defaultRole)
      case 6: try decoder.decodeSingularBoolField(value: &self._assignmentRespectsRelegationChain)
      case 7: try decoder.decodeSingularStringField(value: &self._subtype)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.role.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.role, fieldNumber: 1)
    }
    if !self.defaultRole.isEmpty {
      try visitor.visitPackedUInt32Field(value: self.defaultRole, fieldNumber: 5)
    }
    if let v = self._assignmentRespectsRelegationChain {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
    }
    if let v = self._subtype {
      try visitor.visitSingularStringField(value: v, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _assignmentRespectsRelegationChain: Bool? = nil
  fileprivate var _subtype: String? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.club.v1"

extension Bgs_Protocol_Club_V1_ClubPrivilegeSet: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "can_destroy"),
    10: .standard(proto: "can_set_attribute"),
    11: .standard(proto: "can_set_name"),
    12: .standard(proto: "can_set_description"),
    13: .standard(proto: "can_set_avatar"),
    14: .standard(proto: "can_set_broadcast"),
    15: .standard(proto: "can_set_privacy_level"),
    30: .standard(proto: "can_kick_member"),
    31: .standard(proto: "can_set_own_member_attribute"),
    32: .standard(proto: "can_set_other_member_attribute"),
    33: .standard(proto: "can_set_own_voice_state"),
    34: .standard(proto: "can_set_own_presence_level"),
    35: .standard(proto: "can_set_own_whisper_level"),
    36: .standard(proto: "can_set_own_member_note"),
    37: .standard(proto: "can_set_other_member_note"),
    50: .standard(proto: "can_use_voice"),
    51: .standard(proto: "can_voice_mute_member_for_all"),
    70: .standard(proto: "can_get_invitation"),
    71: .standard(proto: "can_send_invitation"),
    72: .standard(proto: "can_send_guest_invitation"),
    73: .standard(proto: "can_revoke_own_invitation"),
    74: .standard(proto: "can_revoke_other_invitation"),
    90: .standard(proto: "can_get_suggestion"),
    91: .standard(proto: "can_suggest_member"),
    92: .standard(proto: "can_approve_member"),
    110: .standard(proto: "can_get_ticket"),
    111: .standard(proto: "can_create_ticket"),
    112: .standard(proto: "can_destroy_ticket"),
    130: .standard(proto: "can_get_ban"),
    131: .standard(proto: "can_add_ban"),
    132: .standard(proto: "can_remove_ban"),
    140: .standard(proto: "can_create_stream"),
    141: .standard(proto: "can_destroy_stream"),
    142: .standard(proto: "can_set_stream_position"),
    143: .standard(proto: "can_set_stream_attribute"),
    144: .standard(proto: "can_set_stream_name"),
    145: .standard(proto: "can_set_stream_subject"),
    146: .standard(proto: "can_set_stream_access"),
    147: .standard(proto: "can_set_stream_voice_level"),
    180: .standard(proto: "can_create_message"),
    181: .standard(proto: "can_destroy_own_message"),
    182: .standard(proto: "can_destroy_other_message"),
    183: .standard(proto: "can_edit_own_message"),
    184: .standard(proto: "can_pin_message"),
    185: .standard(proto: "can_mention_all"),
    186: .standard(proto: "can_mention_here"),
    187: .standard(proto: "can_mention_member"),
    188: .standard(proto: "can_mention_role"),
  ]

  fileprivate class _StorageClass {
    var _canDestroy: Bool? = nil
    var _canSetAttribute: Bool? = nil
    var _canSetName: Bool? = nil
    var _canSetDescription: Bool? = nil
    var _canSetAvatar: Bool? = nil
    var _canSetBroadcast: Bool? = nil
    var _canSetPrivacyLevel: Bool? = nil
    var _canKickMember: Bool? = nil
    var _canSetOwnMemberAttribute: Bool? = nil
    var _canSetOtherMemberAttribute: Bool? = nil
    var _canSetOwnVoiceState: Bool? = nil
    var _canSetOwnPresenceLevel: Bool? = nil
    var _canSetOwnWhisperLevel: Bool? = nil
    var _canSetOwnMemberNote: Bool? = nil
    var _canSetOtherMemberNote: Bool? = nil
    var _canUseVoice: Bool? = nil
    var _canVoiceMuteMemberForAll: Bool? = nil
    var _canGetInvitation: Bool? = nil
    var _canSendInvitation: Bool? = nil
    var _canSendGuestInvitation: Bool? = nil
    var _canRevokeOwnInvitation: Bool? = nil
    var _canRevokeOtherInvitation: Bool? = nil
    var _canGetSuggestion: Bool? = nil
    var _canSuggestMember: Bool? = nil
    var _canApproveMember: Bool? = nil
    var _canGetTicket: Bool? = nil
    var _canCreateTicket: Bool? = nil
    var _canDestroyTicket: Bool? = nil
    var _canGetBan: Bool? = nil
    var _canAddBan: Bool? = nil
    var _canRemoveBan: Bool? = nil
    var _canCreateStream: Bool? = nil
    var _canDestroyStream: Bool? = nil
    var _canSetStreamPosition: Bool? = nil
    var _canSetStreamAttribute: Bool? = nil
    var _canSetStreamName: Bool? = nil
    var _canSetStreamSubject: Bool? = nil
    var _canSetStreamAccess: Bool? = nil
    var _canSetStreamVoiceLevel: Bool? = nil
    var _canCreateMessage: Bool? = nil
    var _canDestroyOwnMessage: Bool? = nil
    var _canDestroyOtherMessage: Bool? = nil
    var _canEditOwnMessage: Bool? = nil
    var _canPinMessage: Bool? = nil
    var _canMentionAll: Bool? = nil
    var _canMentionHere: Bool? = nil
    var _canMentionMember: Bool? = nil
    var _canMentionRole: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _canDestroy = source._canDestroy
      _canSetAttribute = source._canSetAttribute
      _canSetName = source._canSetName
      _canSetDescription = source._canSetDescription
      _canSetAvatar = source._canSetAvatar
      _canSetBroadcast = source._canSetBroadcast
      _canSetPrivacyLevel = source._canSetPrivacyLevel
      _canKickMember = source._canKickMember
      _canSetOwnMemberAttribute = source._canSetOwnMemberAttribute
      _canSetOtherMemberAttribute = source._canSetOtherMemberAttribute
      _canSetOwnVoiceState = source._canSetOwnVoiceState
      _canSetOwnPresenceLevel = source._canSetOwnPresenceLevel
      _canSetOwnWhisperLevel = source._canSetOwnWhisperLevel
      _canSetOwnMemberNote = source._canSetOwnMemberNote
      _canSetOtherMemberNote = source._canSetOtherMemberNote
      _canUseVoice = source._canUseVoice
      _canVoiceMuteMemberForAll = source._canVoiceMuteMemberForAll
      _canGetInvitation = source._canGetInvitation
      _canSendInvitation = source._canSendInvitation
      _canSendGuestInvitation = source._canSendGuestInvitation
      _canRevokeOwnInvitation = source._canRevokeOwnInvitation
      _canRevokeOtherInvitation = source._canRevokeOtherInvitation
      _canGetSuggestion = source._canGetSuggestion
      _canSuggestMember = source._canSuggestMember
      _canApproveMember = source._canApproveMember
      _canGetTicket = source._canGetTicket
      _canCreateTicket = source._canCreateTicket
      _canDestroyTicket = source._canDestroyTicket
      _canGetBan = source._canGetBan
      _canAddBan = source._canAddBan
      _canRemoveBan = source._canRemoveBan
      _canCreateStream = source._canCreateStream
      _canDestroyStream = source._canDestroyStream
      _canSetStreamPosition = source._canSetStreamPosition
      _canSetStreamAttribute = source._canSetStreamAttribute
      _canSetStreamName = source._canSetStreamName
      _canSetStreamSubject = source._canSetStreamSubject
      _canSetStreamAccess = source._canSetStreamAccess
      _canSetStreamVoiceLevel = source._canSetStreamVoiceLevel
      _canCreateMessage = source._canCreateMessage
      _canDestroyOwnMessage = source._canDestroyOwnMessage
      _canDestroyOtherMessage = source._canDestroyOtherMessage
      _canEditOwnMessage = source._canEditOwnMessage
      _canPinMessage = source._canPinMessage
      _canMentionAll = source._canMentionAll
      _canMentionHere = source._canMentionHere
      _canMentionMember = source._canMentionMember
      _canMentionRole = source._canMentionRole
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Club_V1_ClubPrivilegeSet) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._canDestroy != other_storage._canDestroy {return false}
        if _storage._canSetAttribute != other_storage._canSetAttribute {return false}
        if _storage._canSetName != other_storage._canSetName {return false}
        if _storage._canSetDescription != other_storage._canSetDescription {return false}
        if _storage._canSetAvatar != other_storage._canSetAvatar {return false}
        if _storage._canSetBroadcast != other_storage._canSetBroadcast {return false}
        if _storage._canSetPrivacyLevel != other_storage._canSetPrivacyLevel {return false}
        if _storage._canKickMember != other_storage._canKickMember {return false}
        if _storage._canSetOwnMemberAttribute != other_storage._canSetOwnMemberAttribute {return false}
        if _storage._canSetOtherMemberAttribute != other_storage._canSetOtherMemberAttribute {return false}
        if _storage._canSetOwnVoiceState != other_storage._canSetOwnVoiceState {return false}
        if _storage._canSetOwnPresenceLevel != other_storage._canSetOwnPresenceLevel {return false}
        if _storage._canSetOwnWhisperLevel != other_storage._canSetOwnWhisperLevel {return false}
        if _storage._canSetOwnMemberNote != other_storage._canSetOwnMemberNote {return false}
        if _storage._canSetOtherMemberNote != other_storage._canSetOtherMemberNote {return false}
        if _storage._canUseVoice != other_storage._canUseVoice {return false}
        if _storage._canVoiceMuteMemberForAll != other_storage._canVoiceMuteMemberForAll {return false}
        if _storage._canGetInvitation != other_storage._canGetInvitation {return false}
        if _storage._canSendInvitation != other_storage._canSendInvitation {return false}
        if _storage._canSendGuestInvitation != other_storage._canSendGuestInvitation {return false}
        if _storage._canRevokeOwnInvitation != other_storage._canRevokeOwnInvitation {return false}
        if _storage._canRevokeOtherInvitation != other_storage._canRevokeOtherInvitation {return false}
        if _storage._canGetSuggestion != other_storage._canGetSuggestion {return false}
        if _storage._canSuggestMember != other_storage._canSuggestMember {return false}
        if _storage._canApproveMember != other_storage._canApproveMember {return false}
        if _storage._canGetTicket != other_storage._canGetTicket {return false}
        if _storage._canCreateTicket != other_storage._canCreateTicket {return false}
        if _storage._canDestroyTicket != other_storage._canDestroyTicket {return false}
        if _storage._canGetBan != other_storage._canGetBan {return false}
        if _storage._canAddBan != other_storage._canAddBan {return false}
        if _storage._canRemoveBan != other_storage._canRemoveBan {return false}
        if _storage._canCreateStream != other_storage._canCreateStream {return false}
        if _storage._canDestroyStream != other_storage._canDestroyStream {return false}
        if _storage._canSetStreamPosition != other_storage._canSetStreamPosition {return false}
        if _storage._canSetStreamAttribute != other_storage._canSetStreamAttribute {return false}
        if _storage._canSetStreamName != other_storage._canSetStreamName {return false}
        if _storage._canSetStreamSubject != other_storage._canSetStreamSubject {return false}
        if _storage._canSetStreamAccess != other_storage._canSetStreamAccess {return false}
        if _storage._canSetStreamVoiceLevel != other_storage._canSetStreamVoiceLevel {return false}
        if _storage._canCreateMessage != other_storage._canCreateMessage {return false}
        if _storage._canDestroyOwnMessage != other_storage._canDestroyOwnMessage {return false}
        if _storage._canDestroyOtherMessage != other_storage._canDestroyOtherMessage {return false}
        if _storage._canEditOwnMessage != other_storage._canEditOwnMessage {return false}
        if _storage._canPinMessage != other_storage._canPinMessage {return false}
        if _storage._canMentionAll != other_storage._canMentionAll {return false}
        if _storage._canMentionHere != other_storage._canMentionHere {return false}
        if _storage._canMentionMember != other_storage._canMentionMember {return false}
        if _storage._canMentionRole != other_storage._canMentionRole {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Club_V1_ClubRole: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "state"),
    3: .same(proto: "privilege"),
    4: .standard(proto: "always_grant_stream_access"),
    5: .standard(proto: "allow_in_club_slot"),
  ]

  fileprivate class _StorageClass {
    var _id: UInt32? = nil
    var _state: Bgs_Protocol_RoleState? = nil
    var _privilege: Bgs_Protocol_Club_V1_ClubPrivilegeSet? = nil
    var _alwaysGrantStreamAccess: Bool? = nil
    var _allowInClubSlot: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _state = source._state
      _privilege = source._privilege
      _alwaysGrantStreamAccess = source._alwaysGrantStreamAccess
      _allowInClubSlot = source._allowInClubSlot
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Club_V1_ClubRole) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._id != other_storage._id {return false}
        if _storage._state != other_storage._state {return false}
        if _storage._privilege != other_storage._privilege {return false}
        if _storage._alwaysGrantStreamAccess != other_storage._alwaysGrantStreamAccess {return false}
        if _storage._allowInClubSlot != other_storage._allowInClubSlot {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Club_V1_ClubRoleSet: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "role"),
    5: .standard(proto: "default_role"),
    6: .standard(proto: "assignment_respects_relegation_chain"),
    7: .same(proto: "subtype"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Club_V1_ClubRoleSet) -> Bool {
    if self.role != other.role {return false}
    if self.defaultRole != other.defaultRole {return false}
    if self._assignmentRespectsRelegationChain != other._assignmentRespectsRelegationChain {return false}
    if self._subtype != other._subtype {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
