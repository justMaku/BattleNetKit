// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/channel_types.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_Channel_V1_Message: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".Message"

  public var attribute: [Bgs_Protocol_Attribute] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.attribute) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.attribute)
      case 100..<10001:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Bgs_Protocol_Channel_V1_Message.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.attribute.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attribute, fieldNumber: 1)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 100, end: 10001)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
}

public struct Bgs_Protocol_Channel_V1_ListChannelsOptions: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ListChannelsOptions"

  public var startIndex: UInt32 {
    get {return _storage._startIndex ?? 0}
    set {_uniqueStorage()._startIndex = newValue}
  }
  /// Returns true if `startIndex` has been explicitly set.
  public var hasStartIndex: Bool {return _storage._startIndex != nil}
  /// Clears the value of `startIndex`. Subsequent reads from it will return its default value.
  public mutating func clearStartIndex() {_storage._startIndex = nil}

  public var maxResults: UInt32 {
    get {return _storage._maxResults ?? 16}
    set {_uniqueStorage()._maxResults = newValue}
  }
  /// Returns true if `maxResults` has been explicitly set.
  public var hasMaxResults: Bool {return _storage._maxResults != nil}
  /// Clears the value of `maxResults`. Subsequent reads from it will return its default value.
  public mutating func clearMaxResults() {_storage._maxResults = nil}

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_storage._program = nil}

  public var locale: UInt32 {
    get {return _storage._locale ?? 0}
    set {_uniqueStorage()._locale = newValue}
  }
  /// Returns true if `locale` has been explicitly set.
  public var hasLocale: Bool {return _storage._locale != nil}
  /// Clears the value of `locale`. Subsequent reads from it will return its default value.
  public mutating func clearLocale() {_storage._locale = nil}

  public var capacityFull: UInt32 {
    get {return _storage._capacityFull ?? 0}
    set {_uniqueStorage()._capacityFull = newValue}
  }
  /// Returns true if `capacityFull` has been explicitly set.
  public var hasCapacityFull: Bool {return _storage._capacityFull != nil}
  /// Clears the value of `capacityFull`. Subsequent reads from it will return its default value.
  public mutating func clearCapacityFull() {_storage._capacityFull = nil}

  public var attributeFilter: Bgs_Protocol_AttributeFilter {
    get {return _storage._attributeFilter ?? Bgs_Protocol_AttributeFilter()}
    set {_uniqueStorage()._attributeFilter = newValue}
  }
  /// Returns true if `attributeFilter` has been explicitly set.
  public var hasAttributeFilter: Bool {return _storage._attributeFilter != nil}
  /// Clears the value of `attributeFilter`. Subsequent reads from it will return its default value.
  public mutating func clearAttributeFilter() {_storage._attributeFilter = nil}

  public var channelType: String {
    get {return _storage._channelType ?? String()}
    set {_uniqueStorage()._channelType = newValue}
  }
  /// Returns true if `channelType` has been explicitly set.
  public var hasChannelType: Bool {return _storage._channelType != nil}
  /// Clears the value of `channelType`. Subsequent reads from it will return its default value.
  public mutating func clearChannelType() {_storage._channelType = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._attributeFilter == nil {return false}
      if let v = _storage._attributeFilter, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularUInt32Field(value: &_storage._startIndex)
        case 2: try decoder.decodeSingularUInt32Field(value: &_storage._maxResults)
        case 3: try decoder.decodeSingularStringField(value: &_storage._name)
        case 4: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        case 5: try decoder.decodeSingularFixed32Field(value: &_storage._locale)
        case 6: try decoder.decodeSingularUInt32Field(value: &_storage._capacityFull)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._attributeFilter)
        case 8: try decoder.decodeSingularStringField(value: &_storage._channelType)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._startIndex {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._maxResults {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 4)
      }
      if let v = _storage._locale {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._capacityFull {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 6)
      }
      if let v = _storage._attributeFilter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._channelType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V1_ChannelDescription: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ChannelDescription"

  public var channelID: Bgs_Protocol_EntityId {
    get {return _storage._channelID ?? Bgs_Protocol_EntityId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var currentMembers: UInt32 {
    get {return _storage._currentMembers ?? 0}
    set {_uniqueStorage()._currentMembers = newValue}
  }
  /// Returns true if `currentMembers` has been explicitly set.
  public var hasCurrentMembers: Bool {return _storage._currentMembers != nil}
  /// Clears the value of `currentMembers`. Subsequent reads from it will return its default value.
  public mutating func clearCurrentMembers() {_storage._currentMembers = nil}

  public var state: Bgs_Protocol_Channel_V1_ChannelState {
    get {return _storage._state ?? Bgs_Protocol_Channel_V1_ChannelState()}
    set {_uniqueStorage()._state = newValue}
  }
  /// Returns true if `state` has been explicitly set.
  public var hasState: Bool {return _storage._state != nil}
  /// Clears the value of `state`. Subsequent reads from it will return its default value.
  public mutating func clearState() {_storage._state = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._channelID == nil {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._state, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 2: try decoder.decodeSingularUInt32Field(value: &_storage._currentMembers)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._state)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._currentMembers {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._state {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V1_ChannelInfo: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ChannelInfo"

  public var description_p: Bgs_Protocol_Channel_V1_ChannelDescription {
    get {return _storage._description_p ?? Bgs_Protocol_Channel_V1_ChannelDescription()}
    set {_uniqueStorage()._description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  public var hasDescription_p: Bool {return _storage._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  public mutating func clearDescription_p() {_storage._description_p = nil}

  public var member: [Bgs_Protocol_Channel_V1_Member] {
    get {return _storage._member}
    set {_uniqueStorage()._member = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._description_p == nil {return false}
      if let v = _storage._description_p, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._member) {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._description_p)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._member)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._description_p {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._member.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._member, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V1_ChannelState: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".ChannelState"

  public var maxMembers: UInt32 {
    get {return _maxMembers ?? 0}
    set {_maxMembers = newValue}
  }
  /// Returns true if `maxMembers` has been explicitly set.
  public var hasMaxMembers: Bool {return self._maxMembers != nil}
  /// Clears the value of `maxMembers`. Subsequent reads from it will return its default value.
  public mutating func clearMaxMembers() {self._maxMembers = nil}

  public var minMembers: UInt32 {
    get {return _minMembers ?? 0}
    set {_minMembers = newValue}
  }
  /// Returns true if `minMembers` has been explicitly set.
  public var hasMinMembers: Bool {return self._minMembers != nil}
  /// Clears the value of `minMembers`. Subsequent reads from it will return its default value.
  public mutating func clearMinMembers() {self._minMembers = nil}

  public var attribute: [Bgs_Protocol_Attribute] = []

  public var invitation: [Bgs_Protocol_Invitation] = []

  public var reason: UInt32 {
    get {return _reason ?? 0}
    set {_reason = newValue}
  }
  /// Returns true if `reason` has been explicitly set.
  public var hasReason: Bool {return self._reason != nil}
  /// Clears the value of `reason`. Subsequent reads from it will return its default value.
  public mutating func clearReason() {self._reason = nil}

  public var privacyLevel: Bgs_Protocol_Channel_V1_ChannelState.PrivacyLevel {
    get {return _privacyLevel ?? .open}
    set {_privacyLevel = newValue}
  }
  /// Returns true if `privacyLevel` has been explicitly set.
  public var hasPrivacyLevel: Bool {return self._privacyLevel != nil}
  /// Clears the value of `privacyLevel`. Subsequent reads from it will return its default value.
  public mutating func clearPrivacyLevel() {self._privacyLevel = nil}

  public var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {self._name = nil}

  public var channelType: String {
    get {return _channelType ?? "default"}
    set {_channelType = newValue}
  }
  /// Returns true if `channelType` has been explicitly set.
  public var hasChannelType: Bool {return self._channelType != nil}
  /// Clears the value of `channelType`. Subsequent reads from it will return its default value.
  public mutating func clearChannelType() {self._channelType = nil}

  public var program: UInt32 {
    get {return _program ?? 0}
    set {_program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return self._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {self._program = nil}

  public var subscribeToPresence: Bool {
    get {return _subscribeToPresence ?? true}
    set {_subscribeToPresence = newValue}
  }
  /// Returns true if `subscribeToPresence` has been explicitly set.
  public var hasSubscribeToPresence: Bool {return self._subscribeToPresence != nil}
  /// Clears the value of `subscribeToPresence`. Subsequent reads from it will return its default value.
  public mutating func clearSubscribeToPresence() {self._subscribeToPresence = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum PrivacyLevel: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case `open` // = 1
    case openInvitationAndFriend // = 2
    case openInvitation // = 3
    case closed // = 4

    public init() {
      self = .open
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .open
      case 2: self = .openInvitationAndFriend
      case 3: self = .openInvitation
      case 4: self = .closed
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .open: return 1
      case .openInvitationAndFriend: return 2
      case .openInvitation: return 3
      case .closed: return 4
      }
    }

  }

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.attribute) {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.invitation) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularUInt32Field(value: &self._maxMembers)
      case 2: try decoder.decodeSingularUInt32Field(value: &self._minMembers)
      case 3: try decoder.decodeRepeatedMessageField(value: &self.attribute)
      case 4: try decoder.decodeRepeatedMessageField(value: &self.invitation)
      case 6: try decoder.decodeSingularUInt32Field(value: &self._reason)
      case 7: try decoder.decodeSingularEnumField(value: &self._privacyLevel)
      case 8: try decoder.decodeSingularStringField(value: &self._name)
      case 10: try decoder.decodeSingularStringField(value: &self._channelType)
      case 11: try decoder.decodeSingularFixed32Field(value: &self._program)
      case 13: try decoder.decodeSingularBoolField(value: &self._subscribeToPresence)
      case 100..<10001:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Bgs_Protocol_Channel_V1_ChannelState.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._maxMembers {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
    }
    if let v = self._minMembers {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 2)
    }
    if !self.attribute.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.attribute, fieldNumber: 3)
    }
    if !self.invitation.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.invitation, fieldNumber: 4)
    }
    if let v = self._reason {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 6)
    }
    if let v = self._privacyLevel {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 7)
    }
    if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 8)
    }
    if let v = self._channelType {
      try visitor.visitSingularStringField(value: v, fieldNumber: 10)
    }
    if let v = self._program {
      try visitor.visitSingularFixed32Field(value: v, fieldNumber: 11)
    }
    if let v = self._subscribeToPresence {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 13)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 100, end: 10001)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _maxMembers: UInt32? = nil
  fileprivate var _minMembers: UInt32? = nil
  fileprivate var _reason: UInt32? = nil
  fileprivate var _privacyLevel: Bgs_Protocol_Channel_V1_ChannelState.PrivacyLevel? = nil
  fileprivate var _name: String? = nil
  fileprivate var _channelType: String? = nil
  fileprivate var _program: UInt32? = nil
  fileprivate var _subscribeToPresence: Bool? = nil
}

public struct Bgs_Protocol_Channel_V1_MemberAccountInfo: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberAccountInfo"

  public var battleTag: String {
    get {return _battleTag ?? String()}
    set {_battleTag = newValue}
  }
  /// Returns true if `battleTag` has been explicitly set.
  public var hasBattleTag: Bool {return self._battleTag != nil}
  /// Clears the value of `battleTag`. Subsequent reads from it will return its default value.
  public mutating func clearBattleTag() {self._battleTag = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 3: try decoder.decodeSingularStringField(value: &self._battleTag)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._battleTag {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _battleTag: String? = nil
}

public struct Bgs_Protocol_Channel_V1_MemberState: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberState"

  public var attribute: [Bgs_Protocol_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var role: [UInt32] {
    get {return _storage._role}
    set {_uniqueStorage()._role = newValue}
  }

  public var privileges: UInt64 {
    get {return _storage._privileges ?? 0}
    set {_uniqueStorage()._privileges = newValue}
  }
  /// Returns true if `privileges` has been explicitly set.
  public var hasPrivileges: Bool {return _storage._privileges != nil}
  /// Clears the value of `privileges`. Subsequent reads from it will return its default value.
  public mutating func clearPrivileges() {_storage._privileges = nil}

  public var info: Bgs_Protocol_Channel_V1_MemberAccountInfo {
    get {return _storage._info ?? Bgs_Protocol_Channel_V1_MemberAccountInfo()}
    set {_uniqueStorage()._info = newValue}
  }
  /// Returns true if `info` has been explicitly set.
  public var hasInfo: Bool {return _storage._info != nil}
  /// Clears the value of `info`. Subsequent reads from it will return its default value.
  public mutating func clearInfo() {_storage._info = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._attribute) {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        case 2: try decoder.decodeRepeatedUInt32Field(value: &_storage._role)
        case 3: try decoder.decodeSingularUInt64Field(value: &_storage._privileges)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._info)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 1)
      }
      if !_storage._role.isEmpty {
        try visitor.visitPackedUInt32Field(value: _storage._role, fieldNumber: 2)
      }
      if let v = _storage._privileges {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 3)
      }
      if let v = _storage._info {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V1_Member: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Member"

  public var identity: Bgs_Protocol_Identity {
    get {return _storage._identity ?? Bgs_Protocol_Identity()}
    set {_uniqueStorage()._identity = newValue}
  }
  /// Returns true if `identity` has been explicitly set.
  public var hasIdentity: Bool {return _storage._identity != nil}
  /// Clears the value of `identity`. Subsequent reads from it will return its default value.
  public mutating func clearIdentity() {_storage._identity = nil}

  public var state: Bgs_Protocol_Channel_V1_MemberState {
    get {return _storage._state ?? Bgs_Protocol_Channel_V1_MemberState()}
    set {_uniqueStorage()._state = newValue}
  }
  /// Returns true if `state` has been explicitly set.
  public var hasState: Bool {return _storage._state != nil}
  /// Clears the value of `state`. Subsequent reads from it will return its default value.
  public mutating func clearState() {_storage._state = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._identity == nil {return false}
      if _storage._state == nil {return false}
      if let v = _storage._identity, !v.isInitialized {return false}
      if let v = _storage._state, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._identity)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._state)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._identity {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._state {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V1_SubscriberId: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SubscriberId"

  public var account: Bgs_Protocol_Account_V1_AccountId {
    get {return _storage._account ?? Bgs_Protocol_Account_V1_AccountId()}
    set {_uniqueStorage()._account = newValue}
  }
  /// Returns true if `account` has been explicitly set.
  public var hasAccount: Bool {return _storage._account != nil}
  /// Clears the value of `account`. Subsequent reads from it will return its default value.
  public mutating func clearAccount() {_storage._account = nil}

  public var gameAccount: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._gameAccount ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._gameAccount = newValue}
  }
  /// Returns true if `gameAccount` has been explicitly set.
  public var hasGameAccount: Bool {return _storage._gameAccount != nil}
  /// Clears the value of `gameAccount`. Subsequent reads from it will return its default value.
  public mutating func clearGameAccount() {_storage._gameAccount = nil}

  public var process: Bgs_Protocol_ProcessId {
    get {return _storage._process ?? Bgs_Protocol_ProcessId()}
    set {_uniqueStorage()._process = newValue}
  }
  /// Returns true if `process` has been explicitly set.
  public var hasProcess: Bool {return _storage._process != nil}
  /// Clears the value of `process`. Subsequent reads from it will return its default value.
  public mutating func clearProcess() {_storage._process = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._account, !v.isInitialized {return false}
      if let v = _storage._gameAccount, !v.isInitialized {return false}
      if let v = _storage._process, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._account)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._gameAccount)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._process)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._account {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._gameAccount {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._process {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.channel.v1"

extension Bgs_Protocol_Channel_V1_Message: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_Message) -> Bool {
    if self.attribute != other.attribute {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_ListChannelsOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "start_index"),
    2: .standard(proto: "max_results"),
    3: .same(proto: "name"),
    4: .same(proto: "program"),
    5: .same(proto: "locale"),
    6: .standard(proto: "capacity_full"),
    7: .standard(proto: "attribute_filter"),
    8: .standard(proto: "channel_type"),
  ]

  fileprivate class _StorageClass {
    var _startIndex: UInt32? = nil
    var _maxResults: UInt32? = nil
    var _name: String? = nil
    var _program: UInt32? = nil
    var _locale: UInt32? = nil
    var _capacityFull: UInt32? = nil
    var _attributeFilter: Bgs_Protocol_AttributeFilter? = nil
    var _channelType: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _startIndex = source._startIndex
      _maxResults = source._maxResults
      _name = source._name
      _program = source._program
      _locale = source._locale
      _capacityFull = source._capacityFull
      _attributeFilter = source._attributeFilter
      _channelType = source._channelType
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_ListChannelsOptions) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._startIndex != other_storage._startIndex {return false}
        if _storage._maxResults != other_storage._maxResults {return false}
        if _storage._name != other_storage._name {return false}
        if _storage._program != other_storage._program {return false}
        if _storage._locale != other_storage._locale {return false}
        if _storage._capacityFull != other_storage._capacityFull {return false}
        if _storage._attributeFilter != other_storage._attributeFilter {return false}
        if _storage._channelType != other_storage._channelType {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_ChannelDescription: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "channel_id"),
    2: .standard(proto: "current_members"),
    3: .same(proto: "state"),
  ]

  fileprivate class _StorageClass {
    var _channelID: Bgs_Protocol_EntityId? = nil
    var _currentMembers: UInt32? = nil
    var _state: Bgs_Protocol_Channel_V1_ChannelState? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _channelID = source._channelID
      _currentMembers = source._currentMembers
      _state = source._state
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_ChannelDescription) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._currentMembers != other_storage._currentMembers {return false}
        if _storage._state != other_storage._state {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_ChannelInfo: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "description"),
    2: .same(proto: "member"),
  ]

  fileprivate class _StorageClass {
    var _description_p: Bgs_Protocol_Channel_V1_ChannelDescription? = nil
    var _member: [Bgs_Protocol_Channel_V1_Member] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _description_p = source._description_p
      _member = source._member
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_ChannelInfo) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._member != other_storage._member {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_ChannelState: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "max_members"),
    2: .standard(proto: "min_members"),
    3: .same(proto: "attribute"),
    4: .same(proto: "invitation"),
    6: .same(proto: "reason"),
    7: .standard(proto: "privacy_level"),
    8: .same(proto: "name"),
    10: .standard(proto: "channel_type"),
    11: .same(proto: "program"),
    13: .standard(proto: "subscribe_to_presence"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_ChannelState) -> Bool {
    if self._maxMembers != other._maxMembers {return false}
    if self._minMembers != other._minMembers {return false}
    if self.attribute != other.attribute {return false}
    if self.invitation != other.invitation {return false}
    if self._reason != other._reason {return false}
    if self._privacyLevel != other._privacyLevel {return false}
    if self._name != other._name {return false}
    if self._channelType != other._channelType {return false}
    if self._program != other._program {return false}
    if self._subscribeToPresence != other._subscribeToPresence {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_ChannelState.PrivacyLevel: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "PRIVACY_LEVEL_OPEN"),
    2: .same(proto: "PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND"),
    3: .same(proto: "PRIVACY_LEVEL_OPEN_INVITATION"),
    4: .same(proto: "PRIVACY_LEVEL_CLOSED"),
  ]
}

extension Bgs_Protocol_Channel_V1_MemberAccountInfo: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    3: .standard(proto: "battle_tag"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_MemberAccountInfo) -> Bool {
    if self._battleTag != other._battleTag {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_MemberState: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "attribute"),
    2: .same(proto: "role"),
    3: .same(proto: "privileges"),
    4: .same(proto: "info"),
  ]

  fileprivate class _StorageClass {
    var _attribute: [Bgs_Protocol_Attribute] = []
    var _role: [UInt32] = []
    var _privileges: UInt64? = nil
    var _info: Bgs_Protocol_Channel_V1_MemberAccountInfo? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _attribute = source._attribute
      _role = source._role
      _privileges = source._privileges
      _info = source._info
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_MemberState) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._attribute != other_storage._attribute {return false}
        if _storage._role != other_storage._role {return false}
        if _storage._privileges != other_storage._privileges {return false}
        if _storage._info != other_storage._info {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_Member: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "identity"),
    2: .same(proto: "state"),
  ]

  fileprivate class _StorageClass {
    var _identity: Bgs_Protocol_Identity? = nil
    var _state: Bgs_Protocol_Channel_V1_MemberState? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _identity = source._identity
      _state = source._state
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_Member) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._identity != other_storage._identity {return false}
        if _storage._state != other_storage._state {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V1_SubscriberId: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "account"),
    2: .standard(proto: "game_account"),
    3: .same(proto: "process"),
  ]

  fileprivate class _StorageClass {
    var _account: Bgs_Protocol_Account_V1_AccountId? = nil
    var _gameAccount: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _process: Bgs_Protocol_ProcessId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _account = source._account
      _gameAccount = source._gameAccount
      _process = source._process
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V1_SubscriberId) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._account != other_storage._account {return false}
        if _storage._gameAccount != other_storage._gameAccount {return false}
        if _storage._process != other_storage._process {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
