// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/api/client/v2/channel_service.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_Channel_V2_CreateChannelRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".CreateChannelRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var options: Bgs_Protocol_Channel_V2_CreateChannelOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_CreateChannelOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_DissolveChannelRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".DissolveChannelRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetChannelRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetChannelRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var fetchAttributes: Bool {
    get {return _storage._fetchAttributes ?? false}
    set {_uniqueStorage()._fetchAttributes = newValue}
  }
  /// Returns true if `fetchAttributes` has been explicitly set.
  public var hasFetchAttributes: Bool {return _storage._fetchAttributes != nil}
  /// Clears the value of `fetchAttributes`. Subsequent reads from it will return its default value.
  public mutating func clearFetchAttributes() {_storage._fetchAttributes = nil}

  public var fetchMembers: Bool {
    get {return _storage._fetchMembers ?? false}
    set {_uniqueStorage()._fetchMembers = newValue}
  }
  /// Returns true if `fetchMembers` has been explicitly set.
  public var hasFetchMembers: Bool {return _storage._fetchMembers != nil}
  /// Clears the value of `fetchMembers`. Subsequent reads from it will return its default value.
  public mutating func clearFetchMembers() {_storage._fetchMembers = nil}

  public var fetchInvitations: Bool {
    get {return _storage._fetchInvitations ?? false}
    set {_uniqueStorage()._fetchInvitations = newValue}
  }
  /// Returns true if `fetchInvitations` has been explicitly set.
  public var hasFetchInvitations: Bool {return _storage._fetchInvitations != nil}
  /// Clears the value of `fetchInvitations`. Subsequent reads from it will return its default value.
  public mutating func clearFetchInvitations() {_storage._fetchInvitations = nil}

  public var fetchRoles: Bool {
    get {return _storage._fetchRoles ?? false}
    set {_uniqueStorage()._fetchRoles = newValue}
  }
  /// Returns true if `fetchRoles` has been explicitly set.
  public var hasFetchRoles: Bool {return _storage._fetchRoles != nil}
  /// Clears the value of `fetchRoles`. Subsequent reads from it will return its default value.
  public mutating func clearFetchRoles() {_storage._fetchRoles = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 5: try decoder.decodeSingularBoolField(value: &_storage._fetchAttributes)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._fetchMembers)
        case 7: try decoder.decodeSingularBoolField(value: &_storage._fetchInvitations)
        case 8: try decoder.decodeSingularBoolField(value: &_storage._fetchRoles)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._fetchAttributes {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
      }
      if let v = _storage._fetchMembers {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      }
      if let v = _storage._fetchInvitations {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 7)
      }
      if let v = _storage._fetchRoles {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetChannelResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetChannelResponse"

  public var channel: Bgs_Protocol_Channel_V2_Channel {
    get {return _storage._channel ?? Bgs_Protocol_Channel_V2_Channel()}
    set {_uniqueStorage()._channel = newValue}
  }
  /// Returns true if `channel` has been explicitly set.
  public var hasChannel: Bool {return _storage._channel != nil}
  /// Clears the value of `channel`. Subsequent reads from it will return its default value.
  public mutating func clearChannel() {_storage._channel = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channel, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._channel)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetPublicChannelTypesRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetPublicChannelTypesRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var options: Bgs_Protocol_Channel_V2_GetPublicChannelTypesOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_GetPublicChannelTypesOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var continuation: UInt64 {
    get {return _storage._continuation ?? 0}
    set {_uniqueStorage()._continuation = newValue}
  }
  /// Returns true if `continuation` has been explicitly set.
  public var hasContinuation: Bool {return _storage._continuation != nil}
  /// Clears the value of `continuation`. Subsequent reads from it will return its default value.
  public mutating func clearContinuation() {_storage._continuation = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._options)
        case 3: try decoder.decodeSingularUInt64Field(value: &_storage._continuation)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._continuation {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetPublicChannelTypesResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetPublicChannelTypesResponse"

  public var channel: [Bgs_Protocol_Channel_V2_PublicChannelType] = []

  public var continuation: UInt64 {
    get {return _continuation ?? 0}
    set {_continuation = newValue}
  }
  /// Returns true if `continuation` has been explicitly set.
  public var hasContinuation: Bool {return self._continuation != nil}
  /// Clears the value of `continuation`. Subsequent reads from it will return its default value.
  public mutating func clearContinuation() {self._continuation = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.channel)
      case 2: try decoder.decodeSingularUInt64Field(value: &self._continuation)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.channel.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.channel, fieldNumber: 1)
    }
    if let v = self._continuation {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _continuation: UInt64? = nil
}

public struct Bgs_Protocol_Channel_V2_FindChannelRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FindChannelRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var options: Bgs_Protocol_Channel_V2_FindChannelOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_FindChannelOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SubscribeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SubscribeRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SubscribeResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SubscribeResponse"

  public var channel: Bgs_Protocol_Channel_V2_Channel {
    get {return _storage._channel ?? Bgs_Protocol_Channel_V2_Channel()}
    set {_uniqueStorage()._channel = newValue}
  }
  /// Returns true if `channel` has been explicitly set.
  public var hasChannel: Bool {return _storage._channel != nil}
  /// Clears the value of `channel`. Subsequent reads from it will return its default value.
  public mutating func clearChannel() {_storage._channel = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channel, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._channel)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_UnsubscribeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".UnsubscribeRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SetAttributeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SetAttributeRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var attribute: [Bgs_Protocol_V2_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SetPrivacyLevelRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SetPrivacyLevelRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var privacyLevel: Bgs_Protocol_Channel_V2_PrivacyLevel {
    get {return _storage._privacyLevel ?? .open}
    set {_uniqueStorage()._privacyLevel = newValue}
  }
  /// Returns true if `privacyLevel` has been explicitly set.
  public var hasPrivacyLevel: Bool {return _storage._privacyLevel != nil}
  /// Clears the value of `privacyLevel`. Subsequent reads from it will return its default value.
  public mutating func clearPrivacyLevel() {_storage._privacyLevel = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularEnumField(value: &_storage._privacyLevel)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._privacyLevel {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SendMessageRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SendMessageRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var options: Bgs_Protocol_Channel_V2_SendMessageOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_SendMessageOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SetTypingIndicatorRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SetTypingIndicatorRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var action: Bgs_Protocol_TypingIndicator {
    get {return _storage._action ?? .typingStart}
    set {_uniqueStorage()._action = newValue}
  }
  /// Returns true if `action` has been explicitly set.
  public var hasAction: Bool {return _storage._action != nil}
  /// Clears the value of `action`. Subsequent reads from it will return its default value.
  public mutating func clearAction() {_storage._action = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularEnumField(value: &_storage._action)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._action {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_JoinRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".JoinRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var member: Bgs_Protocol_Channel_V2_CreateMemberOptions {
    get {return _storage._member ?? Bgs_Protocol_Channel_V2_CreateMemberOptions()}
    set {_uniqueStorage()._member = newValue}
  }
  /// Returns true if `member` has been explicitly set.
  public var hasMember: Bool {return _storage._member != nil}
  /// Clears the value of `member`. Subsequent reads from it will return its default value.
  public mutating func clearMember() {_storage._member = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._member, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._member)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._member {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_LeaveRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".LeaveRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_KickRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".KickRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var targetID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._targetID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._targetID = newValue}
  }
  /// Returns true if `targetID` has been explicitly set.
  public var hasTargetID: Bool {return _storage._targetID != nil}
  /// Clears the value of `targetID`. Subsequent reads from it will return its default value.
  public mutating func clearTargetID() {_storage._targetID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._targetID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._targetID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._targetID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SetMemberAttributeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SetMemberAttributeRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var assignment: Bgs_Protocol_Channel_V2_AttributeAssignment {
    get {return _storage._assignment ?? Bgs_Protocol_Channel_V2_AttributeAssignment()}
    set {_uniqueStorage()._assignment = newValue}
  }
  /// Returns true if `assignment` has been explicitly set.
  public var hasAssignment: Bool {return _storage._assignment != nil}
  /// Clears the value of `assignment`. Subsequent reads from it will return its default value.
  public mutating func clearAssignment() {_storage._assignment = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._assignment, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._assignment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._assignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_AssignRoleRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".AssignRoleRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var assignment: Bgs_Protocol_Channel_V2_RoleAssignment {
    get {return _storage._assignment ?? Bgs_Protocol_Channel_V2_RoleAssignment()}
    set {_uniqueStorage()._assignment = newValue}
  }
  /// Returns true if `assignment` has been explicitly set.
  public var hasAssignment: Bool {return _storage._assignment != nil}
  /// Clears the value of `assignment`. Subsequent reads from it will return its default value.
  public mutating func clearAssignment() {_storage._assignment = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._assignment, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._assignment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._assignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_UnassignRoleRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".UnassignRoleRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var assignment: Bgs_Protocol_Channel_V2_RoleAssignment {
    get {return _storage._assignment ?? Bgs_Protocol_Channel_V2_RoleAssignment()}
    set {_uniqueStorage()._assignment = newValue}
  }
  /// Returns true if `assignment` has been explicitly set.
  public var hasAssignment: Bool {return _storage._assignment != nil}
  /// Clears the value of `assignment`. Subsequent reads from it will return its default value.
  public mutating func clearAssignment() {_storage._assignment = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._assignment, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._assignment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._assignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SendInvitationRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SendInvitationRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var options: Bgs_Protocol_Channel_V2_SendInvitationOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_SendInvitationOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_AcceptInvitationRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".AcceptInvitationRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var invitationID: UInt64 {
    get {return _storage._invitationID ?? 0}
    set {_uniqueStorage()._invitationID = newValue}
  }
  /// Returns true if `invitationID` has been explicitly set.
  public var hasInvitationID: Bool {return _storage._invitationID != nil}
  /// Clears the value of `invitationID`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationID() {_storage._invitationID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularFixed64Field(value: &_storage._invitationID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._invitationID {
        try visitor.visitSingularFixed64Field(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_DeclineInvitationRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".DeclineInvitationRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var invitationID: UInt64 {
    get {return _storage._invitationID ?? 0}
    set {_uniqueStorage()._invitationID = newValue}
  }
  /// Returns true if `invitationID` has been explicitly set.
  public var hasInvitationID: Bool {return _storage._invitationID != nil}
  /// Clears the value of `invitationID`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationID() {_storage._invitationID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularFixed64Field(value: &_storage._invitationID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._invitationID {
        try visitor.visitSingularFixed64Field(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_RevokeInvitationRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".RevokeInvitationRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var invitationID: UInt64 {
    get {return _storage._invitationID ?? 0}
    set {_uniqueStorage()._invitationID = newValue}
  }
  /// Returns true if `invitationID` has been explicitly set.
  public var hasInvitationID: Bool {return _storage._invitationID != nil}
  /// Clears the value of `invitationID`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationID() {_storage._invitationID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 3: try decoder.decodeSingularFixed64Field(value: &_storage._invitationID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._invitationID {
        try visitor.visitSingularFixed64Field(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SendSuggestionRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SendSuggestionRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var options: Bgs_Protocol_Channel_V2_SendSuggestionOptions {
    get {return _storage._options ?? Bgs_Protocol_Channel_V2_SendSuggestionOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetJoinVoiceTokenRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetJoinVoiceTokenRequest"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_GetJoinVoiceTokenResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetJoinVoiceTokenResponse"

  public var channelUri: String {
    get {return _storage._channelUri ?? String()}
    set {_uniqueStorage()._channelUri = newValue}
  }
  /// Returns true if `channelUri` has been explicitly set.
  public var hasChannelUri: Bool {return _storage._channelUri != nil}
  /// Clears the value of `channelUri`. Subsequent reads from it will return its default value.
  public mutating func clearChannelUri() {_storage._channelUri = nil}

  public var credentials: Bgs_Protocol_VoiceCredentials {
    get {return _storage._credentials ?? Bgs_Protocol_VoiceCredentials()}
    set {_uniqueStorage()._credentials = newValue}
  }
  /// Returns true if `credentials` has been explicitly set.
  public var hasCredentials: Bool {return _storage._credentials != nil}
  /// Clears the value of `credentials`. Subsequent reads from it will return its default value.
  public mutating func clearCredentials() {_storage._credentials = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._channelUri)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._credentials)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._channelUri {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._credentials {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_MemberAddedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberAddedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var member: Bgs_Protocol_Channel_V2_Member {
    get {return _storage._member ?? Bgs_Protocol_Channel_V2_Member()}
    set {_uniqueStorage()._member = newValue}
  }
  /// Returns true if `member` has been explicitly set.
  public var hasMember: Bool {return _storage._member != nil}
  /// Clears the value of `member`. Subsequent reads from it will return its default value.
  public mutating func clearMember() {_storage._member = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._member, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._member)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._member {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_MemberRemovedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberRemovedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var memberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._memberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._memberID = newValue}
  }
  /// Returns true if `memberID` has been explicitly set.
  public var hasMemberID: Bool {return _storage._memberID != nil}
  /// Clears the value of `memberID`. Subsequent reads from it will return its default value.
  public mutating func clearMemberID() {_storage._memberID = nil}

  public var reason: UInt32 {
    get {return _storage._reason ?? 0}
    set {_uniqueStorage()._reason = newValue}
  }
  /// Returns true if `reason` has been explicitly set.
  public var hasReason: Bool {return _storage._reason != nil}
  /// Clears the value of `reason`. Subsequent reads from it will return its default value.
  public mutating func clearReason() {_storage._reason = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._memberID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._memberID)
        case 5: try decoder.decodeSingularUInt32Field(value: &_storage._reason)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._memberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._reason {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_MemberAttributeChangedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberAttributeChangedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var assignment: Bgs_Protocol_Channel_V2_AttributeAssignment {
    get {return _storage._assignment ?? Bgs_Protocol_Channel_V2_AttributeAssignment()}
    set {_uniqueStorage()._assignment = newValue}
  }
  /// Returns true if `assignment` has been explicitly set.
  public var hasAssignment: Bool {return _storage._assignment != nil}
  /// Clears the value of `assignment`. Subsequent reads from it will return its default value.
  public mutating func clearAssignment() {_storage._assignment = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._assignment, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._assignment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._assignment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_MemberRoleChangedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MemberRoleChangedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var assignment: [Bgs_Protocol_Channel_V2_RoleAssignment] {
    get {return _storage._assignment}
    set {_uniqueStorage()._assignment = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._assignment) {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._assignment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if !_storage._assignment.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._assignment, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_AttributeChangedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".AttributeChangedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var attribute: [Bgs_Protocol_V2_Attribute] {
    get {return _storage._attribute}
    set {_uniqueStorage()._attribute = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._attribute)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if !_storage._attribute.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attribute, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_PrivacyLevelChangedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".PrivacyLevelChangedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var privacyLevel: Bgs_Protocol_Channel_V2_PrivacyLevel {
    get {return _storage._privacyLevel ?? .open}
    set {_uniqueStorage()._privacyLevel = newValue}
  }
  /// Returns true if `privacyLevel` has been explicitly set.
  public var hasPrivacyLevel: Bool {return _storage._privacyLevel != nil}
  /// Clears the value of `privacyLevel`. Subsequent reads from it will return its default value.
  public mutating func clearPrivacyLevel() {_storage._privacyLevel = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._privacyLevel)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._privacyLevel {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SendMessageNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SendMessageNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var message: Bgs_Protocol_Channel_V2_ChannelMessage {
    get {return _storage._message ?? Bgs_Protocol_Channel_V2_ChannelMessage()}
    set {_uniqueStorage()._message = newValue}
  }
  /// Returns true if `message` has been explicitly set.
  public var hasMessage: Bool {return _storage._message != nil}
  /// Clears the value of `message`. Subsequent reads from it will return its default value.
  public mutating func clearMessage() {_storage._message = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._message, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._message)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._message {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_TypingIndicatorNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".TypingIndicatorNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var authorID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._authorID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._authorID = newValue}
  }
  /// Returns true if `authorID` has been explicitly set.
  public var hasAuthorID: Bool {return _storage._authorID != nil}
  /// Clears the value of `authorID`. Subsequent reads from it will return its default value.
  public mutating func clearAuthorID() {_storage._authorID = nil}

  public var epoch: UInt64 {
    get {return _storage._epoch ?? 0}
    set {_uniqueStorage()._epoch = newValue}
  }
  /// Returns true if `epoch` has been explicitly set.
  public var hasEpoch: Bool {return _storage._epoch != nil}
  /// Clears the value of `epoch`. Subsequent reads from it will return its default value.
  public mutating func clearEpoch() {_storage._epoch = nil}

  public var action: Bgs_Protocol_TypingIndicator {
    get {return _storage._action ?? .typingStart}
    set {_uniqueStorage()._action = newValue}
  }
  /// Returns true if `action` has been explicitly set.
  public var hasAction: Bool {return _storage._action != nil}
  /// Clears the value of `action`. Subsequent reads from it will return its default value.
  public mutating func clearAction() {_storage._action = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._authorID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._authorID)
        case 5: try decoder.decodeSingularUInt64Field(value: &_storage._epoch)
        case 6: try decoder.decodeSingularEnumField(value: &_storage._action)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._authorID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._epoch {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._action {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_InvitationAddedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".InvitationAddedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var invitation: Bgs_Protocol_Channel_V2_ChannelInvitation {
    get {return _storage._invitation ?? Bgs_Protocol_Channel_V2_ChannelInvitation()}
    set {_uniqueStorage()._invitation = newValue}
  }
  /// Returns true if `invitation` has been explicitly set.
  public var hasInvitation: Bool {return _storage._invitation != nil}
  /// Clears the value of `invitation`. Subsequent reads from it will return its default value.
  public mutating func clearInvitation() {_storage._invitation = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      if let v = _storage._invitation, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._invitation)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._invitation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_InvitationRemovedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".InvitationRemovedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var channelID: Bgs_Protocol_Channel_V2_ChannelId {
    get {return _storage._channelID ?? Bgs_Protocol_Channel_V2_ChannelId()}
    set {_uniqueStorage()._channelID = newValue}
  }
  /// Returns true if `channelID` has been explicitly set.
  public var hasChannelID: Bool {return _storage._channelID != nil}
  /// Clears the value of `channelID`. Subsequent reads from it will return its default value.
  public mutating func clearChannelID() {_storage._channelID = nil}

  public var invitationID: UInt64 {
    get {return _storage._invitationID ?? 0}
    set {_uniqueStorage()._invitationID = newValue}
  }
  /// Returns true if `invitationID` has been explicitly set.
  public var hasInvitationID: Bool {return _storage._invitationID != nil}
  /// Clears the value of `invitationID`. Subsequent reads from it will return its default value.
  public mutating func clearInvitationID() {_storage._invitationID = nil}

  public var reason: Bgs_Protocol_InvitationRemovedReason {
    get {return _storage._reason ?? .accepted}
    set {_uniqueStorage()._reason = newValue}
  }
  /// Returns true if `reason` has been explicitly set.
  public var hasReason: Bool {return _storage._reason != nil}
  /// Clears the value of `reason`. Subsequent reads from it will return its default value.
  public mutating func clearReason() {_storage._reason = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._channelID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._channelID)
        case 4: try decoder.decodeSingularFixed64Field(value: &_storage._invitationID)
        case 5: try decoder.decodeSingularEnumField(value: &_storage._reason)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._channelID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._invitationID {
        try visitor.visitSingularFixed64Field(value: v, fieldNumber: 4)
      }
      if let v = _storage._reason {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Channel_V2_SuggestionAddedNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SuggestionAddedNotification"

  public var agentID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._agentID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle {
    get {return _storage._subscriberID ?? Bgs_Protocol_Account_V1_GameAccountHandle()}
    set {_uniqueStorage()._subscriberID = newValue}
  }
  /// Returns true if `subscriberID` has been explicitly set.
  public var hasSubscriberID: Bool {return _storage._subscriberID != nil}
  /// Clears the value of `subscriberID`. Subsequent reads from it will return its default value.
  public mutating func clearSubscriberID() {_storage._subscriberID = nil}

  public var suggestion: Bgs_Protocol_Channel_V2_Suggestion {
    get {return _storage._suggestion ?? Bgs_Protocol_Channel_V2_Suggestion()}
    set {_uniqueStorage()._suggestion = newValue}
  }
  /// Returns true if `suggestion` has been explicitly set.
  public var hasSuggestion: Bool {return _storage._suggestion != nil}
  /// Clears the value of `suggestion`. Subsequent reads from it will return its default value.
  public mutating func clearSuggestion() {_storage._suggestion = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID, !v.isInitialized {return false}
      if let v = _storage._subscriberID, !v.isInitialized {return false}
      if let v = _storage._suggestion, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._subscriberID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._suggestion)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._subscriberID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._suggestion {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.channel.v2"

extension Bgs_Protocol_Channel_V2_CreateChannelRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _options: Bgs_Protocol_Channel_V2_CreateChannelOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_CreateChannelRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_DissolveChannelRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_DissolveChannelRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetChannelRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    5: .standard(proto: "fetch_attributes"),
    6: .standard(proto: "fetch_members"),
    7: .standard(proto: "fetch_invitations"),
    8: .standard(proto: "fetch_roles"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _fetchAttributes: Bool? = nil
    var _fetchMembers: Bool? = nil
    var _fetchInvitations: Bool? = nil
    var _fetchRoles: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _fetchAttributes = source._fetchAttributes
      _fetchMembers = source._fetchMembers
      _fetchInvitations = source._fetchInvitations
      _fetchRoles = source._fetchRoles
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetChannelRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._fetchAttributes != other_storage._fetchAttributes {return false}
        if _storage._fetchMembers != other_storage._fetchMembers {return false}
        if _storage._fetchInvitations != other_storage._fetchInvitations {return false}
        if _storage._fetchRoles != other_storage._fetchRoles {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetChannelResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "channel"),
  ]

  fileprivate class _StorageClass {
    var _channel: Bgs_Protocol_Channel_V2_Channel? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _channel = source._channel
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetChannelResponse) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._channel != other_storage._channel {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetPublicChannelTypesRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .same(proto: "options"),
    3: .same(proto: "continuation"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _options: Bgs_Protocol_Channel_V2_GetPublicChannelTypesOptions? = nil
    var _continuation: UInt64? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _options = source._options
      _continuation = source._continuation
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetPublicChannelTypesRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._options != other_storage._options {return false}
        if _storage._continuation != other_storage._continuation {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetPublicChannelTypesResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "channel"),
    2: .same(proto: "continuation"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetPublicChannelTypesResponse) -> Bool {
    if self.channel != other.channel {return false}
    if self._continuation != other._continuation {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_FindChannelRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _options: Bgs_Protocol_Channel_V2_FindChannelOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_FindChannelRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SubscribeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SubscribeRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SubscribeResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "channel"),
  ]

  fileprivate class _StorageClass {
    var _channel: Bgs_Protocol_Channel_V2_Channel? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _channel = source._channel
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SubscribeResponse) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._channel != other_storage._channel {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_UnsubscribeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_UnsubscribeRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SetAttributeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "attribute"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _attribute: [Bgs_Protocol_V2_Attribute] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _attribute = source._attribute
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SetAttributeRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._attribute != other_storage._attribute {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SetPrivacyLevelRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .standard(proto: "privacy_level"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _privacyLevel: Bgs_Protocol_Channel_V2_PrivacyLevel? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _privacyLevel = source._privacyLevel
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SetPrivacyLevelRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._privacyLevel != other_storage._privacyLevel {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SendMessageRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _options: Bgs_Protocol_Channel_V2_SendMessageOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SendMessageRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SetTypingIndicatorRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "action"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _action: Bgs_Protocol_TypingIndicator? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _action = source._action
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SetTypingIndicatorRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._action != other_storage._action {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_JoinRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "member"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _member: Bgs_Protocol_Channel_V2_CreateMemberOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _member = source._member
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_JoinRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._member != other_storage._member {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_LeaveRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_LeaveRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_KickRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .standard(proto: "target_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _targetID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _targetID = source._targetID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_KickRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._targetID != other_storage._targetID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SetMemberAttributeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "assignment"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _assignment: Bgs_Protocol_Channel_V2_AttributeAssignment? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _assignment = source._assignment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SetMemberAttributeRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._assignment != other_storage._assignment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_AssignRoleRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "assignment"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _assignment: Bgs_Protocol_Channel_V2_RoleAssignment? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _assignment = source._assignment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_AssignRoleRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._assignment != other_storage._assignment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_UnassignRoleRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .same(proto: "assignment"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _assignment: Bgs_Protocol_Channel_V2_RoleAssignment? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _assignment = source._assignment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_UnassignRoleRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._assignment != other_storage._assignment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SendInvitationRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _options: Bgs_Protocol_Channel_V2_SendInvitationOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SendInvitationRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_AcceptInvitationRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .standard(proto: "invitation_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _invitationID: UInt64? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _invitationID = source._invitationID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_AcceptInvitationRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._invitationID != other_storage._invitationID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_DeclineInvitationRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .standard(proto: "invitation_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _invitationID: UInt64? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _invitationID = source._invitationID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_DeclineInvitationRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._invitationID != other_storage._invitationID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_RevokeInvitationRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
    3: .standard(proto: "invitation_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _invitationID: UInt64? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
      _invitationID = source._invitationID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_RevokeInvitationRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._invitationID != other_storage._invitationID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SendSuggestionRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _options: Bgs_Protocol_Channel_V2_SendSuggestionOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SendSuggestionRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetJoinVoiceTokenRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "channel_id"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _channelID = source._channelID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetJoinVoiceTokenRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_GetJoinVoiceTokenResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "channel_uri"),
    2: .same(proto: "credentials"),
  ]

  fileprivate class _StorageClass {
    var _channelUri: String? = nil
    var _credentials: Bgs_Protocol_VoiceCredentials? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _channelUri = source._channelUri
      _credentials = source._credentials
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_GetJoinVoiceTokenResponse) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._channelUri != other_storage._channelUri {return false}
        if _storage._credentials != other_storage._credentials {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_MemberAddedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "member"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _member: Bgs_Protocol_Channel_V2_Member? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _member = source._member
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_MemberAddedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._member != other_storage._member {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_MemberRemovedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .standard(proto: "member_id"),
    5: .same(proto: "reason"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _memberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _reason: UInt32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _memberID = source._memberID
      _reason = source._reason
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_MemberRemovedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._memberID != other_storage._memberID {return false}
        if _storage._reason != other_storage._reason {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_MemberAttributeChangedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "assignment"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _assignment: Bgs_Protocol_Channel_V2_AttributeAssignment? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _assignment = source._assignment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_MemberAttributeChangedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._assignment != other_storage._assignment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_MemberRoleChangedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "assignment"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _assignment: [Bgs_Protocol_Channel_V2_RoleAssignment] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _assignment = source._assignment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_MemberRoleChangedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._assignment != other_storage._assignment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_AttributeChangedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "attribute"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _attribute: [Bgs_Protocol_V2_Attribute] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _attribute = source._attribute
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_AttributeChangedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._attribute != other_storage._attribute {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_PrivacyLevelChangedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .standard(proto: "privacy_level"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _privacyLevel: Bgs_Protocol_Channel_V2_PrivacyLevel? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _privacyLevel = source._privacyLevel
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_PrivacyLevelChangedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._privacyLevel != other_storage._privacyLevel {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SendMessageNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "message"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _message: Bgs_Protocol_Channel_V2_ChannelMessage? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _message = source._message
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SendMessageNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._message != other_storage._message {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_TypingIndicatorNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .standard(proto: "author_id"),
    5: .same(proto: "epoch"),
    6: .same(proto: "action"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _authorID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _epoch: UInt64? = nil
    var _action: Bgs_Protocol_TypingIndicator? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _authorID = source._authorID
      _epoch = source._epoch
      _action = source._action
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_TypingIndicatorNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._authorID != other_storage._authorID {return false}
        if _storage._epoch != other_storage._epoch {return false}
        if _storage._action != other_storage._action {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_InvitationAddedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .same(proto: "invitation"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _invitation: Bgs_Protocol_Channel_V2_ChannelInvitation? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _invitation = source._invitation
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_InvitationAddedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._invitation != other_storage._invitation {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_InvitationRemovedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .standard(proto: "channel_id"),
    4: .standard(proto: "invitation_id"),
    5: .same(proto: "reason"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _channelID: Bgs_Protocol_Channel_V2_ChannelId? = nil
    var _invitationID: UInt64? = nil
    var _reason: Bgs_Protocol_InvitationRemovedReason? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _channelID = source._channelID
      _invitationID = source._invitationID
      _reason = source._reason
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_InvitationRemovedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._channelID != other_storage._channelID {return false}
        if _storage._invitationID != other_storage._invitationID {return false}
        if _storage._reason != other_storage._reason {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Channel_V2_SuggestionAddedNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "agent_id"),
    2: .standard(proto: "subscriber_id"),
    3: .same(proto: "suggestion"),
  ]

  fileprivate class _StorageClass {
    var _agentID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _subscriberID: Bgs_Protocol_Account_V1_GameAccountHandle? = nil
    var _suggestion: Bgs_Protocol_Channel_V2_Suggestion? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _agentID = source._agentID
      _subscriberID = source._subscriberID
      _suggestion = source._suggestion
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Channel_V2_SuggestionAddedNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._subscriberID != other_storage._subscriberID {return false}
        if _storage._suggestion != other_storage._suggestion {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
