// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: aurora/social_network_service.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Bgs_Protocol_Sns_V1_GetFacebookAuthCodeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookAuthCodeRequest"

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Bgs_Protocol_Sns_V1_GetFacebookAuthCodeResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookAuthCodeResponse"

  public var fbCode: String {
    get {return _fbCode ?? String()}
    set {_fbCode = newValue}
  }
  /// Returns true if `fbCode` has been explicitly set.
  public var hasFbCode: Bool {return self._fbCode != nil}
  /// Clears the value of `fbCode`. Subsequent reads from it will return its default value.
  public mutating func clearFbCode() {self._fbCode = nil}

  public var redirectUri: String {
    get {return _redirectUri ?? String()}
    set {_redirectUri = newValue}
  }
  /// Returns true if `redirectUri` has been explicitly set.
  public var hasRedirectUri: Bool {return self._redirectUri != nil}
  /// Clears the value of `redirectUri`. Subsequent reads from it will return its default value.
  public mutating func clearRedirectUri() {self._redirectUri = nil}

  public var fbID: String {
    get {return _fbID ?? String()}
    set {_fbID = newValue}
  }
  /// Returns true if `fbID` has been explicitly set.
  public var hasFbID: Bool {return self._fbID != nil}
  /// Clears the value of `fbID`. Subsequent reads from it will return its default value.
  public mutating func clearFbID() {self._fbID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._fbCode)
      case 2: try decoder.decodeSingularStringField(value: &self._redirectUri)
      case 3: try decoder.decodeSingularStringField(value: &self._fbID)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._fbCode {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._redirectUri {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._fbID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _fbCode: String? = nil
  fileprivate var _redirectUri: String? = nil
  fileprivate var _fbID: String? = nil
}

public struct Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookBnetFriendsRequest"

  public var profilePictureType: Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest.ProfilePictureType {
    get {return _profilePictureType ?? .small}
    set {_profilePictureType = newValue}
  }
  /// Returns true if `profilePictureType` has been explicitly set.
  public var hasProfilePictureType: Bool {return self._profilePictureType != nil}
  /// Clears the value of `profilePictureType`. Subsequent reads from it will return its default value.
  public mutating func clearProfilePictureType() {self._profilePictureType = nil}

  public var token: UInt32 {
    get {return _token ?? 0}
    set {_token = newValue}
  }
  /// Returns true if `token` has been explicitly set.
  public var hasToken: Bool {return self._token != nil}
  /// Clears the value of `token`. Subsequent reads from it will return its default value.
  public mutating func clearToken() {self._token = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ProfilePictureType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case small // = 0
    case normal // = 1
    case large // = 2
    case square // = 3

    public init() {
      self = .small
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .small
      case 1: self = .normal
      case 2: self = .large
      case 3: self = .square
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .small: return 0
      case .normal: return 1
      case .large: return 2
      case .square: return 3
      }
    }

  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 2: try decoder.decodeSingularEnumField(value: &self._profilePictureType)
      case 3: try decoder.decodeSingularUInt32Field(value: &self._token)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._profilePictureType {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 2)
    }
    if let v = self._token {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _profilePictureType: Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest.ProfilePictureType? = nil
  fileprivate var _token: UInt32? = nil
}

public struct Bgs_Protocol_Sns_V1_GetFacebookSettingsResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookSettingsResponse"

  public var appID: String {
    get {return _appID ?? String()}
    set {_appID = newValue}
  }
  /// Returns true if `appID` has been explicitly set.
  public var hasAppID: Bool {return self._appID != nil}
  /// Clears the value of `appID`. Subsequent reads from it will return its default value.
  public mutating func clearAppID() {self._appID = nil}

  public var redirectUri: String {
    get {return _redirectUri ?? String()}
    set {_redirectUri = newValue}
  }
  /// Returns true if `redirectUri` has been explicitly set.
  public var hasRedirectUri: Bool {return self._redirectUri != nil}
  /// Clears the value of `redirectUri`. Subsequent reads from it will return its default value.
  public mutating func clearRedirectUri() {self._redirectUri = nil}

  public var apiVersion: String {
    get {return _apiVersion ?? String()}
    set {_apiVersion = newValue}
  }
  /// Returns true if `apiVersion` has been explicitly set.
  public var hasApiVersion: Bool {return self._apiVersion != nil}
  /// Clears the value of `apiVersion`. Subsequent reads from it will return its default value.
  public mutating func clearApiVersion() {self._apiVersion = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._appID)
      case 2: try decoder.decodeSingularStringField(value: &self._redirectUri)
      case 3: try decoder.decodeSingularStringField(value: &self._apiVersion)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._appID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._redirectUri {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._apiVersion {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _appID: String? = nil
  fileprivate var _redirectUri: String? = nil
  fileprivate var _apiVersion: String? = nil
}

public struct Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookAccountLinkStatusRequest"

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetFacebookAccountLinkStatusResponse"

  public var accountLinked: Bool {
    get {return _accountLinked ?? false}
    set {_accountLinked = newValue}
  }
  /// Returns true if `accountLinked` has been explicitly set.
  public var hasAccountLinked: Bool {return self._accountLinked != nil}
  /// Clears the value of `accountLinked`. Subsequent reads from it will return its default value.
  public mutating func clearAccountLinked() {self._accountLinked = nil}

  public var fbID: String {
    get {return _fbID ?? String()}
    set {_fbID = newValue}
  }
  /// Returns true if `fbID` has been explicitly set.
  public var hasFbID: Bool {return self._fbID != nil}
  /// Clears the value of `fbID`. Subsequent reads from it will return its default value.
  public mutating func clearFbID() {self._fbID = nil}

  public var displayName: String {
    get {return _displayName ?? String()}
    set {_displayName = newValue}
  }
  /// Returns true if `displayName` has been explicitly set.
  public var hasDisplayName: Bool {return self._displayName != nil}
  /// Clears the value of `displayName`. Subsequent reads from it will return its default value.
  public mutating func clearDisplayName() {self._displayName = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self._accountLinked)
      case 2: try decoder.decodeSingularStringField(value: &self._fbID)
      case 3: try decoder.decodeSingularStringField(value: &self._displayName)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountLinked {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
    }
    if let v = self._fbID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._displayName {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _accountLinked: Bool? = nil
  fileprivate var _fbID: String? = nil
  fileprivate var _displayName: String? = nil
}

public struct Bgs_Protocol_Sns_V1_GetGoogleAuthTokenRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetGoogleAuthTokenRequest"

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Bgs_Protocol_Sns_V1_GetGoogleAuthTokenResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetGoogleAuthTokenResponse"

  public var accessToken: String {
    get {return _accessToken ?? String()}
    set {_accessToken = newValue}
  }
  /// Returns true if `accessToken` has been explicitly set.
  public var hasAccessToken: Bool {return self._accessToken != nil}
  /// Clears the value of `accessToken`. Subsequent reads from it will return its default value.
  public mutating func clearAccessToken() {self._accessToken = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._accessToken)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accessToken {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _accessToken: String? = nil
}

public struct Bgs_Protocol_Sns_V1_GetGoogleSettingsResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetGoogleSettingsResponse"

  public var clientID: String {
    get {return _clientID ?? String()}
    set {_clientID = newValue}
  }
  /// Returns true if `clientID` has been explicitly set.
  public var hasClientID: Bool {return self._clientID != nil}
  /// Clears the value of `clientID`. Subsequent reads from it will return its default value.
  public mutating func clearClientID() {self._clientID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._clientID)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._clientID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _clientID: String? = nil
}

public struct Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetGoogleAccountLinkStatusRequest"

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GetGoogleAccountLinkStatusResponse"

  public var accountLinked: Bool {
    get {return _accountLinked ?? false}
    set {_accountLinked = newValue}
  }
  /// Returns true if `accountLinked` has been explicitly set.
  public var hasAccountLinked: Bool {return self._accountLinked != nil}
  /// Clears the value of `accountLinked`. Subsequent reads from it will return its default value.
  public mutating func clearAccountLinked() {self._accountLinked = nil}

  public var googleID: String {
    get {return _googleID ?? String()}
    set {_googleID = newValue}
  }
  /// Returns true if `googleID` has been explicitly set.
  public var hasGoogleID: Bool {return self._googleID != nil}
  /// Clears the value of `googleID`. Subsequent reads from it will return its default value.
  public mutating func clearGoogleID() {self._googleID = nil}

  public var displayName: String {
    get {return _displayName ?? String()}
    set {_displayName = newValue}
  }
  /// Returns true if `displayName` has been explicitly set.
  public var hasDisplayName: Bool {return self._displayName != nil}
  /// Clears the value of `displayName`. Subsequent reads from it will return its default value.
  public mutating func clearDisplayName() {self._displayName = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self._accountLinked)
      case 2: try decoder.decodeSingularStringField(value: &self._googleID)
      case 3: try decoder.decodeSingularStringField(value: &self._displayName)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._accountLinked {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
    }
    if let v = self._googleID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._displayName {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _accountLinked: Bool? = nil
  fileprivate var _googleID: String? = nil
  fileprivate var _displayName: String? = nil
}

public struct Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotification: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FacebookBnetFriendListNotification"

  public var errorCode: UInt32 {
    get {return _storage._errorCode ?? 0}
    set {_uniqueStorage()._errorCode = newValue}
  }
  /// Returns true if `errorCode` has been explicitly set.
  public var hasErrorCode: Bool {return _storage._errorCode != nil}
  /// Clears the value of `errorCode`. Subsequent reads from it will return its default value.
  public mutating func clearErrorCode() {_storage._errorCode = nil}

  public var identity: Bgs_Protocol_Account_V1_Identity {
    get {return _storage._identity ?? Bgs_Protocol_Account_V1_Identity()}
    set {_uniqueStorage()._identity = newValue}
  }
  /// Returns true if `identity` has been explicitly set.
  public var hasIdentity: Bool {return _storage._identity != nil}
  /// Clears the value of `identity`. Subsequent reads from it will return its default value.
  public mutating func clearIdentity() {_storage._identity = nil}

  public var friendList: [Bgs_Protocol_Sns_V1_FacebookBnetFriend] {
    get {return _storage._friendList}
    set {_uniqueStorage()._friendList = newValue}
  }

  public var listEnd: Bool {
    get {return _storage._listEnd ?? false}
    set {_uniqueStorage()._listEnd = newValue}
  }
  /// Returns true if `listEnd` has been explicitly set.
  public var hasListEnd: Bool {return _storage._listEnd != nil}
  /// Clears the value of `listEnd`. Subsequent reads from it will return its default value.
  public mutating func clearListEnd() {_storage._listEnd = nil}

  public var token: UInt32 {
    get {return _storage._token ?? 0}
    set {_uniqueStorage()._token = newValue}
  }
  /// Returns true if `token` has been explicitly set.
  public var hasToken: Bool {return _storage._token != nil}
  /// Clears the value of `token`. Subsequent reads from it will return its default value.
  public mutating func clearToken() {_storage._token = nil}

  public var fbID: String {
    get {return _storage._fbID ?? String()}
    set {_uniqueStorage()._fbID = newValue}
  }
  /// Returns true if `fbID` has been explicitly set.
  public var hasFbID: Bool {return _storage._fbID != nil}
  /// Clears the value of `fbID`. Subsequent reads from it will return its default value.
  public mutating func clearFbID() {_storage._fbID = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._identity, !v.isInitialized {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._friendList) {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularUInt32Field(value: &_storage._errorCode)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._identity)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._friendList)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._listEnd)
        case 5: try decoder.decodeSingularUInt32Field(value: &_storage._token)
        case 6: try decoder.decodeSingularStringField(value: &_storage._fbID)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._errorCode {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._identity {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._friendList.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._friendList, fieldNumber: 3)
      }
      if let v = _storage._listEnd {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 4)
      }
      if let v = _storage._token {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 5)
      }
      if let v = _storage._fbID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Sns_V1_FacebookBnetFriend: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FacebookBnetFriend"

  public var bnetID: Bgs_Protocol_Account_V1_AccountId {
    get {return _storage._bnetID ?? Bgs_Protocol_Account_V1_AccountId()}
    set {_uniqueStorage()._bnetID = newValue}
  }
  /// Returns true if `bnetID` has been explicitly set.
  public var hasBnetID: Bool {return _storage._bnetID != nil}
  /// Clears the value of `bnetID`. Subsequent reads from it will return its default value.
  public mutating func clearBnetID() {_storage._bnetID = nil}

  public var fbID: String {
    get {return _storage._fbID ?? String()}
    set {_uniqueStorage()._fbID = newValue}
  }
  /// Returns true if `fbID` has been explicitly set.
  public var hasFbID: Bool {return _storage._fbID != nil}
  /// Clears the value of `fbID`. Subsequent reads from it will return its default value.
  public mutating func clearFbID() {_storage._fbID = nil}

  public var lastName: String {
    get {return _storage._lastName ?? String()}
    set {_uniqueStorage()._lastName = newValue}
  }
  /// Returns true if `lastName` has been explicitly set.
  public var hasLastName: Bool {return _storage._lastName != nil}
  /// Clears the value of `lastName`. Subsequent reads from it will return its default value.
  public mutating func clearLastName() {_storage._lastName = nil}

  public var firstName: String {
    get {return _storage._firstName ?? String()}
    set {_uniqueStorage()._firstName = newValue}
  }
  /// Returns true if `firstName` has been explicitly set.
  public var hasFirstName: Bool {return _storage._firstName != nil}
  /// Clears the value of `firstName`. Subsequent reads from it will return its default value.
  public mutating func clearFirstName() {_storage._firstName = nil}

  public var profilePicture: String {
    get {return _storage._profilePicture ?? String()}
    set {_uniqueStorage()._profilePicture = newValue}
  }
  /// Returns true if `profilePicture` has been explicitly set.
  public var hasProfilePicture: Bool {return _storage._profilePicture != nil}
  /// Clears the value of `profilePicture`. Subsequent reads from it will return its default value.
  public mutating func clearProfilePicture() {_storage._profilePicture = nil}

  public var displayName: String {
    get {return _storage._displayName ?? String()}
    set {_uniqueStorage()._displayName = newValue}
  }
  /// Returns true if `displayName` has been explicitly set.
  public var hasDisplayName: Bool {return _storage._displayName != nil}
  /// Clears the value of `displayName`. Subsequent reads from it will return its default value.
  public mutating func clearDisplayName() {_storage._displayName = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._bnetID, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._bnetID)
        case 2: try decoder.decodeSingularStringField(value: &_storage._fbID)
        case 3: try decoder.decodeSingularStringField(value: &_storage._lastName)
        case 4: try decoder.decodeSingularStringField(value: &_storage._firstName)
        case 5: try decoder.decodeSingularStringField(value: &_storage._profilePicture)
        case 6: try decoder.decodeSingularStringField(value: &_storage._displayName)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._bnetID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._fbID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._lastName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = _storage._firstName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._profilePicture {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      }
      if let v = _storage._displayName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotificationResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FacebookBnetFriendListNotificationResponse"

  public var `continue`: Bool {
    get {return _continue ?? true}
    set {_continue = newValue}
  }
  /// Returns true if ``continue`` has been explicitly set.
  public var hasContinue: Bool {return self._continue != nil}
  /// Clears the value of ``continue``. Subsequent reads from it will return its default value.
  public mutating func clearContinue() {self._continue = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self._continue)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._continue {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _continue: Bool? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bgs.protocol.sns.v1"

extension Bgs_Protocol_Sns_V1_GetFacebookAuthCodeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookAuthCodeRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetFacebookAuthCodeResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "fb_code"),
    2: .standard(proto: "redirect_uri"),
    3: .standard(proto: "fb_id"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookAuthCodeResponse) -> Bool {
    if self._fbCode != other._fbCode {return false}
    if self._redirectUri != other._redirectUri {return false}
    if self._fbID != other._fbID {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    2: .standard(proto: "profile_picture_type"),
    3: .same(proto: "token"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest) -> Bool {
    if self._profilePictureType != other._profilePictureType {return false}
    if self._token != other._token {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetFacebookBnetFriendsRequest.ProfilePictureType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SMALL"),
    1: .same(proto: "NORMAL"),
    2: .same(proto: "LARGE"),
    3: .same(proto: "SQUARE"),
  ]
}

extension Bgs_Protocol_Sns_V1_GetFacebookSettingsResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "app_id"),
    2: .standard(proto: "redirect_uri"),
    3: .standard(proto: "api_version"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookSettingsResponse) -> Bool {
    if self._appID != other._appID {return false}
    if self._redirectUri != other._redirectUri {return false}
    if self._apiVersion != other._apiVersion {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_linked"),
    2: .standard(proto: "fb_id"),
    3: .standard(proto: "display_name"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetFacebookAccountLinkStatusResponse) -> Bool {
    if self._accountLinked != other._accountLinked {return false}
    if self._fbID != other._fbID {return false}
    if self._displayName != other._displayName {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetGoogleAuthTokenRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetGoogleAuthTokenRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetGoogleAuthTokenResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "access_token"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetGoogleAuthTokenResponse) -> Bool {
    if self._accessToken != other._accessToken {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetGoogleSettingsResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "client_id"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetGoogleSettingsResponse) -> Bool {
    if self._clientID != other._clientID {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusRequest) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "account_linked"),
    2: .standard(proto: "google_id"),
    3: .standard(proto: "display_name"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_GetGoogleAccountLinkStatusResponse) -> Bool {
    if self._accountLinked != other._accountLinked {return false}
    if self._googleID != other._googleID {return false}
    if self._displayName != other._displayName {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotification: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "error_code"),
    2: .same(proto: "identity"),
    3: .standard(proto: "friend_list"),
    4: .standard(proto: "list_end"),
    5: .same(proto: "token"),
    6: .standard(proto: "fb_id"),
  ]

  fileprivate class _StorageClass {
    var _errorCode: UInt32? = nil
    var _identity: Bgs_Protocol_Account_V1_Identity? = nil
    var _friendList: [Bgs_Protocol_Sns_V1_FacebookBnetFriend] = []
    var _listEnd: Bool? = nil
    var _token: UInt32? = nil
    var _fbID: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _errorCode = source._errorCode
      _identity = source._identity
      _friendList = source._friendList
      _listEnd = source._listEnd
      _token = source._token
      _fbID = source._fbID
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotification) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._errorCode != other_storage._errorCode {return false}
        if _storage._identity != other_storage._identity {return false}
        if _storage._friendList != other_storage._friendList {return false}
        if _storage._listEnd != other_storage._listEnd {return false}
        if _storage._token != other_storage._token {return false}
        if _storage._fbID != other_storage._fbID {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_FacebookBnetFriend: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "bnet_id"),
    2: .standard(proto: "fb_id"),
    3: .standard(proto: "last_name"),
    4: .standard(proto: "first_name"),
    5: .standard(proto: "profile_picture"),
    6: .standard(proto: "display_name"),
  ]

  fileprivate class _StorageClass {
    var _bnetID: Bgs_Protocol_Account_V1_AccountId? = nil
    var _fbID: String? = nil
    var _lastName: String? = nil
    var _firstName: String? = nil
    var _profilePicture: String? = nil
    var _displayName: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _bnetID = source._bnetID
      _fbID = source._fbID
      _lastName = source._lastName
      _firstName = source._firstName
      _profilePicture = source._profilePicture
      _displayName = source._displayName
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_FacebookBnetFriend) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._bnetID != other_storage._bnetID {return false}
        if _storage._fbID != other_storage._fbID {return false}
        if _storage._lastName != other_storage._lastName {return false}
        if _storage._firstName != other_storage._firstName {return false}
        if _storage._profilePicture != other_storage._profilePicture {return false}
        if _storage._displayName != other_storage._displayName {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotificationResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "continue"),
  ]

  public func _protobuf_generated_isEqualTo(other: Bgs_Protocol_Sns_V1_FacebookBnetFriendListNotificationResponse) -> Bool {
    if self._continue != other._continue {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
