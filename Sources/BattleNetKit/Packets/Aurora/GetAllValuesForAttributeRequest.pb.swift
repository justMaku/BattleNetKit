// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: GetAllValuesForAttributeRequest.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct GetAllValuesForAttributeRequest: SwiftProtobuf.Message {
  public static let protoMessageName: String = "GetAllValuesForAttributeRequest"

  public var attributeKey: String {
    get {return _storage._attributeKey ?? String()}
    set {_uniqueStorage()._attributeKey = newValue}
  }
  /// Returns true if `attributeKey` has been explicitly set.
  public var hasAttributeKey: Bool {return _storage._attributeKey != nil}
  /// Clears the value of `attributeKey`. Subsequent reads from it will return its default value.
  public mutating func clearAttributeKey() {_storage._attributeKey = nil}

  public var agentID: EntityId {
    get {return _storage._agentID ?? EntityId()}
    set {_uniqueStorage()._agentID = newValue}
  }
  /// Returns true if `agentID` has been explicitly set.
  public var hasAgentID: Bool {return _storage._agentID != nil}
  /// Clears the value of `agentID`. Subsequent reads from it will return its default value.
  public mutating func clearAgentID() {_storage._agentID = nil}

  public var program: UInt32 {
    get {return _storage._program ?? 0}
    set {_uniqueStorage()._program = newValue}
  }
  /// Returns true if `program` has been explicitly set.
  public var hasProgram: Bool {return _storage._program != nil}
  /// Clears the value of `program`. Subsequent reads from it will return its default value.
  public mutating func clearProgram() {_storage._program = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._attributeKey)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._agentID)
        case 5: try decoder.decodeSingularFixed32Field(value: &_storage._program)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._attributeKey {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._agentID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._program {
        try visitor.visitSingularFixed32Field(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension GetAllValuesForAttributeRequest: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "attribute_key"),
    2: .standard(proto: "agent_id"),
    5: .same(proto: "program"),
  ]

  fileprivate class _StorageClass {
    var _attributeKey: String? = nil
    var _agentID: EntityId? = nil
    var _program: UInt32? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _attributeKey = source._attributeKey
      _agentID = source._agentID
      _program = source._program
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: GetAllValuesForAttributeRequest) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._attributeKey != other_storage._attributeKey {return false}
        if _storage._agentID != other_storage._agentID {return false}
        if _storage._program != other_storage._program {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
