// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/protobuf/descriptor.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Google_Protobuf_FileDescriptorSet: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FileDescriptorSet"

  public var file: [Google_Protobuf_FileDescriptorProto] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.file) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.file)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.file.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.file, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

public struct Google_Protobuf_FileDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FileDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var package: String {
    get {return _storage._package ?? String()}
    set {_uniqueStorage()._package = newValue}
  }
  /// Returns true if `package` has been explicitly set.
  public var hasPackage: Bool {return _storage._package != nil}
  /// Clears the value of `package`. Subsequent reads from it will return its default value.
  public mutating func clearPackage() {_storage._package = nil}

  public var dependency: [String] {
    get {return _storage._dependency}
    set {_uniqueStorage()._dependency = newValue}
  }

  public var publicDependency: [Int32] {
    get {return _storage._publicDependency}
    set {_uniqueStorage()._publicDependency = newValue}
  }

  public var weakDependency: [Int32] {
    get {return _storage._weakDependency}
    set {_uniqueStorage()._weakDependency = newValue}
  }

  public var messageType: [Google_Protobuf_DescriptorProto] {
    get {return _storage._messageType}
    set {_uniqueStorage()._messageType = newValue}
  }

  public var enumType: [Google_Protobuf_EnumDescriptorProto] {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  public var service: [Google_Protobuf_ServiceDescriptorProto] {
    get {return _storage._service}
    set {_uniqueStorage()._service = newValue}
  }

  public var `extension`: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._extension}
    set {_uniqueStorage()._extension = newValue}
  }

  public var options: Google_Protobuf_FileOptions {
    get {return _storage._options ?? Google_Protobuf_FileOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var sourceCodeInfo: Google_Protobuf_SourceCodeInfo {
    get {return _storage._sourceCodeInfo ?? Google_Protobuf_SourceCodeInfo()}
    set {_uniqueStorage()._sourceCodeInfo = newValue}
  }
  /// Returns true if `sourceCodeInfo` has been explicitly set.
  public var hasSourceCodeInfo: Bool {return _storage._sourceCodeInfo != nil}
  /// Clears the value of `sourceCodeInfo`. Subsequent reads from it will return its default value.
  public mutating func clearSourceCodeInfo() {_storage._sourceCodeInfo = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._messageType) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._enumType) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._service) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._extension) {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularStringField(value: &_storage._package)
        case 3: try decoder.decodeRepeatedStringField(value: &_storage._dependency)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._messageType)
        case 5: try decoder.decodeRepeatedMessageField(value: &_storage._enumType)
        case 6: try decoder.decodeRepeatedMessageField(value: &_storage._service)
        case 7: try decoder.decodeRepeatedMessageField(value: &_storage._extension)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._options)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._sourceCodeInfo)
        case 10: try decoder.decodeRepeatedInt32Field(value: &_storage._publicDependency)
        case 11: try decoder.decodeRepeatedInt32Field(value: &_storage._weakDependency)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._package {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if !_storage._dependency.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._dependency, fieldNumber: 3)
      }
      if !_storage._messageType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._messageType, fieldNumber: 4)
      }
      if !_storage._enumType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._enumType, fieldNumber: 5)
      }
      if !_storage._service.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._service, fieldNumber: 6)
      }
      if !_storage._extension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._extension, fieldNumber: 7)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._sourceCodeInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if !_storage._publicDependency.isEmpty {
        try visitor.visitRepeatedInt32Field(value: _storage._publicDependency, fieldNumber: 10)
      }
      if !_storage._weakDependency.isEmpty {
        try visitor.visitRepeatedInt32Field(value: _storage._weakDependency, fieldNumber: 11)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_DescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".DescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var field: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._field}
    set {_uniqueStorage()._field = newValue}
  }

  public var `extension`: [Google_Protobuf_FieldDescriptorProto] {
    get {return _storage._extension}
    set {_uniqueStorage()._extension = newValue}
  }

  public var nestedType: [Google_Protobuf_DescriptorProto] {
    get {return _storage._nestedType}
    set {_uniqueStorage()._nestedType = newValue}
  }

  public var enumType: [Google_Protobuf_EnumDescriptorProto] {
    get {return _storage._enumType}
    set {_uniqueStorage()._enumType = newValue}
  }

  public var extensionRange: [Google_Protobuf_DescriptorProto.ExtensionRange] {
    get {return _storage._extensionRange}
    set {_uniqueStorage()._extensionRange = newValue}
  }

  public var oneofDecl: [Google_Protobuf_OneofDescriptorProto] {
    get {return _storage._oneofDecl}
    set {_uniqueStorage()._oneofDecl = newValue}
  }

  public var options: Google_Protobuf_MessageOptions {
    get {return _storage._options ?? Google_Protobuf_MessageOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct ExtensionRange: SwiftProtobuf.Message {
    public static let protoMessageName: String = Google_Protobuf_DescriptorProto.protoMessageName + ".ExtensionRange"

    public var start: Int32 {
      get {return _start ?? 0}
      set {_start = newValue}
    }
    /// Returns true if `start` has been explicitly set.
    public var hasStart: Bool {return self._start != nil}
    /// Clears the value of `start`. Subsequent reads from it will return its default value.
    public mutating func clearStart() {self._start = nil}

    public var end: Int32 {
      get {return _end ?? 0}
      set {_end = newValue}
    }
    /// Returns true if `end` has been explicitly set.
    public var hasEnd: Bool {return self._end != nil}
    /// Clears the value of `end`. Subsequent reads from it will return its default value.
    public mutating func clearEnd() {self._end = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    /// Used by the decoding initializers in the SwiftProtobuf library, not generally
    /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
    /// initializers are defined in the SwiftProtobuf library. See the Message and
    /// Message+*Additions` files.
    public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &self._start)
        case 2: try decoder.decodeSingularInt32Field(value: &self._end)
        default: break
        }
      }
    }

    /// Used by the encoding methods of the SwiftProtobuf library, not generally
    /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
    /// other serializer methods are defined in the SwiftProtobuf library. See the
    /// `Message` and `Message+*Additions` files.
    public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = self._start {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = self._end {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _start: Int32? = nil
    fileprivate var _end: Int32? = nil
  }

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._field) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._extension) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._nestedType) {return false}
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._enumType) {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._field)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._nestedType)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._enumType)
        case 5: try decoder.decodeRepeatedMessageField(value: &_storage._extensionRange)
        case 6: try decoder.decodeRepeatedMessageField(value: &_storage._extension)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._options)
        case 8: try decoder.decodeRepeatedMessageField(value: &_storage._oneofDecl)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if !_storage._field.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._field, fieldNumber: 2)
      }
      if !_storage._nestedType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._nestedType, fieldNumber: 3)
      }
      if !_storage._enumType.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._enumType, fieldNumber: 4)
      }
      if !_storage._extensionRange.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._extensionRange, fieldNumber: 5)
      }
      if !_storage._extension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._extension, fieldNumber: 6)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if !_storage._oneofDecl.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._oneofDecl, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_FieldDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".FieldDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var number: Int32 {
    get {return _storage._number ?? 0}
    set {_uniqueStorage()._number = newValue}
  }
  /// Returns true if `number` has been explicitly set.
  public var hasNumber: Bool {return _storage._number != nil}
  /// Clears the value of `number`. Subsequent reads from it will return its default value.
  public mutating func clearNumber() {_storage._number = nil}

  public var label: Google_Protobuf_FieldDescriptorProto.Label {
    get {return _storage._label ?? .optional}
    set {_uniqueStorage()._label = newValue}
  }
  /// Returns true if `label` has been explicitly set.
  public var hasLabel: Bool {return _storage._label != nil}
  /// Clears the value of `label`. Subsequent reads from it will return its default value.
  public mutating func clearLabel() {_storage._label = nil}

  public var type: Google_Protobuf_FieldDescriptorProto.TypeEnum {
    get {return _storage._type ?? .double}
    set {_uniqueStorage()._type = newValue}
  }
  /// Returns true if `type` has been explicitly set.
  public var hasType: Bool {return _storage._type != nil}
  /// Clears the value of `type`. Subsequent reads from it will return its default value.
  public mutating func clearType() {_storage._type = nil}

  public var typeName: String {
    get {return _storage._typeName ?? String()}
    set {_uniqueStorage()._typeName = newValue}
  }
  /// Returns true if `typeName` has been explicitly set.
  public var hasTypeName: Bool {return _storage._typeName != nil}
  /// Clears the value of `typeName`. Subsequent reads from it will return its default value.
  public mutating func clearTypeName() {_storage._typeName = nil}

  public var extendee: String {
    get {return _storage._extendee ?? String()}
    set {_uniqueStorage()._extendee = newValue}
  }
  /// Returns true if `extendee` has been explicitly set.
  public var hasExtendee: Bool {return _storage._extendee != nil}
  /// Clears the value of `extendee`. Subsequent reads from it will return its default value.
  public mutating func clearExtendee() {_storage._extendee = nil}

  public var defaultValue: String {
    get {return _storage._defaultValue ?? String()}
    set {_uniqueStorage()._defaultValue = newValue}
  }
  /// Returns true if `defaultValue` has been explicitly set.
  public var hasDefaultValue: Bool {return _storage._defaultValue != nil}
  /// Clears the value of `defaultValue`. Subsequent reads from it will return its default value.
  public mutating func clearDefaultValue() {_storage._defaultValue = nil}

  public var oneofIndex: Int32 {
    get {return _storage._oneofIndex ?? 0}
    set {_uniqueStorage()._oneofIndex = newValue}
  }
  /// Returns true if `oneofIndex` has been explicitly set.
  public var hasOneofIndex: Bool {return _storage._oneofIndex != nil}
  /// Clears the value of `oneofIndex`. Subsequent reads from it will return its default value.
  public mutating func clearOneofIndex() {_storage._oneofIndex = nil}

  public var options: Google_Protobuf_FieldOptions {
    get {return _storage._options ?? Google_Protobuf_FieldOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum TypeEnum: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case double // = 1
    case float // = 2
    case int64 // = 3
    case uint64 // = 4
    case int32 // = 5
    case fixed64 // = 6
    case fixed32 // = 7
    case bool // = 8
    case string // = 9
    case group // = 10
    case message // = 11
    case bytes // = 12
    case uint32 // = 13
    case `enum` // = 14
    case sfixed32 // = 15
    case sfixed64 // = 16
    case sint32 // = 17
    case sint64 // = 18

    public init() {
      self = .double
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .double
      case 2: self = .float
      case 3: self = .int64
      case 4: self = .uint64
      case 5: self = .int32
      case 6: self = .fixed64
      case 7: self = .fixed32
      case 8: self = .bool
      case 9: self = .string
      case 10: self = .group
      case 11: self = .message
      case 12: self = .bytes
      case 13: self = .uint32
      case 14: self = .enum
      case 15: self = .sfixed32
      case 16: self = .sfixed64
      case 17: self = .sint32
      case 18: self = .sint64
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .double: return 1
      case .float: return 2
      case .int64: return 3
      case .uint64: return 4
      case .int32: return 5
      case .fixed64: return 6
      case .fixed32: return 7
      case .bool: return 8
      case .string: return 9
      case .group: return 10
      case .message: return 11
      case .bytes: return 12
      case .uint32: return 13
      case .enum: return 14
      case .sfixed32: return 15
      case .sfixed64: return 16
      case .sint32: return 17
      case .sint64: return 18
      }
    }

  }

  public enum Label: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case `optional` // = 1
    case `required` // = 2
    case repeated // = 3

    public init() {
      self = .optional
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .optional
      case 2: self = .required
      case 3: self = .repeated
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .optional: return 1
      case .required: return 2
      case .repeated: return 3
      }
    }

  }

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularStringField(value: &_storage._extendee)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._number)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._label)
        case 5: try decoder.decodeSingularEnumField(value: &_storage._type)
        case 6: try decoder.decodeSingularStringField(value: &_storage._typeName)
        case 7: try decoder.decodeSingularStringField(value: &_storage._defaultValue)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._options)
        case 9: try decoder.decodeSingularInt32Field(value: &_storage._oneofIndex)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._extendee {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._number {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = _storage._label {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 4)
      }
      if let v = _storage._type {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 5)
      }
      if let v = _storage._typeName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      }
      if let v = _storage._defaultValue {
        try visitor.visitSingularStringField(value: v, fieldNumber: 7)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._oneofIndex {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 9)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_OneofDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".OneofDescriptorProto"

  public var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {self._name = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._name)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _name: String? = nil
}

public struct Google_Protobuf_EnumDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".EnumDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var value: [Google_Protobuf_EnumValueDescriptorProto] {
    get {return _storage._value}
    set {_uniqueStorage()._value = newValue}
  }

  public var options: Google_Protobuf_EnumOptions {
    get {return _storage._options ?? Google_Protobuf_EnumOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._value) {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._value)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if !_storage._value.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._value, fieldNumber: 2)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_EnumValueDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".EnumValueDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var number: Int32 {
    get {return _storage._number ?? 0}
    set {_uniqueStorage()._number = newValue}
  }
  /// Returns true if `number` has been explicitly set.
  public var hasNumber: Bool {return _storage._number != nil}
  /// Clears the value of `number`. Subsequent reads from it will return its default value.
  public mutating func clearNumber() {_storage._number = nil}

  public var options: Google_Protobuf_EnumValueOptions {
    get {return _storage._options ?? Google_Protobuf_EnumValueOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularInt32Field(value: &_storage._number)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._number {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_ServiceDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ServiceDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var method: [Google_Protobuf_MethodDescriptorProto] {
    get {return _storage._method}
    set {_uniqueStorage()._method = newValue}
  }

  public var options: Google_Protobuf_ServiceOptions {
    get {return _storage._options ?? Google_Protobuf_ServiceOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !SwiftProtobuf.Internal.areAllInitialized(_storage._method) {return false}
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._method)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if !_storage._method.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._method, fieldNumber: 2)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_MethodDescriptorProto: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".MethodDescriptorProto"

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  public var inputType: String {
    get {return _storage._inputType ?? String()}
    set {_uniqueStorage()._inputType = newValue}
  }
  /// Returns true if `inputType` has been explicitly set.
  public var hasInputType: Bool {return _storage._inputType != nil}
  /// Clears the value of `inputType`. Subsequent reads from it will return its default value.
  public mutating func clearInputType() {_storage._inputType = nil}

  public var outputType: String {
    get {return _storage._outputType ?? String()}
    set {_uniqueStorage()._outputType = newValue}
  }
  /// Returns true if `outputType` has been explicitly set.
  public var hasOutputType: Bool {return _storage._outputType != nil}
  /// Clears the value of `outputType`. Subsequent reads from it will return its default value.
  public mutating func clearOutputType() {_storage._outputType = nil}

  public var options: Google_Protobuf_MethodOptions {
    get {return _storage._options ?? Google_Protobuf_MethodOptions()}
    set {_uniqueStorage()._options = newValue}
  }
  /// Returns true if `options` has been explicitly set.
  public var hasOptions: Bool {return _storage._options != nil}
  /// Clears the value of `options`. Subsequent reads from it will return its default value.
  public mutating func clearOptions() {_storage._options = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._options, !v.isInitialized {return false}
      return true
    }
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularStringField(value: &_storage._inputType)
        case 3: try decoder.decodeSingularStringField(value: &_storage._outputType)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._options)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._inputType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._outputType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = _storage._options {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Google_Protobuf_FileOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".FileOptions"

  public var javaPackage: String {
    get {return _javaPackage ?? String()}
    set {_javaPackage = newValue}
  }
  /// Returns true if `javaPackage` has been explicitly set.
  public var hasJavaPackage: Bool {return self._javaPackage != nil}
  /// Clears the value of `javaPackage`. Subsequent reads from it will return its default value.
  public mutating func clearJavaPackage() {self._javaPackage = nil}

  public var javaOuterClassname: String {
    get {return _javaOuterClassname ?? String()}
    set {_javaOuterClassname = newValue}
  }
  /// Returns true if `javaOuterClassname` has been explicitly set.
  public var hasJavaOuterClassname: Bool {return self._javaOuterClassname != nil}
  /// Clears the value of `javaOuterClassname`. Subsequent reads from it will return its default value.
  public mutating func clearJavaOuterClassname() {self._javaOuterClassname = nil}

  public var javaMultipleFiles: Bool {
    get {return _javaMultipleFiles ?? false}
    set {_javaMultipleFiles = newValue}
  }
  /// Returns true if `javaMultipleFiles` has been explicitly set.
  public var hasJavaMultipleFiles: Bool {return self._javaMultipleFiles != nil}
  /// Clears the value of `javaMultipleFiles`. Subsequent reads from it will return its default value.
  public mutating func clearJavaMultipleFiles() {self._javaMultipleFiles = nil}

  public var javaGenerateEqualsAndHash: Bool {
    get {return _javaGenerateEqualsAndHash ?? false}
    set {_javaGenerateEqualsAndHash = newValue}
  }
  /// Returns true if `javaGenerateEqualsAndHash` has been explicitly set.
  public var hasJavaGenerateEqualsAndHash: Bool {return self._javaGenerateEqualsAndHash != nil}
  /// Clears the value of `javaGenerateEqualsAndHash`. Subsequent reads from it will return its default value.
  public mutating func clearJavaGenerateEqualsAndHash() {self._javaGenerateEqualsAndHash = nil}

  public var javaStringCheckUtf8: Bool {
    get {return _javaStringCheckUtf8 ?? false}
    set {_javaStringCheckUtf8 = newValue}
  }
  /// Returns true if `javaStringCheckUtf8` has been explicitly set.
  public var hasJavaStringCheckUtf8: Bool {return self._javaStringCheckUtf8 != nil}
  /// Clears the value of `javaStringCheckUtf8`. Subsequent reads from it will return its default value.
  public mutating func clearJavaStringCheckUtf8() {self._javaStringCheckUtf8 = nil}

  public var optimizeFor: Google_Protobuf_FileOptions.OptimizeMode {
    get {return _optimizeFor ?? .speed}
    set {_optimizeFor = newValue}
  }
  /// Returns true if `optimizeFor` has been explicitly set.
  public var hasOptimizeFor: Bool {return self._optimizeFor != nil}
  /// Clears the value of `optimizeFor`. Subsequent reads from it will return its default value.
  public mutating func clearOptimizeFor() {self._optimizeFor = nil}

  public var goPackage: String {
    get {return _goPackage ?? String()}
    set {_goPackage = newValue}
  }
  /// Returns true if `goPackage` has been explicitly set.
  public var hasGoPackage: Bool {return self._goPackage != nil}
  /// Clears the value of `goPackage`. Subsequent reads from it will return its default value.
  public mutating func clearGoPackage() {self._goPackage = nil}

  public var ccGenericServices: Bool {
    get {return _ccGenericServices ?? false}
    set {_ccGenericServices = newValue}
  }
  /// Returns true if `ccGenericServices` has been explicitly set.
  public var hasCcGenericServices: Bool {return self._ccGenericServices != nil}
  /// Clears the value of `ccGenericServices`. Subsequent reads from it will return its default value.
  public mutating func clearCcGenericServices() {self._ccGenericServices = nil}

  public var javaGenericServices: Bool {
    get {return _javaGenericServices ?? false}
    set {_javaGenericServices = newValue}
  }
  /// Returns true if `javaGenericServices` has been explicitly set.
  public var hasJavaGenericServices: Bool {return self._javaGenericServices != nil}
  /// Clears the value of `javaGenericServices`. Subsequent reads from it will return its default value.
  public mutating func clearJavaGenericServices() {self._javaGenericServices = nil}

  public var pyGenericServices: Bool {
    get {return _pyGenericServices ?? false}
    set {_pyGenericServices = newValue}
  }
  /// Returns true if `pyGenericServices` has been explicitly set.
  public var hasPyGenericServices: Bool {return self._pyGenericServices != nil}
  /// Clears the value of `pyGenericServices`. Subsequent reads from it will return its default value.
  public mutating func clearPyGenericServices() {self._pyGenericServices = nil}

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OptimizeMode: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case speed // = 1
    case codeSize // = 2
    case liteRuntime // = 3

    public init() {
      self = .speed
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .speed
      case 2: self = .codeSize
      case 3: self = .liteRuntime
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .speed: return 1
      case .codeSize: return 2
      case .liteRuntime: return 3
      }
    }

  }

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._javaPackage)
      case 8: try decoder.decodeSingularStringField(value: &self._javaOuterClassname)
      case 9: try decoder.decodeSingularEnumField(value: &self._optimizeFor)
      case 10: try decoder.decodeSingularBoolField(value: &self._javaMultipleFiles)
      case 11: try decoder.decodeSingularStringField(value: &self._goPackage)
      case 16: try decoder.decodeSingularBoolField(value: &self._ccGenericServices)
      case 17: try decoder.decodeSingularBoolField(value: &self._javaGenericServices)
      case 18: try decoder.decodeSingularBoolField(value: &self._pyGenericServices)
      case 20: try decoder.decodeSingularBoolField(value: &self._javaGenerateEqualsAndHash)
      case 23: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 27: try decoder.decodeSingularBoolField(value: &self._javaStringCheckUtf8)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_FileOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._javaPackage {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._javaOuterClassname {
      try visitor.visitSingularStringField(value: v, fieldNumber: 8)
    }
    if let v = self._optimizeFor {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 9)
    }
    if let v = self._javaMultipleFiles {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
    }
    if let v = self._goPackage {
      try visitor.visitSingularStringField(value: v, fieldNumber: 11)
    }
    if let v = self._ccGenericServices {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 16)
    }
    if let v = self._javaGenericServices {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 17)
    }
    if let v = self._pyGenericServices {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
    }
    if let v = self._javaGenerateEqualsAndHash {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 20)
    }
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 23)
    }
    if let v = self._javaStringCheckUtf8 {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 27)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _javaPackage: String? = nil
  fileprivate var _javaOuterClassname: String? = nil
  fileprivate var _javaMultipleFiles: Bool? = nil
  fileprivate var _javaGenerateEqualsAndHash: Bool? = nil
  fileprivate var _javaStringCheckUtf8: Bool? = nil
  fileprivate var _optimizeFor: Google_Protobuf_FileOptions.OptimizeMode? = nil
  fileprivate var _goPackage: String? = nil
  fileprivate var _ccGenericServices: Bool? = nil
  fileprivate var _javaGenericServices: Bool? = nil
  fileprivate var _pyGenericServices: Bool? = nil
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_MessageOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".MessageOptions"

  public var messageSetWireFormat: Bool {
    get {return _messageSetWireFormat ?? false}
    set {_messageSetWireFormat = newValue}
  }
  /// Returns true if `messageSetWireFormat` has been explicitly set.
  public var hasMessageSetWireFormat: Bool {return self._messageSetWireFormat != nil}
  /// Clears the value of `messageSetWireFormat`. Subsequent reads from it will return its default value.
  public mutating func clearMessageSetWireFormat() {self._messageSetWireFormat = nil}

  public var noStandardDescriptorAccessor: Bool {
    get {return _noStandardDescriptorAccessor ?? false}
    set {_noStandardDescriptorAccessor = newValue}
  }
  /// Returns true if `noStandardDescriptorAccessor` has been explicitly set.
  public var hasNoStandardDescriptorAccessor: Bool {return self._noStandardDescriptorAccessor != nil}
  /// Clears the value of `noStandardDescriptorAccessor`. Subsequent reads from it will return its default value.
  public mutating func clearNoStandardDescriptorAccessor() {self._noStandardDescriptorAccessor = nil}

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self._messageSetWireFormat)
      case 2: try decoder.decodeSingularBoolField(value: &self._noStandardDescriptorAccessor)
      case 3: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_MessageOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._messageSetWireFormat {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
    }
    if let v = self._noStandardDescriptorAccessor {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _messageSetWireFormat: Bool? = nil
  fileprivate var _noStandardDescriptorAccessor: Bool? = nil
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_FieldOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".FieldOptions"

  public var ctype: Google_Protobuf_FieldOptions.CType {
    get {return _ctype ?? .string}
    set {_ctype = newValue}
  }
  /// Returns true if `ctype` has been explicitly set.
  public var hasCtype: Bool {return self._ctype != nil}
  /// Clears the value of `ctype`. Subsequent reads from it will return its default value.
  public mutating func clearCtype() {self._ctype = nil}

  public var packed: Bool {
    get {return _packed ?? false}
    set {_packed = newValue}
  }
  /// Returns true if `packed` has been explicitly set.
  public var hasPacked: Bool {return self._packed != nil}
  /// Clears the value of `packed`. Subsequent reads from it will return its default value.
  public mutating func clearPacked() {self._packed = nil}

  public var lazy: Bool {
    get {return _lazy ?? false}
    set {_lazy = newValue}
  }
  /// Returns true if `lazy` has been explicitly set.
  public var hasLazy: Bool {return self._lazy != nil}
  /// Clears the value of `lazy`. Subsequent reads from it will return its default value.
  public mutating func clearLazy() {self._lazy = nil}

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var experimentalMapKey: String {
    get {return _experimentalMapKey ?? String()}
    set {_experimentalMapKey = newValue}
  }
  /// Returns true if `experimentalMapKey` has been explicitly set.
  public var hasExperimentalMapKey: Bool {return self._experimentalMapKey != nil}
  /// Clears the value of `experimentalMapKey`. Subsequent reads from it will return its default value.
  public mutating func clearExperimentalMapKey() {self._experimentalMapKey = nil}

  public var weak: Bool {
    get {return _weak ?? false}
    set {_weak = newValue}
  }
  /// Returns true if `weak` has been explicitly set.
  public var hasWeak: Bool {return self._weak != nil}
  /// Clears the value of `weak`. Subsequent reads from it will return its default value.
  public mutating func clearWeak() {self._weak = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum CType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case string // = 0
    case cord // = 1
    case stringPiece // = 2

    public init() {
      self = .string
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .string
      case 1: self = .cord
      case 2: self = .stringPiece
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .string: return 0
      case .cord: return 1
      case .stringPiece: return 2
      }
    }

  }

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self._ctype)
      case 2: try decoder.decodeSingularBoolField(value: &self._packed)
      case 3: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 5: try decoder.decodeSingularBoolField(value: &self._lazy)
      case 9: try decoder.decodeSingularStringField(value: &self._experimentalMapKey)
      case 10: try decoder.decodeSingularBoolField(value: &self._weak)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_FieldOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._ctype {
      try visitor.visitSingularEnumField(value: v, fieldNumber: 1)
    }
    if let v = self._packed {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if let v = self._lazy {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 5)
    }
    if let v = self._experimentalMapKey {
      try visitor.visitSingularStringField(value: v, fieldNumber: 9)
    }
    if let v = self._weak {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _ctype: Google_Protobuf_FieldOptions.CType? = nil
  fileprivate var _packed: Bool? = nil
  fileprivate var _lazy: Bool? = nil
  fileprivate var _deprecated: Bool? = nil
  fileprivate var _experimentalMapKey: String? = nil
  fileprivate var _weak: Bool? = nil
}

public struct Google_Protobuf_EnumOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".EnumOptions"

  public var allowAlias: Bool {
    get {return _allowAlias ?? false}
    set {_allowAlias = newValue}
  }
  /// Returns true if `allowAlias` has been explicitly set.
  public var hasAllowAlias: Bool {return self._allowAlias != nil}
  /// Clears the value of `allowAlias`. Subsequent reads from it will return its default value.
  public mutating func clearAllowAlias() {self._allowAlias = nil}

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 2: try decoder.decodeSingularBoolField(value: &self._allowAlias)
      case 3: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_EnumOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._allowAlias {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
    }
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _allowAlias: Bool? = nil
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_EnumValueOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".EnumValueOptions"

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_EnumValueOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_ServiceOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".ServiceOptions"

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 33: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_ServiceOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_MethodOptions: SwiftProtobuf.Message, SwiftProtobuf.ExtensibleMessage {
  public static let protoMessageName: String = _protobuf_package + ".MethodOptions"

  public var deprecated: Bool {
    get {return _deprecated ?? false}
    set {_deprecated = newValue}
  }
  /// Returns true if `deprecated` has been explicitly set.
  public var hasDeprecated: Bool {return self._deprecated != nil}
  /// Clears the value of `deprecated`. Subsequent reads from it will return its default value.
  public mutating func clearDeprecated() {self._deprecated = nil}

  public var uninterpretedOption: [Google_Protobuf_UninterpretedOption] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public var isInitialized: Bool {
    if !_protobuf_extensionFieldValues.isInitialized {return false}
    if !SwiftProtobuf.Internal.areAllInitialized(self.uninterpretedOption) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 33: try decoder.decodeSingularBoolField(value: &self._deprecated)
      case 999: try decoder.decodeRepeatedMessageField(value: &self.uninterpretedOption)
      case 1000..<536870912:
        try decoder.decodeExtensionField(values: &_protobuf_extensionFieldValues, messageType: Google_Protobuf_MethodOptions.self, fieldNumber: fieldNumber)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._deprecated {
      try visitor.visitSingularBoolField(value: v, fieldNumber: 33)
    }
    if !self.uninterpretedOption.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.uninterpretedOption, fieldNumber: 999)
    }
    try visitor.visitExtensionFields(fields: _protobuf_extensionFieldValues, start: 1000, end: 536870912)
    try unknownFields.traverse(visitor: &visitor)
  }

  public var _protobuf_extensionFieldValues = SwiftProtobuf.ExtensionFieldValueSet()
  fileprivate var _deprecated: Bool? = nil
}

public struct Google_Protobuf_UninterpretedOption: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".UninterpretedOption"

  public var name: [Google_Protobuf_UninterpretedOption.NamePart] = []

  public var identifierValue: String {
    get {return _identifierValue ?? String()}
    set {_identifierValue = newValue}
  }
  /// Returns true if `identifierValue` has been explicitly set.
  public var hasIdentifierValue: Bool {return self._identifierValue != nil}
  /// Clears the value of `identifierValue`. Subsequent reads from it will return its default value.
  public mutating func clearIdentifierValue() {self._identifierValue = nil}

  public var positiveIntValue: UInt64 {
    get {return _positiveIntValue ?? 0}
    set {_positiveIntValue = newValue}
  }
  /// Returns true if `positiveIntValue` has been explicitly set.
  public var hasPositiveIntValue: Bool {return self._positiveIntValue != nil}
  /// Clears the value of `positiveIntValue`. Subsequent reads from it will return its default value.
  public mutating func clearPositiveIntValue() {self._positiveIntValue = nil}

  public var negativeIntValue: Int64 {
    get {return _negativeIntValue ?? 0}
    set {_negativeIntValue = newValue}
  }
  /// Returns true if `negativeIntValue` has been explicitly set.
  public var hasNegativeIntValue: Bool {return self._negativeIntValue != nil}
  /// Clears the value of `negativeIntValue`. Subsequent reads from it will return its default value.
  public mutating func clearNegativeIntValue() {self._negativeIntValue = nil}

  public var doubleValue: Double {
    get {return _doubleValue ?? 0}
    set {_doubleValue = newValue}
  }
  /// Returns true if `doubleValue` has been explicitly set.
  public var hasDoubleValue: Bool {return self._doubleValue != nil}
  /// Clears the value of `doubleValue`. Subsequent reads from it will return its default value.
  public mutating func clearDoubleValue() {self._doubleValue = nil}

  public var stringValue: Data {
    get {return _stringValue ?? SwiftProtobuf.Internal.emptyData}
    set {_stringValue = newValue}
  }
  /// Returns true if `stringValue` has been explicitly set.
  public var hasStringValue: Bool {return self._stringValue != nil}
  /// Clears the value of `stringValue`. Subsequent reads from it will return its default value.
  public mutating func clearStringValue() {self._stringValue = nil}

  public var aggregateValue: String {
    get {return _aggregateValue ?? String()}
    set {_aggregateValue = newValue}
  }
  /// Returns true if `aggregateValue` has been explicitly set.
  public var hasAggregateValue: Bool {return self._aggregateValue != nil}
  /// Clears the value of `aggregateValue`. Subsequent reads from it will return its default value.
  public mutating func clearAggregateValue() {self._aggregateValue = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct NamePart: SwiftProtobuf.Message {
    public static let protoMessageName: String = Google_Protobuf_UninterpretedOption.protoMessageName + ".NamePart"

    public var namePart: String {
      get {return _namePart ?? String()}
      set {_namePart = newValue}
    }
    /// Returns true if `namePart` has been explicitly set.
    public var hasNamePart: Bool {return self._namePart != nil}
    /// Clears the value of `namePart`. Subsequent reads from it will return its default value.
    public mutating func clearNamePart() {self._namePart = nil}

    public var isExtension: Bool {
      get {return _isExtension ?? false}
      set {_isExtension = newValue}
    }
    /// Returns true if `isExtension` has been explicitly set.
    public var hasIsExtension: Bool {return self._isExtension != nil}
    /// Clears the value of `isExtension`. Subsequent reads from it will return its default value.
    public mutating func clearIsExtension() {self._isExtension = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    public var isInitialized: Bool {
      if self._namePart == nil {return false}
      if self._isExtension == nil {return false}
      return true
    }

    /// Used by the decoding initializers in the SwiftProtobuf library, not generally
    /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
    /// initializers are defined in the SwiftProtobuf library. See the Message and
    /// Message+*Additions` files.
    public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &self._namePart)
        case 2: try decoder.decodeSingularBoolField(value: &self._isExtension)
        default: break
        }
      }
    }

    /// Used by the encoding methods of the SwiftProtobuf library, not generally
    /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
    /// other serializer methods are defined in the SwiftProtobuf library. See the
    /// `Message` and `Message+*Additions` files.
    public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if let v = self._namePart {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = self._isExtension {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _namePart: String? = nil
    fileprivate var _isExtension: Bool? = nil
  }

  public init() {}

  public var isInitialized: Bool {
    if !SwiftProtobuf.Internal.areAllInitialized(self.name) {return false}
    return true
  }

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 2: try decoder.decodeRepeatedMessageField(value: &self.name)
      case 3: try decoder.decodeSingularStringField(value: &self._identifierValue)
      case 4: try decoder.decodeSingularUInt64Field(value: &self._positiveIntValue)
      case 5: try decoder.decodeSingularInt64Field(value: &self._negativeIntValue)
      case 6: try decoder.decodeSingularDoubleField(value: &self._doubleValue)
      case 7: try decoder.decodeSingularBytesField(value: &self._stringValue)
      case 8: try decoder.decodeSingularStringField(value: &self._aggregateValue)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.name, fieldNumber: 2)
    }
    if let v = self._identifierValue {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    if let v = self._positiveIntValue {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 4)
    }
    if let v = self._negativeIntValue {
      try visitor.visitSingularInt64Field(value: v, fieldNumber: 5)
    }
    if let v = self._doubleValue {
      try visitor.visitSingularDoubleField(value: v, fieldNumber: 6)
    }
    if let v = self._stringValue {
      try visitor.visitSingularBytesField(value: v, fieldNumber: 7)
    }
    if let v = self._aggregateValue {
      try visitor.visitSingularStringField(value: v, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _identifierValue: String? = nil
  fileprivate var _positiveIntValue: UInt64? = nil
  fileprivate var _negativeIntValue: Int64? = nil
  fileprivate var _doubleValue: Double? = nil
  fileprivate var _stringValue: Data? = nil
  fileprivate var _aggregateValue: String? = nil
}

public struct Google_Protobuf_SourceCodeInfo: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SourceCodeInfo"

  public var location: [Google_Protobuf_SourceCodeInfo.Location] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct Location: SwiftProtobuf.Message {
    public static let protoMessageName: String = Google_Protobuf_SourceCodeInfo.protoMessageName + ".Location"

    public var path: [Int32] = []

    public var span: [Int32] = []

    public var leadingComments: String {
      get {return _leadingComments ?? String()}
      set {_leadingComments = newValue}
    }
    /// Returns true if `leadingComments` has been explicitly set.
    public var hasLeadingComments: Bool {return self._leadingComments != nil}
    /// Clears the value of `leadingComments`. Subsequent reads from it will return its default value.
    public mutating func clearLeadingComments() {self._leadingComments = nil}

    public var trailingComments: String {
      get {return _trailingComments ?? String()}
      set {_trailingComments = newValue}
    }
    /// Returns true if `trailingComments` has been explicitly set.
    public var hasTrailingComments: Bool {return self._trailingComments != nil}
    /// Clears the value of `trailingComments`. Subsequent reads from it will return its default value.
    public mutating func clearTrailingComments() {self._trailingComments = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    /// Used by the decoding initializers in the SwiftProtobuf library, not generally
    /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
    /// initializers are defined in the SwiftProtobuf library. See the Message and
    /// Message+*Additions` files.
    public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedInt32Field(value: &self.path)
        case 2: try decoder.decodeRepeatedInt32Field(value: &self.span)
        case 3: try decoder.decodeSingularStringField(value: &self._leadingComments)
        case 4: try decoder.decodeSingularStringField(value: &self._trailingComments)
        default: break
        }
      }
    }

    /// Used by the encoding methods of the SwiftProtobuf library, not generally
    /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
    /// other serializer methods are defined in the SwiftProtobuf library. See the
    /// `Message` and `Message+*Additions` files.
    public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if !self.path.isEmpty {
        try visitor.visitPackedInt32Field(value: self.path, fieldNumber: 1)
      }
      if !self.span.isEmpty {
        try visitor.visitPackedInt32Field(value: self.span, fieldNumber: 2)
      }
      if let v = self._leadingComments {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = self._trailingComments {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      try unknownFields.traverse(visitor: &visitor)
    }

    fileprivate var _leadingComments: String? = nil
    fileprivate var _trailingComments: String? = nil
  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.location)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.location.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.location, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.protobuf"

extension Google_Protobuf_FileDescriptorSet: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "file"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_FileDescriptorSet) -> Bool {
    if self.file != other.file {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_FileDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "package"),
    3: .same(proto: "dependency"),
    10: .standard(proto: "public_dependency"),
    11: .standard(proto: "weak_dependency"),
    4: .standard(proto: "message_type"),
    5: .standard(proto: "enum_type"),
    6: .same(proto: "service"),
    7: .same(proto: "extension"),
    8: .same(proto: "options"),
    9: .standard(proto: "source_code_info"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _package: String? = nil
    var _dependency: [String] = []
    var _publicDependency: [Int32] = []
    var _weakDependency: [Int32] = []
    var _messageType: [Google_Protobuf_DescriptorProto] = []
    var _enumType: [Google_Protobuf_EnumDescriptorProto] = []
    var _service: [Google_Protobuf_ServiceDescriptorProto] = []
    var _extension: [Google_Protobuf_FieldDescriptorProto] = []
    var _options: Google_Protobuf_FileOptions? = nil
    var _sourceCodeInfo: Google_Protobuf_SourceCodeInfo? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _package = source._package
      _dependency = source._dependency
      _publicDependency = source._publicDependency
      _weakDependency = source._weakDependency
      _messageType = source._messageType
      _enumType = source._enumType
      _service = source._service
      _extension = source._extension
      _options = source._options
      _sourceCodeInfo = source._sourceCodeInfo
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_FileDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._package != other_storage._package {return false}
        if _storage._dependency != other_storage._dependency {return false}
        if _storage._publicDependency != other_storage._publicDependency {return false}
        if _storage._weakDependency != other_storage._weakDependency {return false}
        if _storage._messageType != other_storage._messageType {return false}
        if _storage._enumType != other_storage._enumType {return false}
        if _storage._service != other_storage._service {return false}
        if _storage._extension != other_storage._extension {return false}
        if _storage._options != other_storage._options {return false}
        if _storage._sourceCodeInfo != other_storage._sourceCodeInfo {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_DescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "field"),
    6: .same(proto: "extension"),
    3: .standard(proto: "nested_type"),
    4: .standard(proto: "enum_type"),
    5: .standard(proto: "extension_range"),
    8: .standard(proto: "oneof_decl"),
    7: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _field: [Google_Protobuf_FieldDescriptorProto] = []
    var _extension: [Google_Protobuf_FieldDescriptorProto] = []
    var _nestedType: [Google_Protobuf_DescriptorProto] = []
    var _enumType: [Google_Protobuf_EnumDescriptorProto] = []
    var _extensionRange: [Google_Protobuf_DescriptorProto.ExtensionRange] = []
    var _oneofDecl: [Google_Protobuf_OneofDescriptorProto] = []
    var _options: Google_Protobuf_MessageOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _field = source._field
      _extension = source._extension
      _nestedType = source._nestedType
      _enumType = source._enumType
      _extensionRange = source._extensionRange
      _oneofDecl = source._oneofDecl
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_DescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._field != other_storage._field {return false}
        if _storage._extension != other_storage._extension {return false}
        if _storage._nestedType != other_storage._nestedType {return false}
        if _storage._enumType != other_storage._enumType {return false}
        if _storage._extensionRange != other_storage._extensionRange {return false}
        if _storage._oneofDecl != other_storage._oneofDecl {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_DescriptorProto.ExtensionRange: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "start"),
    2: .same(proto: "end"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_DescriptorProto.ExtensionRange) -> Bool {
    if self._start != other._start {return false}
    if self._end != other._end {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_FieldDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    3: .same(proto: "number"),
    4: .same(proto: "label"),
    5: .same(proto: "type"),
    6: .standard(proto: "type_name"),
    2: .same(proto: "extendee"),
    7: .standard(proto: "default_value"),
    9: .standard(proto: "oneof_index"),
    8: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _number: Int32? = nil
    var _label: Google_Protobuf_FieldDescriptorProto.Label? = nil
    var _type: Google_Protobuf_FieldDescriptorProto.TypeEnum? = nil
    var _typeName: String? = nil
    var _extendee: String? = nil
    var _defaultValue: String? = nil
    var _oneofIndex: Int32? = nil
    var _options: Google_Protobuf_FieldOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _number = source._number
      _label = source._label
      _type = source._type
      _typeName = source._typeName
      _extendee = source._extendee
      _defaultValue = source._defaultValue
      _oneofIndex = source._oneofIndex
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_FieldDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._number != other_storage._number {return false}
        if _storage._label != other_storage._label {return false}
        if _storage._type != other_storage._type {return false}
        if _storage._typeName != other_storage._typeName {return false}
        if _storage._extendee != other_storage._extendee {return false}
        if _storage._defaultValue != other_storage._defaultValue {return false}
        if _storage._oneofIndex != other_storage._oneofIndex {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_FieldDescriptorProto.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "TYPE_DOUBLE"),
    2: .same(proto: "TYPE_FLOAT"),
    3: .same(proto: "TYPE_INT64"),
    4: .same(proto: "TYPE_UINT64"),
    5: .same(proto: "TYPE_INT32"),
    6: .same(proto: "TYPE_FIXED64"),
    7: .same(proto: "TYPE_FIXED32"),
    8: .same(proto: "TYPE_BOOL"),
    9: .same(proto: "TYPE_STRING"),
    10: .same(proto: "TYPE_GROUP"),
    11: .same(proto: "TYPE_MESSAGE"),
    12: .same(proto: "TYPE_BYTES"),
    13: .same(proto: "TYPE_UINT32"),
    14: .same(proto: "TYPE_ENUM"),
    15: .same(proto: "TYPE_SFIXED32"),
    16: .same(proto: "TYPE_SFIXED64"),
    17: .same(proto: "TYPE_SINT32"),
    18: .same(proto: "TYPE_SINT64"),
  ]
}

extension Google_Protobuf_FieldDescriptorProto.Label: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "LABEL_OPTIONAL"),
    2: .same(proto: "LABEL_REQUIRED"),
    3: .same(proto: "LABEL_REPEATED"),
  ]
}

extension Google_Protobuf_OneofDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_OneofDescriptorProto) -> Bool {
    if self._name != other._name {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_EnumDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "value"),
    3: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _value: [Google_Protobuf_EnumValueDescriptorProto] = []
    var _options: Google_Protobuf_EnumOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _value = source._value
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_EnumDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._value != other_storage._value {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_EnumValueDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "number"),
    3: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _number: Int32? = nil
    var _options: Google_Protobuf_EnumValueOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _number = source._number
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_EnumValueDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._number != other_storage._number {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_ServiceDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "method"),
    3: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _method: [Google_Protobuf_MethodDescriptorProto] = []
    var _options: Google_Protobuf_ServiceOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _method = source._method
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_ServiceDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._method != other_storage._method {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_MethodDescriptorProto: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "input_type"),
    3: .standard(proto: "output_type"),
    4: .same(proto: "options"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _inputType: String? = nil
    var _outputType: String? = nil
    var _options: Google_Protobuf_MethodOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _inputType = source._inputType
      _outputType = source._outputType
      _options = source._options
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_MethodDescriptorProto) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._name != other_storage._name {return false}
        if _storage._inputType != other_storage._inputType {return false}
        if _storage._outputType != other_storage._outputType {return false}
        if _storage._options != other_storage._options {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_FileOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "java_package"),
    8: .standard(proto: "java_outer_classname"),
    10: .standard(proto: "java_multiple_files"),
    20: .standard(proto: "java_generate_equals_and_hash"),
    27: .standard(proto: "java_string_check_utf8"),
    9: .standard(proto: "optimize_for"),
    11: .standard(proto: "go_package"),
    16: .standard(proto: "cc_generic_services"),
    17: .standard(proto: "java_generic_services"),
    18: .standard(proto: "py_generic_services"),
    23: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_FileOptions) -> Bool {
    if self._javaPackage != other._javaPackage {return false}
    if self._javaOuterClassname != other._javaOuterClassname {return false}
    if self._javaMultipleFiles != other._javaMultipleFiles {return false}
    if self._javaGenerateEqualsAndHash != other._javaGenerateEqualsAndHash {return false}
    if self._javaStringCheckUtf8 != other._javaStringCheckUtf8 {return false}
    if self._optimizeFor != other._optimizeFor {return false}
    if self._goPackage != other._goPackage {return false}
    if self._ccGenericServices != other._ccGenericServices {return false}
    if self._javaGenericServices != other._javaGenericServices {return false}
    if self._pyGenericServices != other._pyGenericServices {return false}
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_FileOptions.OptimizeMode: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "SPEED"),
    2: .same(proto: "CODE_SIZE"),
    3: .same(proto: "LITE_RUNTIME"),
  ]
}

extension Google_Protobuf_MessageOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "message_set_wire_format"),
    2: .standard(proto: "no_standard_descriptor_accessor"),
    3: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_MessageOptions) -> Bool {
    if self._messageSetWireFormat != other._messageSetWireFormat {return false}
    if self._noStandardDescriptorAccessor != other._noStandardDescriptorAccessor {return false}
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_FieldOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ctype"),
    2: .same(proto: "packed"),
    5: .same(proto: "lazy"),
    3: .same(proto: "deprecated"),
    9: .standard(proto: "experimental_map_key"),
    10: .same(proto: "weak"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_FieldOptions) -> Bool {
    if self._ctype != other._ctype {return false}
    if self._packed != other._packed {return false}
    if self._lazy != other._lazy {return false}
    if self._deprecated != other._deprecated {return false}
    if self._experimentalMapKey != other._experimentalMapKey {return false}
    if self._weak != other._weak {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_FieldOptions.CType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "STRING"),
    1: .same(proto: "CORD"),
    2: .same(proto: "STRING_PIECE"),
  ]
}

extension Google_Protobuf_EnumOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    2: .standard(proto: "allow_alias"),
    3: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_EnumOptions) -> Bool {
    if self._allowAlias != other._allowAlias {return false}
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_EnumValueOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_EnumValueOptions) -> Bool {
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_ServiceOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    33: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_ServiceOptions) -> Bool {
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_MethodOptions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    33: .same(proto: "deprecated"),
    999: .standard(proto: "uninterpreted_option"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_MethodOptions) -> Bool {
    if self._deprecated != other._deprecated {return false}
    if self.uninterpretedOption != other.uninterpretedOption {return false}
    if unknownFields != other.unknownFields {return false}
    if _protobuf_extensionFieldValues != other._protobuf_extensionFieldValues {return false}
    return true
  }
}

extension Google_Protobuf_UninterpretedOption: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    2: .same(proto: "name"),
    3: .standard(proto: "identifier_value"),
    4: .standard(proto: "positive_int_value"),
    5: .standard(proto: "negative_int_value"),
    6: .standard(proto: "double_value"),
    7: .standard(proto: "string_value"),
    8: .standard(proto: "aggregate_value"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_UninterpretedOption) -> Bool {
    if self.name != other.name {return false}
    if self._identifierValue != other._identifierValue {return false}
    if self._positiveIntValue != other._positiveIntValue {return false}
    if self._negativeIntValue != other._negativeIntValue {return false}
    if self._doubleValue != other._doubleValue {return false}
    if self._stringValue != other._stringValue {return false}
    if self._aggregateValue != other._aggregateValue {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_UninterpretedOption.NamePart: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "name_part"),
    2: .standard(proto: "is_extension"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_UninterpretedOption.NamePart) -> Bool {
    if self._namePart != other._namePart {return false}
    if self._isExtension != other._isExtension {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_SourceCodeInfo: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "location"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_SourceCodeInfo) -> Bool {
    if self.location != other.location {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Google_Protobuf_SourceCodeInfo.Location: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "path"),
    2: .same(proto: "span"),
    3: .standard(proto: "leading_comments"),
    4: .standard(proto: "trailing_comments"),
  ]

  public func _protobuf_generated_isEqualTo(other: Google_Protobuf_SourceCodeInfo.Location) -> Bool {
    if self.path != other.path {return false}
    if self.span != other.span {return false}
    if self._leadingComments != other._leadingComments {return false}
    if self._trailingComments != other._trailingComments {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
