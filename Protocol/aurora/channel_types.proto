import public "aurora/api/client/v1/channel_id.proto";
import "aurora/attribute_types.proto";
import "aurora/entity_types.proto";
import "aurora/account_types.proto";
import "aurora/invitation_types.proto";
import "aurora/rpc_types.proto";

package blizzard.protocol.channel.v1;

message Message {
	repeated .blizzard.protocol.Attribute attribute = 1;

	extensions 100 to 10000;
}

message ListChannelsOptions {
	optional uint32 start_index = 1 [default = 0];
	optional uint32 max_results = 2 [default = 16];
	optional string name = 3;
	optional fixed32 program = 4;
	optional fixed32 locale = 5;
	optional uint32 capacity_full = 6;
	required .blizzard.protocol.AttributeFilter attribute_filter = 7;
	optional string channel_type = 8;
}

message ChannelDescription {
	required .blizzard.protocol.EntityId channel_id = 1;
	optional uint32 current_members = 2;
	optional .blizzard.protocol.channel.v1.ChannelState state = 3;
}

message ChannelInfo {
	required .blizzard.protocol.channel.v1.ChannelDescription description = 1;
	repeated .blizzard.protocol.channel.v1.Member member = 2;
}

message ChannelState {
	enum PrivacyLevel {
		PRIVACY_LEVEL_OPEN = 1;
		PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND = 2;
		PRIVACY_LEVEL_OPEN_INVITATION = 3;
		PRIVACY_LEVEL_CLOSED = 4;
	}

	optional uint32 max_members = 1;
	optional uint32 min_members = 2;
	repeated .blizzard.protocol.Attribute attribute = 3;
	repeated .blizzard.protocol.Invitation invitation = 4;
	optional uint32 reason = 6;
	optional .blizzard.protocol.channel.v1.ChannelState.PrivacyLevel privacy_level = 7 [default = PRIVACY_LEVEL_OPEN];
	optional string name = 8;
	optional string channel_type = 10 [default = "default"];
	optional fixed32 program = 11;
	optional bool subscribe_to_presence = 13 [default = true];

	extensions 100 to 10000;
}

message MemberAccountInfo {
	optional string battle_tag = 3;
}

message MemberState {
	repeated .blizzard.protocol.Attribute attribute = 1;
	repeated uint32 role = 2 [packed = true];
	optional uint64 privileges = 3 [default = 0];
	optional .blizzard.protocol.channel.v1.MemberAccountInfo info = 4;
}

message Member {
	required .blizzard.protocol.Identity identity = 1;
	required .blizzard.protocol.channel.v1.MemberState state = 2;
}

message SubscriberId {
	option (message_options).custom_validator = true;
	optional .blizzard.protocol.account.v1.AccountId account = 1 [deprecated = true];
	optional .blizzard.protocol.account.v1.GameAccountHandle game_account = 2;
	optional .blizzard.protocol.ProcessId process = 3;
}

