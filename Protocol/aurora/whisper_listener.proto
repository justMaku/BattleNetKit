import "aurora/whisper_types.proto";
import "aurora/account_types.proto";
import "aurora/rpc_types.proto";
import "aurora/message_types.proto";

package blizzard.protocol.whisper.v1;

message WhisperNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.whisper.v1.Whisper whisper = 2;
	optional string sender_battle_tag = 3;
}

message WhisperEchoNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.whisper.v1.Whisper whisper = 2;
}

message TypingIndicatorNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.account.v1.AccountId sender_id = 2;
	optional .blizzard.protocol.TypingIndicator action = 3 [default = TYPING_START];
}

message AdvanceViewTimeNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.account.v1.AccountId sender_id = 2;
	optional uint64 view_time = 3;
}

message WhisperUpdatedNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.whisper.v1.Whisper whisper = 2;
}

message AdvanceClearTimeNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	optional .blizzard.protocol.account.v1.AccountId sender_id = 2;
	optional uint64 clear_time = 3;
}

service WhisperListener {
	option (service_options).descriptor_name = "bnet.protocol.whisper.WhisperListener";
	option (sdk_service_options).inbound = true;
	rpc OnWhisper (.blizzard.protocol.whisper.v1.WhisperNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 1;
	}
	rpc OnWhisperEcho (.blizzard.protocol.whisper.v1.WhisperEchoNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 2;
	}
	rpc OnTypingIndicatorUpdate (.blizzard.protocol.whisper.v1.TypingIndicatorNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 3;
	}
	rpc OnAdvanceViewTime (.blizzard.protocol.whisper.v1.AdvanceViewTimeNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 4;
	}
	rpc OnWhisperUpdated (.blizzard.protocol.whisper.v1.WhisperUpdatedNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 5;
	}
	rpc OnAdvanceClearTime (.blizzard.protocol.whisper.v1.AdvanceClearTimeNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 6;
	}
}

