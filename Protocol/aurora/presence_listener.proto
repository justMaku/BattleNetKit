import "aurora/presence_types.proto";
import "aurora/account_types.proto";
import "aurora/rpc_types.proto";

package blizzard.protocol.presence.v1;

message SubscribeNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	repeated .blizzard.protocol.presence.v1.PresenceState state = 2;
}

message StateChangedNotification {
	optional .blizzard.protocol.account.v1.AccountId subscriber_id = 1;
	repeated .blizzard.protocol.presence.v1.PresenceState state = 2;
}

service PresenceListener {
	option (service_options).descriptor_name = "bnet.protocol.presence.v1.PresenceListener";
	option (sdk_service_options).inbound = true;
	rpc OnSubscribe (.blizzard.protocol.presence.v1.SubscribeNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 1;
	}
	rpc OnStateChanged (.blizzard.protocol.presence.v1.StateChangedNotification) returns (.blizzard.protocol.NO_RESPONSE) {
		option (method_options).id = 2;
	}
}

